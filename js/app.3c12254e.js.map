{"version":3,"file":"js/app.3c12254e.js","mappings":"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","sources":["webpack://thorviz/./src/App.vue","webpack://thorviz/./src/components/MainScreen.vue","webpack://thorviz/./src/config.js","webpack://thorviz/./src/components/parts/FPSCounter.vue","webpack://thorviz/./src/helpers/3D.js","webpack://thorviz/./src/helpers/EventTypes.js","webpack://thorviz/./src/components/parts/FPSCounter.vue?9287","webpack://thorviz/./src/helpers/MathUtil.js","webpack://thorviz/./src/helpers/physics/PhysicalObject.js","webpack://thorviz/./src/visual/shader/billboard.vert","webpack://thorviz/./src/visual/shader/node_obj_2.frag","webpack://thorviz/./src/helpers/TextBillboard.js","webpack://thorviz/./src/helpers/NodeEvent.js","webpack://thorviz/./src/helpers/THORUtil.js","webpack://thorviz/./src/helpers/data/NodeInfo.js","webpack://thorviz/./src/visual/NodeObject.js","webpack://thorviz/./src/helpers/physics/Simulation.js","webpack://thorviz/./src/visual/TitleLabel3D.js","webpack://thorviz/./src/visual/modes/ModeBase.js","webpack://thorviz/./src/helpers/physics/Attractor.js","webpack://thorviz/./src/helpers/physics/AttractorShape.js","webpack://thorviz/./src/helpers/physics/TCLogoShape.js","webpack://thorviz/./src/visual/modes/ModeNormal.js","webpack://thorviz/./src/visual/modes/ModeStatus.js","webpack://thorviz/./src/helpers/physics/CirclePack.js","webpack://thorviz/./src/helpers/data/IPAddressInfo.js","webpack://thorviz/./src/visual/modes/ModeProvider.js","webpack://thorviz/./src/helpers/data/Version.js","webpack://thorviz/./src/visual/modes/ModeVersion.js","webpack://thorviz/./src/visual/modes/ModeBond.js","webpack://thorviz/./src/visual/shader/globe_atmo_textured.frag","webpack://thorviz/./src/visual/shader/standard.vert","webpack://thorviz/./src/visual/modes/ModeGeo.js","webpack://thorviz/./src/visual/NodeGroup.js","webpack://thorviz/./src/helpers/data/NodeTracker.js","webpack://thorviz/./src/helpers/data/NodeSet.js","webpack://thorviz/./src/helpers/data/URLDataSource.js","webpack://thorviz/./src/helpers/data/Storage.js","webpack://thorviz/./src/visual/MainScene.js","webpack://thorviz/./src/visual/shader/bg_smoke.frag","webpack://thorviz/./src/visual/helpers/ScreenQuad.js","webpack://thorviz/./src/visual/helpers/Background.js","webpack://thorviz/./src/components/parts/ControlPanel.vue","webpack://thorviz/./src/components/parts/ControlPanel.vue?8974","webpack://thorviz/./src/components/NodeDetailsWindow.vue","webpack://thorviz/./src/components/NodeDetailsWindow.vue?1c42","webpack://thorviz/./src/visual/CameraController.js","webpack://thorviz/./src/components/parts/LoadingIndicator.vue","webpack://thorviz/./src/components/parts/LoadingIndicator.vue?a62b","webpack://thorviz/./src/components/MainScreen.vue?8f35","webpack://thorviz/./src/App.vue?7ccd","webpack://thorviz/./src/main.js","webpack://thorviz/webpack/bootstrap","webpack://thorviz/webpack/runtime/chunk loaded","webpack://thorviz/webpack/runtime/compat get default export","webpack://thorviz/webpack/runtime/define property getters","webpack://thorviz/webpack/runtime/global","webpack://thorviz/webpack/runtime/hasOwnProperty shorthand","webpack://thorviz/webpack/runtime/make namespace object","webpack://thorviz/webpack/runtime/node module decorator","webpack://thorviz/webpack/runtime/jsonp chunk loading","webpack://thorviz/webpack/startup"],"sourcesContent":["<template>\n    <MainScreen></MainScreen>\n</template>\n\n<script>\nimport MainScreen from \"@/components/MainScreen\";\nimport {preloadFont} from \"troika-three-text\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'App',\n    components: {\n        MainScreen,\n    },\n    data() {\n        return {}\n    },\n    computed: {},\n    created() {\n        document.title = 'THORViz'\n        this.preloading()\n    },\n    methods: {\n        preloading() {\n            preloadFont(\n                {\n                    font: Config.Font.Main,\n                    characters: 'abcdefghijklmnopqrstuvwxyz1234567890'\n                },\n                () => {\n                    console.log('font loading done')\n                }\n            )\n        }\n    }\n}\n</script>\n\n<style>\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: normal;\n    src: local('Norse'), url('../public/fonts/Norse-KaWl.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: bold;\n    src: local('Norse-Bold'), url('../public/fonts/NorseBold-2Kge.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'EXO2';\n    src: url('../public/fonts/Exo2-VariableFont_wght.ttf') format('truetype');\n}\n\n@supports(padding:max(0px)) {\n    body, header, footer {\n        padding-left: min(0vmin, env(safe-area-inset-left));\n        padding-right: min(0vmin, env(safe-area-inset-right));\n    }\n}\n\nhtml, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: 'EXO2', monospace;\n    background: black;\n    color: turquoise;\n}\n\na {\n    color: turquoise;\n}\n\na:visited {\n    text-decoration: none;\n}\n\n</style>\n","<template>\n    <div class=\"container\">\n        <!-- 3D -->\n        <div class=\"canvas-container\">\n            <canvas\n                ref=\"canvas\"\n                class=\"canvas-full\"\n                tabindex=\"1\"\n                @keypress.prevent=\"onKeyDown\"\n                @mousemove=\"onMouseMove\"\n                @mouseenter=\"onMouseEnter\"\n                @mouseleave=\"onMouseLeave\"\n                @click.prevent=\"onClick\"\n            >\n            </canvas>\n            <FPSCounter\n                v-show=\"showFps\"\n                ref=\"fps\"\n            >\n            </FPSCounter>\n\n            <LoadingIndicator v-if=\"isLoading\"></LoadingIndicator>\n\n            <ControlPanel @mode-selected=\"setSceneMode\" v-if=\"fullyLoaded\"></ControlPanel>\n        </div>\n\n        <!-- UI -->\n        <div class=\"ui-container\">\n            <keep-alive>\n                <NodeDetailsWindow\n                    v-if=\"nodeDetailsVisible\"\n                    :node=\"nodeToViewDetails\"\n                    :node-set=\"nodeSet\"\n                    @close=\"onCloseDetails\">\n                </NodeDetailsWindow>\n            </keep-alive>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\nimport \"@/css/common.css\"\nimport * as THREE from \"three\"\nimport {Config} from \"@/config\";\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport {UnrealBloomPass} from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport FPSCounter from \"@/components/parts/FPSCounter\";\nimport {MainScene} from \"@/visual/MainScene\";\nimport TWEEN from \"tween\";\nimport {Background} from \"@/visual/helpers/Background\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport ControlPanel from \"@/components/parts/ControlPanel\";\nimport NodeDetailsWindow from \"@/components/NodeDetailsWindow\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport {CameraController} from \"@/visual/CameraController\";\nimport LoadingIndicator from \"@/components/parts/LoadingIndicator\";\nimport _ from \"lodash\";\nimport {shallowRef} from \"vue\";\n// import {TrailTestScene} from \"@/visual/TrailTestScene\";\n\nexport default {\n    name: 'MainScreen',\n    components: {LoadingIndicator, NodeDetailsWindow, ControlPanel, FPSCounter},\n    props: {},\n\n    data() {\n        return {\n            isLoading: true,\n\n            showFps: Config.Debug.ShowFPS,\n\n            mouseEnterX: 0,\n            mouseEnterY: 0,\n\n            tickCounter: 0,\n\n            sceneMode: 'normal',\n\n            fullyLoaded: false,\n\n            nodeDetailsVisible: false,\n            nodeToViewDetails: new NodeInfo(),\n            zoomedToNode: false,\n\n            nodeSet: shallowRef(),\n        }\n    },\n\n    methods: {\n        onKeyDown(event) {\n            if (event.code === 'KeyR') {\n                this.cameraController.reset()\n            } else if (event.code === 'KeyF') {\n                this.showFps = !this.showFps\n            } else if (event.code === 'KeyH') {\n                console.log('help?')\n            }\n            // event.target.blur();\n        },\n\n        onMouseMove(event) {\n            const x = event.clientX\n            const y = event.clientY\n            if (!this.mouseEnterX) {\n                this.mouseEnterX = x\n                this.mouseEnterY = y\n                return\n            }\n            const scale = Config.Controls.Camera.MouseMoveStrength\n            const dx = this.mouseEnterX - x\n            const dy = this.mouseEnterY - y\n            this.mouseEnterX = x\n            this.mouseEnterY = y\n            this.cameraController.controls.rotate(dx * scale, dy * scale)\n\n            const pickedName = this._pickObject(event)?.name\n            this.content.nodeGroup.setElevatedNode(pickedName)\n\n            if (!this.zoomedToNode) {\n                this.nodeDetailsVisible = !!pickedName\n                if (this.nodeDetailsVisible) {\n                    this.nodeToViewDetails = this.content.findNodeByAddress(pickedName)\n                }\n            }\n        },\n\n        onMouseEnter(event) {\n            this.mouseEnterX = event.clientX\n            this.mouseEnterY = event.clientY\n        },\n\n        onMouseLeave() {\n        },\n\n        _pickObject(event, thoughtful = false) {\n            if (!this.raycaster) {\n                return null\n            }\n\n            const pickPosition = this.getCanvasRelativePosition(event)\n\n            // cast a ray through the frustum\n            this.raycaster.setFromCamera(pickPosition, this.cameraController.camera);\n            // get the list of objects the ray intersected\n            const intersectedObjects = this.raycaster.intersectObjects(this.content.nodeGroup.holder.children, true);\n            if (thoughtful) {\n                console.log('Objects hit by the ray caster: ' + intersectedObjects.length)\n            }\n\n            const namedObjects = _.filter(_.map(intersectedObjects, 'object'), o => o.name && o.name !== '')\n            return namedObjects.length ? namedObjects[0] : null\n        },\n\n        onClick(event) {\n            console.log(event)\n            // fixme: cannot pick when globe is rotated geo mode\n            const pickedObject = this._pickObject(event, true)\n            console.log(pickedObject)\n            if (pickedObject) {\n                const nodeAddress = pickedObject.name\n                if (nodeAddress && nodeAddress.startsWith('thor')) {\n                    this._onPickNodeObject(nodeAddress)\n                }\n            } else {\n                this.nodeDetailsVisible = false\n                this.cameraController.restoreCamera()\n            }\n        },\n\n        _onPickNodeObject(nodeAddress) {\n            console.log('Picked node:', nodeAddress)\n            this.content.pick(nodeAddress)\n\n            this.nodeToViewDetails = this.content.findNodeByAddress(nodeAddress)\n            this.nodeDetailsVisible = true\n\n            const nodeObj = this.content.nodeGroup.getByName(nodeAddress)\n            if (nodeObj) {\n                this.zoomedToNode = true\n                this.cameraController.cameraLookAtNode(nodeObj, this.content.nodeGroup.isCurrentModeFlat)\n            }\n        },\n\n        getCanvasRelativePosition(event) {\n            const rect = this.canvas.getBoundingClientRect()\n            const pos = {\n                x: event.clientX - rect.left,\n                y: event.clientY - rect.top,\n            }\n            return {\n                x: (pos.x / this.canvas.clientWidth) * 2 - 1,\n                y: -(pos.y / this.canvas.clientHeight) * 2 + 1\n            }\n        },\n\n        resizeRendererToDisplaySize() {\n            const renderer = this.renderer\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n\n            const needResize = this.composer._width !== width || this.composer._height !== height;\n            if (needResize) {\n                renderer.setSize(width, height, false);\n                if (this.bloomPass) {\n                    this.bloomPass.setSize(width, height);\n                }\n                this.composer.setSize(width, height);\n                if (this.bg) {\n                    this.bg.setSize(width, height)\n                }\n\n                this.cameraController.onResize()\n            }\n\n            return needResize;\n        },\n\n        render() {\n            // try {\n            let delta = this.clock.getDelta();\n\n            if (document.visibilityState === 'hidden') {\n                return\n            } else if (delta > 0.4) {\n                delta = 0.01\n            }\n\n            this.resizeRendererToDisplaySize(this.renderer)\n            TWEEN.update()\n            this.$refs.fps.update(delta, this.scene)\n            this.cameraController.update(delta)\n            this.content.update(delta)\n            if (this.bg) {\n                this.bg.update(delta)\n            }\n            this.composer.render(delta)\n            // } catch (e) {\n            //     console.error('Render error! ' + e)\n            // }\n\n            requestAnimationFrame(this.render);\n        },\n\n        makeSkybox() {\n            if (Config.Scene.Background.Enabled) {\n                // this.bg = new Background(this.scene)\n                // this.bg = new BlackgroundStaticBox(this.scene, Config.Scene.Sky.SkyBox, Config.Scene.Sky.SkyBoxExt)\n                this.bg = new Background(this.scene)\n                this.bg.install()\n            }\n        },\n\n        makeRenderer(canvas) {\n            let renderer = this.renderer = new THREE.WebGLRenderer({\n                canvas,\n                antialias: false,\n                logarithmicDepthBuffer: Config.Renderer.LogZBuffer,\n            });\n\n            if (devicePixelRatio) {\n                console.log(`Renderer: Setting devicePixelRatio = ${devicePixelRatio}.`)\n                renderer.setPixelRatio(devicePixelRatio)\n            }\n\n            const renderScene = new RenderPass(this.scene, this.cameraController.camera);\n\n            this.composer = new EffectComposer(renderer);\n            this.composer.addPass(renderScene);\n\n            const bloomCfg = Config.Effects.Bloom\n            if (bloomCfg.Enabled) {\n                this.bloomPass = new UnrealBloomPass(\n                    new THREE.Vector2(window.innerWidth, window.innerHeight),\n                    bloomCfg.Strength,\n                    bloomCfg.Radius,\n                    bloomCfg.Threshold)\n                this.composer.addPass(this.bloomPass);\n            }\n        },\n\n        buildScene() {\n            this.scene.add(this.cameraController.camera)\n            this.makeSkybox()\n\n            this.content = new MainScene(this.scene, this.cameraController.camera)\n            // this.content = new TrailTestScene(this.scene, this)\n        },\n\n        setSceneMode(mode) {\n            this.sceneMode = mode\n            if (this.content.nodeGroup) {\n                this.content.nodeGroup.mode = mode\n            }\n        },\n\n        onFullyLoaded() {\n            console.log('fully loaded! removing loading screen...')\n            this.isLoading = false\n            this.fullyLoaded = true\n        },\n\n        onDataArrived(nodeSet) {\n            this.nodeSet = nodeSet\n        },\n\n        onCloseDetails() {\n            this.zoomedToNode = false\n            this.nodeDetailsVisible = false\n            this.nodeToViewDetails = new NodeInfo()\n            this.cameraController.restoreCamera()\n        },\n    },\n\n    mounted() {\n        this.canvas = this.$refs.canvas\n\n        this.clock = new THREE.Clock()\n        this.scene = new THREE.Scene()\n\n        this.cameraController = new CameraController(this.canvas)\n        this.makeRenderer(this.canvas)\n        this.resizeRendererToDisplaySize()\n        this.buildScene()\n\n        this.raycaster = new THREE.Raycaster()\n        emitter.on(EventTypes.FullyLoaded, this.onFullyLoaded)\n        emitter.on(EventTypes.DataSourceTick, this.onDataArrived)\n\n        requestAnimationFrame(this.render);\n    },\n\n    unmounted() {\n        this.content.dispose()\n        this.cameraController.dispose()\n        emitter.off(EventTypes.FullyLoaded)\n        emitter.off(EventTypes.DataSourceTick)\n    }\n}\n\n</script>\n\n<style>\n\n.container {\n    position: relative;\n}\n\n.canvas-container {\n    position: absolute;\n    z-index: 8;\n}\n\n.ui-container {\n    position: absolute;\n    z-index: 10;\n}\n\n.canvas-full {\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n}\n\ncanvas {\n}\n\n*:focus {\n    outline: none;\n}\n\n</style>\n","const IsDev = process.env.NODE_ENV !== 'development'\n// const Live = false // process.env.USE_LOCAL_DATA !== \"1\"\nconst Live = true\n\n\nexport const Config = {\n    DataSource: {\n        NodesURL: (Live ?\n            'https://thornode.ninerealms.com' :\n            'http://localhost:8080/data/samplenodes.json'),\n\n        Nodes: {\n            PollPeriod: 3000.0, // msec\n        },\n\n        LastBlock: {\n            PollPeriod: 10000.0, // msec\n        },\n\n        ReactRandomDelay: 500.0, // msec\n        NodeJuggler: {\n            Enabled: IsDev\n        }\n    },\n    Font: {\n        // Main: 'fonts/NorseBold-2Kge.otf'\n        Main: 'fonts/Exo2-VariableFont_wght.ttf'\n    },\n    Effects: {\n        Bloom: {\n            Enabled: true,\n            Strength: 0.9,\n            Threshold: 0.5,\n            Radius: 1.2,\n        }\n    },\n    Controls: {\n        Camera: {\n            Distance: {\n                Min: 800,\n                Max: 2900,\n                Start: 2000,\n            },\n            AzimuthAngleLimit: 180,\n            PolarAngleLimit: 180,\n            MouseMoveStrength: 0.0002,\n\n            Animation: {\n                Duration: 500.0,\n                DistanceWhenZoomed: 300.0,\n                Shift: {\n                    X: -200.0\n                }\n            }\n        },\n    },\n    Scene: {\n        InitialMode: 'version', // todo: normal\n        Background: {\n            Enabled: !IsDev,  // todo: enable. disabled for better performance\n        },\n        Sky: {\n            SkyBox: 'texture/skybox/star',\n            SkyBoxExt: 'png',\n        },\n        NodeObject: {\n            Simple: false,\n            PlaneScale: 1.0,\n            MinRadius: 12.0,\n            MaxScale: 80.0,\n            MinScale: 10.0,\n            ScaleFactor: 1.0,\n            RadiusFactor: 0.3,\n            Animation: {\n                // todo use this configs!\n                ReactStatus: {\n                    DurationIn: 500, // ms\n                    DurationOut: 1250,\n                    BloatScale: 1.5,\n                },\n                ReactSlash: {\n                    Force: 100.0,\n                    RedDuration: 150.0, // ms\n                }\n            }\n        },\n        Globe: {\n            Enabled: true,\n            Details: 64,\n            Radius: 600.0,\n            NodeElevation: 20.0,\n            TextureMap: 'texture/globe/2k_earth_nightmap.jpeg',\n            // TextureMap: 'texture/globe/2k_earth_daymap.jpeg',\n            Clouds: {\n                ElevationScale: 1.005,\n                Opacity: 0.05,\n                Texture: 'texture/globe/earth_atmo.jpeg',\n            },\n            Atmosphere: {\n                ElevationScale: 1.15,\n            },\n            InnerAtmosphere: {\n                Enabled: true,\n            }\n        },\n    },\n    Physics: {\n        BaseForce: 3500.0,\n        RepelForce: 200.0, // 2000\n        Startup: {\n            SimulationSteps: 10,\n            DeltaTime: 0.1\n        },\n        BaseFriction: 0.07, //0.04\n        MaxSpeedSq: Math.pow(15000, 2),\n        Attractor: {\n            Flat: {\n                DeltaZ: 1.0,\n            }\n        },\n\n    },\n    Debug: {\n        ShowFPS: false,\n    },\n    Renderer: {\n        LogZBuffer: true,\n        // LogZBuffer: false,\n    },\n}\n\nexport const Colors = {\n    LightningBlue: 0x00CCFF,\n    YggdrasilGreen: 0x33FF99,\n    MidgardTurqoise: 0x23DCC8,\n    NightBlack: 0x101921\n}\n","<template>\n    <div class=\"fps-counter\">\n        <span><strong>{{ Number(fps).toFixed(2) }}</strong> FPS, {{ objCount }} objects</span>\n        <span class=\"activity\" v-show=\"activityIndicator\">•</span>\n    </div>\n</template>\n\n<script>\n\nimport {countObjects} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\n\nexport default {\n    name: 'FPSCounter',\n    props: {\n        updatePeriod: {\n            type: Number,\n            default: 1.0\n        }\n    },\n    data() {\n        return {\n            fps: 0.0,\n            objCount: 0,\n            activityIndicator: false,\n            lastUpdateTime: 0.0\n        }\n    },\n    methods: {\n        pokeActivity() {\n            this.activityIndicator = true\n            setTimeout(() => {\n                this.activityIndicator = false\n            }, 100)\n        },\n\n        update(delta, scene) {\n            if (delta > 0 && +Date.now() - this.updatePeriod * 1000 > this.lastUpdateTime) {\n                this.fps = 1.0 / delta\n                this.objCount = countObjects(scene)\n                this.lastUpdateTime = +Date.now()\n            }\n        },\n    },\n    unmounted() {\n        emitter.off(EventTypes.Activity, this.pokeActivity)\n    },\n    mounted() {\n        emitter.on(EventTypes.Activity, this.pokeActivity)\n    }\n}\n\n</script>\n\n<style scoped>\n\n.fps-counter {\n    text-align: left;\n    font-size: 14pt;\n    color: whitesmoke;\n    position: absolute;\n    margin: 10px;\n    left: 0;\n    top: 0;\n}\n</style>","import * as THREE from \"three\";\n\nexport function countObjects(parent) {\n    let numOfMeshes = 0;\n    parent.traverse(function () {\n        numOfMeshes++;\n    });\n    return numOfMeshes\n}\n\nexport function clearObject(obj) {\n    if (obj) {\n        obj.remove.apply(obj, obj.children);\n    }\n}\n\nexport function longLatTo3D(long, lat, r = 1) {\n    // const phi = (lat + 180.0) * PI180\n    // const theta = (long + 180.0) / PI180\n    // const x = -r * Math.cos(phi) * Math.cos(theta)\n    // const y = r * Math.cos(phi) * Math.sin(theta)\n    // const z = r * Math.sin(phi)\n\n    const phi = Math.PI * (0.5 - (lat / 180));\n    const theta = Math.PI * (0.5 + long / 180);\n    const spherical = new THREE.Spherical(r, phi, theta);\n    return new THREE.Vector3().setFromSpherical(spherical);\n}\n\nexport function distanceXY(v1, v2) {\n    const dx = v1.x - v2.x\n    const dy = v1.y - v2.y\n    return Math.sqrt(\n        dx * dx + dy * dy\n    )\n}\n","import mitt from \"mitt\";\n\nexport const EventTypes = {\n    FullyLoaded: 'fully_loaded',\n    DataSourceTick: 'data_source_tick',\n    Activity: 'activity',\n}\n\nexport const emitter = mitt();\n","import { render } from \"./FPSCounter.vue?vue&type=template&id=27eb1626&scoped=true\"\nimport script from \"./FPSCounter.vue?vue&type=script&lang=js\"\nexport * from \"./FPSCounter.vue?vue&type=script&lang=js\"\n\nimport \"./FPSCounter.vue?vue&type=style&index=0&id=27eb1626&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27eb1626\"]])\n\nexport default __exports__","import {Vector3} from \"three\";\nimport _ from \"lodash\";\nimport numbro from 'numbro';\n\nexport function defaultValue(x, defaultValue) {\n    return x === undefined ? defaultValue : x\n}\n\nexport function dec2hex(dec) {\n    return dec.toString(16).padStart(2, \"0\")\n}\n\nexport class Random {\n    static getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    static getRandomFloat(min, max) {\n        return Math.random() * (max - min) + min\n    }\n\n    static getRandomSample(array) {\n        if (!array) {\n            return null\n        }\n        const index = Random.getRandomInt(array.length)\n        return array[index]\n    }\n\n    static removeRandomItem(array) {\n        if (Math.random() > 0.5) {\n            const index = Random.getRandomInt(array.length)\n            array.splice(index, 1)\n        }\n        return array\n    }\n\n    static randomVector({xMin, xMax, yMin, yMax, zMin, zMax}) {\n        xMin = defaultValue(+xMin, -10)\n        xMax = defaultValue(+xMax, 10)\n        yMin = defaultValue(+yMin, -10)\n        yMax = defaultValue(+yMax, 10)\n        zMin = defaultValue(+zMin, -10)\n        zMax = defaultValue(+zMax, 10)\n\n        return new Vector3(\n            Random.getRandomFloat(xMin, xMax),\n            Random.getRandomFloat(yMin, yMax),\n            Random.getRandomFloat(zMin, zMax),\n        )\n    }\n\n    static randomOnCircle(r = 100, cx = 0, cy = 0) {\n        const phase = Random.getRandomFloat(0, 2 * Math.PI)\n        return new Vector3(\n            cx + r * Math.cos(phase),\n            cy + r * Math.sin(phase)\n        )\n    }\n\n    static getRandomIntRange(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;  // [min, max)\n    }\n\n    // generateId :: Integer -> String\n    static generateId(len) {\n        const arr = new Uint8Array((len || 20) / 2)\n        window.crypto.getRandomValues(arr)\n        return Array.from(arr, dec2hex).join('')\n    }\n}\n\nexport class Section {\n    constructor(p1, p2) {\n        this.p1 = p1\n        this.p2 = p2\n    }\n\n    get dx() {\n        return this.p2.x - this.p1.x\n    }\n\n    get dy() {\n        return this.p2.y - this.p1.y\n    }\n\n    whichSide(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n        return Math.sign(A * C - B * D);\n    }\n\n    get center() {\n        return {\n            x: 0.5 * (this.p1.x + this.p2.x),\n            y: 0.5 * (this.p1.y + this.p2.y)\n        }\n    }\n\n    nearestPoint(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n\n        const dot = A * C + B * D;\n        const len_sq = C * C + D * D;\n        let param = -1;\n        if (len_sq !== 0) {\n            param = dot / len_sq;\n        }\n\n        if (param < 0) {\n            x = this.p1.x\n            y = this.p1.y\n        } else if (param > 1) {\n            x = this.p2.x\n            y = this.p2.y\n        } else {\n            x = this.p1.x + param * C;\n            y = this.p1.y + param * D;\n        }\n        return {x, y}\n    }\n\n    pDistance(xo, yo) {\n        const nearestPoint1 = this.nearestPoint(xo, yo)\n        return new Section(nearestPoint1, {x: xo, y: yo}).length\n    }\n\n    get length() {\n        const dx = this.dx\n        const dy = this.dy\n        return Math.sqrt(dx * dx + dy * dy)\n    }\n}\n\nexport class Util {\n    static clamp(x, xMin, xMax) {\n        return Math.min(+xMax, Math.max(+xMin, +x))\n    }\n\n    static centerOf(group) {\n        if (!group || !group.length) {\n            return\n        }\n        let sumX = _.sumBy(group, item => item.x)\n        let sumY = _.sumBy(group, item => item.y)\n        return {\n            x: sumX / group.length,\n            y: sumY / group.length\n        }\n    }\n\n    static _signHelper(p1, p2, p3) {\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n    }\n\n    static pointInTriangle(pt, threePts) {\n        const [v1, v2, v3] = threePts\n        const d1 = Util._signHelper(pt, v1, v2);\n        const d2 = Util._signHelper(pt, v2, v3);\n        const d3 = Util._signHelper(pt, v3, v1);\n\n        const hasNeg = (d1 < 0) || (d2 < 0) || (d3 < 0);\n        const hasPos = (d1 > 0) || (d2 > 0) || (d3 > 0);\n\n        return !(hasNeg && hasPos);\n    }\n}\n\nexport function shortNumber(x, mantissa = 2, postFix = '') {\n    return numbro(x).format({\n        average: true,\n        mantissa,\n    }) + postFix\n}\n\nexport function fullNumber(x, postFix) {\n    return numbro(x).format({\n        thousandSeparated: true\n    }) + postFix\n}\n\nexport const RUNE = 'Rune'\n\nexport function shortRune(x, mantissa = 2) {\n    return shortNumber(x, mantissa, ' ' + RUNE)\n}\n\nexport function fullRune(x) {\n    return fullNumber(x, ' ' + RUNE)\n}\n","import {Vector3} from \"three\";\nimport {Util} from \"@/helpers/MathUtil\";\nimport {Config} from \"@/config\";\n\nexport class PhysicalObject {\n    constructor() {\n        this.mass = 1.0\n        this.force = new Vector3()\n        this.velocity = new Vector3()\n        this.friction = 0.0\n        this.attractors = []\n    }\n\n    update(dt) {\n        if (this.attractors.forEach) {\n            this.attractors.forEach(attr => attr.applyForce(this))\n        } else if (this.attractors.applyForce) {\n            this.attractors.applyForce(this)\n        }\n\n        const acceleration = this.force.multiplyScalar(this.mass)\n        this.velocity.copy(this.velocity.clone().add(acceleration.multiplyScalar(dt)))\n        this.velocity.multiplyScalar(Util.clamp(1.0 - this.friction, 0.0, 1.0))\n        if (this.velocity.lengthSq() > Config.Physics.MaxSpeedSq) {\n            this.velocity.setLength(Math.sqrt(Config.Physics.MaxSpeedSq))\n        }\n        this.realObject.position.add(this.velocity.clone().multiplyScalar(dt))\n    }\n\n    nullifyForce() {\n        this.force.set(0.0, 0.0, 0.0)\n    }\n\n    get radius() {\n        return 1.0\n    }\n\n    applyForceTo(direction, force) {\n        this.force.add(direction.copy().multiplyScalar(force))\n    }\n\n    get realObject() {\n        return this\n    }\n\n    repel(physObj, forceMult = 100.0) {\n        if (physObj === this) {\n            return\n        }\n\n        const thisPos = this.realObject.position\n        const otherPos = physObj.realObject.position\n\n        const d = thisPos.distanceTo(otherPos)\n        const minDistance = (this.radius + physObj.radius)\n        if (d < minDistance) {\n            const lineDir = thisPos\n                .clone()\n                .sub(otherPos)\n                .normalize()\n                .multiplyScalar(forceMult)\n            this.force.add(lineDir)\n            physObj.force.add(lineDir.negate())\n        }\n    }\n\n    get boundingBox() {\n        const x = this.realObject.position.x\n        const y = this.realObject.position.y\n        const r = this.radius\n        return {\n            minX: x - r,\n            minY: y - r,\n            maxX: x + r,\n            maxY: y + r,\n        }\n    }\n\n    shootOut(force = 1) {\n        const velocity = this.o.position.clone().normalize().multiplyScalar(force)\n        this.velocity.copy(velocity)\n    }\n}","export default \"#ifdef USE_LOGDEPTHBUF\\n#ifdef USE_LOGDEPTHBUF_EXT\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#else\\nuniform float logDepthBufFC;\\n#endif\\n#endif\\n\\n// optional: pass 2D rotation angle as an uniform\\nuniform float rotation;\\n// optional: pass 2D center point as an uniform\\nuniform vec2 center;\\n\\nvarying vec2 vUv;\\n\\n// optional: use this define to scale the model according to distance from the camera\\n#define USE_SIZEATTENUATION\\n\\n// [skipped includes]\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    // discard rotation and scale\\n    vec4 mvPosition = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);\\n\\n    // extract model's scale\\n    vec2 scale;\\n    scale.x = length(vec3(modelMatrix[0].x, modelMatrix[0].y, modelMatrix[0].z));\\n    scale.y = length(vec3(modelMatrix[1].x, modelMatrix[1].y, modelMatrix[1].z));\\n\\n    // if not defined, keep model the same size regardless of distance from the camera\\n    #ifndef USE_SIZEATTENUATION\\n    bool isPerspective = isPerspectiveMatrix(projectionMatrix);\\n    if (isPerspective) scale *= - mvPosition.z;\\n    #endif\\n\\n    // if center is not passed as uniform, create vec2 center = vec2(0.0);\\n\\n    // aligned with the camera [and scaled]\\n    vec2 alignedPosition = (position.xy - center) * scale;\\n\\n    // if rotation is not passed as uniform, skip the next block\\n\\n    // rotate 2D\\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y;\\n    rotatedPosition.y = sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y;\\n\\n    // billboard\\n    mvPosition.xy += rotatedPosition;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    // [skipped includes]\\n    #ifdef USE_LOGDEPTHBUF\\n        #ifdef USE_LOGDEPTHBUF_EXT\\n    vFragDepth = 1.0 + gl_Position.w;\\n//    vIsPerspective = float(isPerspectiveMatrix(projectionMatrix));\\n    vIsPerspective = 1.0;\\n        #else\\n//    if (isPerspectiveMatrix(projectionMatrix)) {\\n        gl_Position.z = log2(max(EPSILON, gl_Position.w + 1.0)) * logDepthBufFC - 1.0;\\n        gl_Position.z *= gl_Position.w;\\n//    }\\n        #endif\\n    #endif\\n}\";","export default \"// port from http://glslsandbox.com/e#8625.0 by Duke\\n// Fireball\\n// Awd\\n// @AlexWDunn\\n\\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\nuniform float logDepthBufFC;\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#endif\\n\\nuniform float time;\\nuniform float saturation;\\n\\nuniform float transitionShininess;\\n\\nuniform vec3 color;\\n\\nvarying vec2 vUv;\\n\\n#define saturate(oo) clamp(oo, 0.0, 1.0)\\n\\n// Quality Settings\\n#define MarchSteps 5\\n// Scene Settings\\n#define ExpPosition vec3(0.0)\\n#define Radius 1.0\\n#define Background vec4(0.0, 0.0, 0.0, 0.0)\\n// Noise Settings\\n#define NoiseSteps 1\\n#define NoiseAmplitude 0.06\\n//#define NoiseFrequency 4.0\\n#define NoiseFrequency 2.0\\n#define Animation vec3(0.0, -3.0, 0.5)\\n\\n// Colour Gradient\\n#define Color1 vec4(1.0, 1.0, 1.0, 1.0)\\n#define Color2 vec4(0.2, 0.8, 1.0, 1.0)\\n#define Color3 vec4(0.2, 0.03, 1.0, 1.0)\\n#define Color4 vec4(0.05, 0.02, 0.02, 0.3)\\n\\nconst float zoom = 2.8f;// 2.5 full\\n\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n//\\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 permute(vec4 x) { return mod289(((x * 34.0) + 1.0) * x); }\\nvec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\\n\\nfloat snoise(vec3 v)\\n{\\n    const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\\n    const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\\n    // First corner\\n    vec3 i = floor(v + dot(v, C.yyy));\\n    vec3 x0 = v - i + dot(i, C.xxx);\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min(g.xyz, l.zxy);\\n    vec3 i2 = max(g.xyz, l.zxy);\\n    vec3 x1 = x0 - i1 + C.xxx;\\n    vec3 x2 = x0 - i2 + C.yyy;// 2.0*C.x = 1/3 = C.y\\n    vec3 x3 = x0 - D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\\n    // Permutations\\n    i = mod289(i);\\n    vec4 p = permute(permute(permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n    float n_ = 0.142857142857;// 1.0/7.0\\n    vec3 ns = n_ * D.wyz - D.xzx;\\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);//  mod(p,7*7)\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_);// mod(j,N)\\n    vec4 x = x_ * ns.x + ns.yyyy;\\n    vec4 y = y_ * ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n    vec4 b0 = vec4(x.xy, y.xy);\\n    vec4 b1 = vec4(x.zw, y.zw);\\n    vec4 s0 = floor(b0) * 2.0 + 1.0;\\n    vec4 s1 = floor(b1) * 2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n    vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\\n    vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\\n    vec3 p0 = vec3(a0.xy, h.x);\\n    vec3 p1 = vec3(a0.zw, h.y);\\n    vec3 p2 = vec3(a1.xy, h.z);\\n    vec3 p3 = vec3(a1.zw, h.w);\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\\n}\\n\\n\\n\\nfloat Turbulence(vec3 position, float minFreq, float maxFreq, float qWidth)\\n{\\n    float value = 0.0;\\n    float cutoff = clamp(0.5 / qWidth, 0.0, maxFreq);\\n    float fade;\\n    float fOut = minFreq;\\n    for (int i = NoiseSteps; i >= 0; i--)\\n    {\\n        if (fOut >= 0.5 * cutoff) break;\\n        fOut *= 2.0;\\n        value += abs(snoise(position * fOut)) / fOut;\\n    }\\n    fade = clamp(2.0 * (cutoff - fOut) / cutoff, 0.0, 1.0);\\n    value += fade * abs(snoise(position * fOut)) / fOut;\\n    return 1.0 - value;\\n}\\n\\nfloat SphereDist(vec3 position)\\n{\\n    return length(position - ExpPosition) - Radius;\\n}\\n\\nvec4 Shade(float distance)\\n{\\n    float c1 = clamp(distance * 5.0 + 0.5, 0.0, 1.0);\\n    float c2 = clamp(distance * 5.0, 0.0, 1.0);\\n    float c3 = clamp(distance * 3.4 - 0.5, 0.0, 1.0);\\n\\n    //    #define Color1 vec4(1.0, 1.0, 1.0, 1.0)   -- white\\n    //    #define Color2 vec4(0.2, 0.8, 1.0, 1.0) --- green\\n    //    #define Color3 vec4(0.2, 0.03, 1.0, 1.0)  -- blue\\n    //    #define Color4 vec4(0.05, 0.02, 0.02, 0.3) -- black transparent\\n\\n    vec4 original = vec4(color, 1.0);\\n    vec4 a = mix(Color1, Color3, c1);\\n    vec4 b = mix(a, Color4, c2);\\n    return mix(original, b, c3);\\n}\\n\\n// Draws the scene\\nfloat RenderScene(vec3 position, out float distance)\\n{\\n    float noise = Turbulence(position * NoiseFrequency + Animation * time, 0.1, 1.5, 0.03) * NoiseAmplitude;\\n    noise = clamp(abs(noise), 0.0, 1.0);\\n    distance = SphereDist(position) - noise;\\n    return noise;\\n}\\n\\n// Basic ray marching method.\\nvec4 March(vec3 rayOrigin, vec3 rayStep)\\n{\\n    vec3 position = rayOrigin;\\n    float distance;\\n    float displacement;\\n    for (int step = MarchSteps; step >= 0; --step)\\n    {\\n        displacement = RenderScene(position, distance);\\n        if (distance < 0.05) break;\\n        position += rayStep * distance;\\n    }\\n    return mix(Shade(displacement), Background, float(distance >= 0.5));\\n}\\n\\nbool IntersectSphere(vec3 ro, vec3 rd, vec3 pos, float radius, out vec3 intersectPoint)\\n{\\n    vec3 relDistance = (ro - pos);\\n    float b = dot(relDistance, rd);\\n    float c = dot(relDistance, relDistance) - radius * radius;\\n    float d = b * b - c;\\n    intersectPoint = ro + rd * (-b - sqrt(d));\\n    return d >= 0.0;\\n}\\n\\nconst float circleThickness = 0.15;\\nconst float circleRadius = 0.78;\\n\\nvoid main()\\n{\\n    vec2 p = vUv * 2.0 - 1.0;\\n\\n    // camera\\n    vec3 ro = zoom * vec3(.7, .7, 0.0);\\n    vec3 ww = normalize(vec3(0.0, 0.0, 0.0) - ro);\\n    vec3 uu = normalize(cross(vec3(0.0, 1.0, 0.0), ww));\\n    vec3 vv = normalize(cross(ww, uu));\\n    vec3 rd = normalize(p.x * uu + p.y * vv + 1.5 * ww);\\n    //    vec3 rd = normalize(p.x*uu + p.y*vv + zoom_f * ww);\\n    vec4 col = Background;\\n    vec3 origin;\\n    if (IntersectSphere(ro, rd, ExpPosition, Radius + NoiseAmplitude * 6.0, origin))\\n    {\\n        col = March(origin, rd);\\n    }\\n\\n    float d = length(p);\\n    if (saturation > 1.0) {\\n        //  1.0 - smoothstep(radius-borderThickness, radius, d);\\n        float t = 1.0 - smoothstep(0.0, circleRadius, abs(circleThickness - d));\\n        col = mix(col * saturation, vec4(0.9, 0.9, 1.0, 0.5), clamp(t, 0.0, 0.5));\\n    }\\n\\n    if(transitionShininess > 0.0) {\\n        vec4 shineColor = vec4(0.8, 0.9, 1.0, 1.0);\\n        col += shineColor * transitionShininess * clamp(1.0 - d * 0.9, 0.0, 1.0);\\n    }\\n\\n    gl_FragColor = col;\\n\\n    #if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n    // Doing a strict comparison with == 1.0 can cause noise artifacts\\n    // on some platforms. See issue #17623.\\n    gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2(vFragDepth) * logDepthBufFC * 0.5;\\n    #endif\\n}\\n\";","import { createDerivedMaterial } from 'troika-three-utils'\n\nexport function createBillboardMaterial(baseMaterial, opts) {\n    return createDerivedMaterial(\n        baseMaterial,\n        Object.assign(\n            {\n                vertexMainOutro: `\n                    vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n                    vec3 scale = vec3(\n                      length(modelViewMatrix[0].xyz),\n                      length(modelViewMatrix[1].xyz),\n                      length(modelViewMatrix[2].xyz)\n                      );\n                    // size attenuation: scale *= -mvPosition.z * 0.2;\n                    mvPosition.xyz += position * scale;\n                    gl_Position = projectionMatrix * mvPosition;\n                    `\n            },\n            opts\n        )\n    )\n}\n","const EVENT_TYPE = Object.freeze({\n    CREATE: 'create',\n    DESTROY: 'destroy',\n\n    SLASH: 'slash',\n    IP_ADDRESS: 'ip_address',\n    STATUS: 'status',\n    VERSION: 'version',\n    FORCED_LEAVE: 'forced_to_leave',\n    REQUESTED_LEAVE: 'requested_to_leave',\n    AWARD: 'current_award',\n    BOND_CHANGE: 'bond',\n    OBSERVE_CHAIN: 'observe_chains',\n    ACTIVE_BLOCK_HEIGHT: 'active_block_height',\n})\n\nexport class NodeEvent {\n    constructor(type, node, prevNode, currValue, prevValue) {\n        this.type = type\n        this.node = node\n        this.prevNode = prevNode\n        this.currValue = currValue\n        this.prevValue = prevValue\n        this.isTramp = node ? node.address === '' : false\n    }\n\n    toString() {\n        const addr = this.node ? this.node.address : '?'\n        return `NodeEvent(${this.type}, ${addr}, ${this.currValue} => ${this.prevValue})`\n    }\n}\n\nNodeEvent.EVENT_TYPE = EVENT_TYPE\n","export const SEC_PER_BLOCK = 6.0\n\nexport const THOR_DECIMAL = Math.pow(10, 8)\nexport const THOR_DECIMAL_INV = 1.0 / THOR_DECIMAL\n\nexport function thorToFloat(x) {\n    return parseFloat(x) * THOR_DECIMAL_INV\n}\n","import {thorToFloat} from \"@/helpers/THORUtil\";\n\nexport class NodeInfo {\n    constructor(node) {\n        if (!node) {\n            node = {\n                status: 'Unknown',\n                jail: {},\n                bond_providers: {},\n                preflight_status: {},\n            }\n        }\n\n        this.address = node.node_address\n        this.status = node.status\n        this.bond = thorToFloat(node.bond)\n        this.activeBlockHeight = +node.active_block_height\n        this.bondAddress = node.bond_address\n        this.statusSince = +node.status_since\n        this.requestedToLeave = !!node.requested_to_leave\n        this.forcedToLeave = !!node.forced_to_leave\n        this.leaveHeight = +node.leave_height\n        this.IPAddress = node.ip_address\n        this.version = node.version\n        this.slashPoints = +node.slash_points\n        this.jail = {\n            address: node.jail.node_address,\n            releaseHeight: +node.jail.release_height,\n            reason: node.jail.reason,\n        }\n        this.currentAward = thorToFloat(node.current_award)\n\n        this.observeChains = {}\n\n        if (node['observe_chains']) {\n            for (let {chain, height} of node['observe_chains']) {\n                this.observeChains[chain] = +height\n            }\n        }\n\n        this.preflightStatus = {\n            status: node.preflight_status.status,\n            reason: node.preflight_status.reason,\n            code: +node.preflight_status.code\n        }\n\n        this.bondProviders = {\n            address: node.bond_providers['node_address'],\n            fee: (+node.bond_providers['node_operator_fee']) / 10000.0,\n            providers: []\n        }\n\n        if (node.bond_providers.providers) {\n            for (let {bond_address, bond} of node.bond_providers.providers) {\n                this.bondProviders.providers.push({\n                    bond_address,\n                    bond: thorToFloat(bond)\n                })\n            }\n        }\n\n        // post init\n        this.shortAddress = this.address ? this.address.substring(this.address.length - 4) : '?'\n\n        this.IPInfo = {\n            flag: '🏳️'\n        }\n\n        // this.requestedToLeave = true\n        // this.forcedtoLeave = true\n    }\n\n    get isActive() {\n        return this.status === NodeStatus.Active\n    }\n\n    get isStandby() {\n        return this.status === NodeStatus.Standby || this.status === NodeStatus.Ready\n    }\n}\n\nexport const NodeStatus = {\n    Standby: 'Standby',\n    Ready: 'Ready',\n    Whitelisted: 'Whitelisted',\n    Disabled: 'Disabled',\n    Active: 'Active',\n    Unknown: 'Unknown',\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial, Vector3} from \"three\";\nimport {Random, Util} from \"@/helpers/MathUtil\";\nimport {Text} from 'troika-three-text'\nimport {Colors, Config} from \"@/config\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport StdVertexShader from '@/visual/shader/billboard.vert'\n// import StdVertexShader from '@/visual/shader/standard.vert'\n// import FragShader1 from '@/visual/shader/node_obj_3_rays.frag'\n// import FragShader1 from '@/visual/shader/node_obj_1.frag'\nimport FragShader1 from '@/visual/shader/node_obj_2.frag'\nimport {randFloat} from \"three/src/math/MathUtils\";\nimport {clamp} from \"lodash\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\nimport TWEEN from \"tween\";\n\n\nconst noCfg = Config.Scene.NodeObject\nconst geomSize = noCfg.PlaneScale\n\n// const geometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\nconst geometry = new THREE.BoxGeometry(geomSize, geomSize, geomSize)\n// const geometry = new THREE.IcosahedronGeometry(noCfg.PlaneScale, 1)\n// const geometry = new THREE.PlaneGeometry(noCfg.PlaneScale, noCfg.PlaneScale)\nconst simpleGeometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\n\nconst SlashColor = 0xff3300\n\nconst NormalLabelZ = 42.42\n\nconst CirclePackFactor = 1 / Math.sqrt(0.72)\n\nexport class NodeObject extends PhysicalObject {\n    constructor(node) {\n        super()\n\n        this.node = node\n        this.normalizedBond = this.node.bond / 1_000_000  // millions of Rune\n        this.mass = this.normalizedBond + 1.0\n\n        this.o = new THREE.Group()\n        this.o.name = this.name\n\n        this.attractors = []\n        this.mass = 1.0 + this.normalizedBond * 2.0\n        this.friction = Config.Physics.BaseFriction\n\n        this._makeSphere()\n        this._makeLabel()\n\n        this._elevated = false\n    }\n\n    get name() {\n        return this.node.address\n    }\n\n    set elevated(v) {\n        v = Boolean(v)\n        if (this._elevated !== v) {\n            this._elevated = v\n\n            this.material.uniforms.saturation.value = this._elevated ? 1.5 : 1.0\n            this.material.uniformsNeedUpdate = true\n        }\n    }\n\n    get elevated() {\n        return this._elevated\n    }\n\n    _getSphereColor() {\n        let color = 0x111111;\n        const st = this.node.status\n        if (st === NodeStatus.Standby) {\n            color = 0x167a56\n        } else if (st === NodeStatus.Ready) {\n            color = 0x167a8f\n        } else if (st === NodeStatus.Active) {\n            color = Random.getRandomSample([\n                Colors.LightningBlue,\n                Colors.YggdrasilGreen\n            ])\n        } else if (st === NodeStatus.Disabled) {\n            color = 0xee0000\n        } else if (st === NodeStatus.Whitelisted) {\n            color = 0x444444\n        } else if (st === NodeStatus.Unknown) {\n            color = 0x111144\n        }\n        return new THREE.Color(color)\n    }\n\n    _makeSphere() {\n        if (!this.mesh) {\n            if (Config.Scene.NodeObject.Simple) {\n                this._makeSimpleSphere()\n            } else {\n                this._makeCoolSphere()\n            }\n        }\n\n        if (this.material.uniforms) {\n            this.material.uniforms.color.value = this._getSphereColor()\n            this.material.uniformsNeedUpdate = true\n        }\n\n        this.mesh.name = this.name\n        this.mesh.renderOrder = 1\n\n        const scale = this.calculateScale\n        this.mesh.scale.setScalar(scale)\n\n        this.mesh.position.z = randFloat(-0.1, 0.1)\n        this.o.renderOrder = 1\n        this.o.add(this.mesh)\n    }\n\n    _makeSimpleSphere() {\n        // simpleGeometry\n        this.material = new THREE.MeshBasicMaterial({\n            color: this._getSphereColor()\n        })\n        this.mesh = new THREE.Mesh(simpleGeometry, this.material)\n    }\n\n    _makeCoolSphere() {\n        if (!this.material) {\n            this._makeMaterial()\n        }\n\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        return this.mesh\n    }\n\n    _makeMaterial() {\n        // material\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                \"time\": {value: Random.getRandomFloat(0.0, 100.0)},\n                \"saturation\": {value: 1.0},\n                \"color\": {value: this._getSphereColor()},\n                \"transitionShininess\": {value: 0.0},\n            },\n            vertexShader: StdVertexShader,\n            fragmentShader: FragShader1,\n            transparent: true,\n            depthTest: true,\n            depthWrite: true,\n            // sizeAttenuation: true,\n        })\n    }\n\n    get calculateScale() {\n        const scale = this.normalizedBond * noCfg.MaxScale\n        return Util.clamp(scale, noCfg.MinScale, noCfg.MaxScale)\n    }\n\n    get realObject() {\n        return this.o\n    }\n\n    get position() {\n        return this.o.position\n    }\n\n    _makeLabel() {\n        const address = this.node.address\n        if (address && address.length >= 4) {\n            const nameTextObj = this.nameTextObj = new Text()\n\n            nameTextObj.text = address.slice(-4)\n            nameTextObj.font = Config.Font.Main\n            nameTextObj.fontWeight = 900\n            nameTextObj.fontSize = 15\n            nameTextObj.position.z = NormalLabelZ\n            nameTextObj.color = this.node.status === NodeStatus.Active ? 0xFFFFFF : 0xBBBBBB;\n            nameTextObj.anchorX = 'center'\n            nameTextObj.anchorY = 'middle'\n            nameTextObj.outlineWidth = 2.0\n            nameTextObj.sync()\n            nameTextObj.renderOrder = 100\n            nameTextObj.name = this.name\n            nameTextObj.material = createBillboardMaterial(new MeshBasicMaterial())\n            nameTextObj.scale.setScalar(\n                clamp(this.normalizedBond * 1.1, 0.5, 1.5)\n            )\n            this.o.add(nameTextObj)\n            this.labelObj = nameTextObj\n        }\n    }\n\n    dispose() {\n        if (this.nameTextObj) {\n            this.nameTextObj.dispose()\n        }\n        this.material.dispose()\n    }\n\n    get radius() {\n        return Math.max(noCfg.MinRadius, this.mesh.scale.x * noCfg.PlaneScale * noCfg.RadiusFactor)\n    }\n\n    static estimateRadiusOfGroup(nodeObjList) {\n        let sum_r2 = 0.0\n        for (const nodeObj of nodeObjList) {\n            sum_r2 += nodeObj.radius * nodeObj.radius\n        }\n        const r = Math.sqrt(sum_r2)\n        return Math.max(0.1, CirclePackFactor * r)\n    }\n\n    update(dt) {\n        super.update(dt);\n\n        if (this.material) {\n            this.material.uniforms.time.value += dt\n        }\n\n        // todo: remove debug\n        // if (Math.random() > 0.99) {\n        //     this._animateTransitionShininess()\n        // }\n    }\n\n    updateFromCamera(camera) {\n        const dir = camera.position.clone().sub(this.position)\n        dir.normalize().multiplyScalar(NormalLabelZ)\n        this.nameTextObj.position.copy(dir)\n    }\n\n    // ----------------- R E A C T I O N S -------------------\n\n    react(event) {\n        this.node = event.node\n        if (event.type === NodeEvent.EVENT_TYPE.OBSERVE_CHAIN) {\n            this.reactChain()\n        } else if (event.type === NodeEvent.EVENT_TYPE.SLASH) {\n            this.reactSlash()\n        } else if (event.type === NodeEvent.EVENT_TYPE.STATUS) {\n            this.reactStatusChange(event.node.status)\n        } else if(event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            this.reactVersion()\n        }\n    }\n\n    reactChain() {\n        const chainReactionVelocity = 1.0 // 100\n        // this.mesh.rotateZ(1.0)\n        const pos = this.o.position.clone().normalize()\n        const perp = pos.cross(new Vector3(0, 0, 1)).multiplyScalar(chainReactionVelocity)\n        this.velocity.add(perp)\n    }\n\n    reactVersion() {\n        this._animateTransitionShininess()\n    }\n\n    reactSlash() {\n        const slashForce = 100.0\n        this.shootOut(slashForce)\n        // this.velocity.set(Random.randomOnCircle(slashForce))\n\n        const savedColor = this.material.uniforms.color.value.clone()\n\n        if (this.material) {\n            this.material.uniforms.color.value.set(SlashColor)\n            this.material.uniformsNeedUpdate = true\n\n            setTimeout(() => {\n                this.material.uniforms.color.value.set(savedColor)\n                this.material.uniformsNeedUpdate = true\n            }, 100)\n        }\n    }\n\n    reactStatusChange(newStatus) {\n        console.log(`New status ${this.node.status} -> ${newStatus}`)\n        this._animateTransitionShininess()\n    }\n\n    _animateTransitionShininess() {\n        const durationIn = 500.0\n        const durationOut = durationIn * 2.5\n        const easing = TWEEN.Easing.Sinusoidal.InOut\n\n        new TWEEN.Tween(this.material.uniforms.transitionShininess)\n            .to({value: 1.0}, durationIn)\n            .easing(easing)\n            .start().onComplete(() => {\n            this._makeSphere()\n        }).chain(\n            new TWEEN.Tween(this.material.uniforms.transitionShininess)\n                .to({value: 0.0}, durationOut)\n                .easing(easing)\n        )\n\n        const normalScale = this.calculateScale\n        const bigScale = normalScale * 1.5\n        new TWEEN.Tween(this.mesh.scale)\n            .to(new THREE.Vector3(bigScale, bigScale, bigScale), durationIn)\n            .easing(easing)\n            .start()\n            .chain(\n                new TWEEN.Tween(this.mesh.scale)\n                    .to(new THREE.Vector3(normalScale, normalScale, normalScale), durationOut)\n                    .easing(easing)\n            )\n    }\n}\n","import _ from \"lodash\";\nimport RBush from \"rbush\";\n\nexport class Simulation {\n    constructor() {\n        this._objects = {}\n\n        this.repelForce = 0.0\n        this.rBush = new RBush()\n        this.repelEnabled = true\n    }\n\n    getByName(name) {\n        return this._objects[name]\n    }\n\n    addObject(name, physObj) {\n        const existing = this.getByName(name)\n        if (existing) {\n            console.warn('PhysObj already exists. No nothing')\n            return existing\n        }\n\n        this._objects[name] = physObj\n    }\n\n    removeObject(name) {\n        const physObj = this.getByName(name)\n        if (!physObj) {\n            console.error('PhysObj not found!')\n            return\n        }\n\n        physObj.dispose()\n        delete this._objects[name]\n    }\n\n    _repelForceCalculation(obj) {\n        let vicinity = this.rBush.search(obj.boundingBox)\n\n        for (const rBushLeaf of vicinity) {\n            if (rBushLeaf.o !== obj) {\n                obj.repel(rBushLeaf.o, this.repelForce)\n            }\n        }\n    }\n\n    _updateObject(physObj, delta) {\n        physObj.nullifyForce()\n        if(this.repelEnabled) {\n            this._repelForceCalculation(physObj)\n        }\n        physObj.update(delta)\n    }\n\n    update(dt) {\n        if (isNaN(dt)) {\n            return\n        }\n        this.rBush = new RBush()\n        this.rBush.load(_.map(_.values(this._objects), physObj => ({\n            ...physObj.boundingBox,\n            o: physObj\n        })))\n        _.forEach(_.values(this._objects), obj => this._updateObject(obj, dt))\n    }\n\n    doNSteps(n, dt = 0.016) {\n        for (let step = 0; step < n; ++step) {\n            this.update(dt)\n        }\n    }\n\n    get physicalObjects() {\n        return _.values(this._objects)\n    }\n\n    get objectPositions() {\n        return _.map(this.physicalObjects, 'position')\n    }\n\n    get allNames() {\n        return _.keys(this._objects)\n    }\n\n    dispose() {\n        this._objects = {}\n        this.rBush.clear()\n    }\n\n    get size() {\n        return _.size(this._objects)\n    }\n\n    get entries() {\n        return _.entries(this._objects)\n    }\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial} from \"three\";\nimport {Text} from 'troika-three-text'\nimport {Config} from \"@/config\";\nimport TWEEN from \"tween\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\n\nexport class TitleLabel3D extends THREE.Object3D {\n    constructor(text, scale = 20, rotAngle = -45, billboard = false) {\n        super();\n        this.text = text\n        const t = this.label = new Text()\n        t.font = Config.Font.Main\n        t.fontSize = 10\n        t.scale.set(scale, scale, scale)\n        t.color = 0xFFFFFF\n        t.fillOpacity = 1.0 // 0.5\n        t.anchorX = 'center'\n        t.anchorY = 'middle'\n        t.textAlign = 'center'\n        t.text = text\n        if (billboard) {\n            t.material = createBillboardMaterial(new MeshBasicMaterial({\n                transparent: true,\n            }))\n        }\n        t.rotateX(THREE.MathUtils.degToRad(rotAngle))\n        t.sync()\n        this.t = t\n        this.add(t)\n        this.animDuration = 500\n        this.animDistance = 1500\n        this.easeType = TWEEN.Easing.Back.Out\n    }\n\n    animateIn() {\n        this.t.position.z = this.animDistance\n        this.t.material.opacity = 0.0\n\n        new TWEEN.Tween(this.t.position)\n            .to({z: 0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 1.0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n    }\n\n    animateOut(kill = false) {\n        const expandedDuration = this.animDuration * 5\n        new TWEEN.Tween(this.t.position)\n            .to({z: -this.animDistance * 5}, expandedDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 0.0}, expandedDuration * 0.5)\n            .easing(this.easeType)\n            .start().onComplete(() => {\n            if (kill) {\n                if (this.parent) {\n                    this.parent.remove(this)\n                }\n            }\n        })\n    }\n}","import {TitleLabel3D} from \"@/visual/TitleLabel3D\";\nimport _ from \"lodash\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport TWEEN from \"tween\";\n\nexport class ModeBase {\n    constructor(scene) {\n        this.scene = scene\n        this.active = false\n        this.isFlat = true\n        this._labelsHash = {}\n    }\n\n    handleObject(physObj) {\n        +physObj // do nothing\n    }\n\n    reactEvent(event, nodes) {\n        +event;\n        +nodes\n    }\n\n    makeLabel({\n                  text,\n                  position,\n                  scale = 20,\n                  rotation = -45.0,\n                  bb = false,\n                  key = null,\n                  moveIfExists = true\n              }) {\n        if (!text || text === '') {\n            return\n        }\n\n        key = key || Random.generateId()\n\n        if (moveIfExists) {\n            const label = this.findLabelByKey(key)\n            if (label) {\n                new TWEEN.Tween(label.position)\n                    .to(position, 1000.0)\n                    .easing(TWEEN.Easing.Sinusoidal.InOut)\n                    .start();\n                return label\n            }\n        }\n\n        const titleLabel = new TitleLabel3D(text, scale, rotation, bb)\n        titleLabel.key = key\n\n        titleLabel.position.copy(position)\n        this.scene.add(titleLabel)\n\n        this._labelsHash[key] = titleLabel\n\n        return titleLabel\n    }\n\n    onEnter() {\n    }\n\n    _triggerOnEnter(a, b) {\n        this.onEnter(a, b)\n\n        this.active = true\n        _.values(this._labelsHash).forEach(label => label.animateIn())\n    }\n\n    onLeave() {\n    }\n\n    _triggerOnLeave(a, b) {\n        this.onLeave(a, b)\n\n        this.active = false\n        this.clearLabels()\n    }\n\n    findLabelByKey(key) {\n        return this._labelsHash[key]\n    }\n\n    killLabelByKey(key) {\n        const label = this.findLabelByKey(key)\n        if (key) {\n            label.animateOut(true)\n            delete this._labelsHash[key]\n        }\n    }\n\n    clearLabels() {\n        _.values(this._labelsHash).forEach(label => label.animateOut(true))\n\n        this._labelsHash = {}\n    }\n\n    update(dt) {\n        +dt\n    }\n}","import {distanceXY} from \"@/helpers/3D\";\n// import * as THREE from \"three\";\n\nexport class Attractor {\n    constructor(position,\n                constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0,\n                radius = -1.0,\n                relaxRadius = 0.0) {\n        this.position = position\n        this.constCoeff = constCoeff\n        this.linearCoeff = linearCoeff\n        this.quadraticCoeff = quadraticCoeff\n        this.radius = radius\n        this.relaxRadius = relaxRadius\n    }\n\n    applyForceToDistance(physObj, distance, toPosition) {\n        const fromPosition = physObj.realObject.position\n        const f = this.getForce(distance, fromPosition, toPosition)\n        physObj.force.add(f)\n    }\n\n    getForce(distance, fromPosition, toPosition) {\n        const magnitude = this.constCoeff + distance * this.linearCoeff + distance * distance * this.quadraticCoeff\n        return toPosition.clone().sub(fromPosition).normalize().multiplyScalar(magnitude)\n    }\n\n    distance(physObj) {\n        const objPosition = physObj.realObject.position\n        return this.position.distanceTo(objPosition)\n    }\n\n    applyForce(physObj) {\n        const distance = this.distance(physObj)\n        const infiniteRadius = this.radius <= 0.0\n\n        if ((infiniteRadius || distance <= this.radius) && distance > this.relaxRadius) {\n            this.applyForceToDistance(physObj, distance, this.position)\n        }\n    }\n}\n\nAttractor.INFINITE = -1\n\nexport class AttractorFlat extends Attractor {\n    distance(physObj) {\n        return distanceXY(this.position, physObj.realObject.position)\n    }\n\n    applyForce(physObj) {\n        super.applyForce(physObj);\n        this.squishZ(physObj)\n    }\n\n    squishZ(phyObj) {\n        const zDist = phyObj.realObject.position.z - this.position.z\n        let fZ = 0.0\n        if(Math.abs(zDist) > 1.0) {\n            fZ = -zDist * 100.0\n        }\n        phyObj.force.z = fZ\n    }\n}","import _ from \"lodash\";\nimport {Section, Util} from \"@/helpers/MathUtil\";\nimport {AttractorFlat} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\n\n\nexport class AttractorShape extends AttractorFlat {\n    constructor(triangles, constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0, z = 0) {\n        const center = Util.centerOf(_.flatten(triangles))\n        super(new THREE.Vector3(center.x, center.y, 0.0),\n            constCoeff, linearCoeff, quadraticCoeff, 0, 0)\n        this.triangles = triangles\n        this.center = center\n        this.z = z\n    }\n\n    get allSectors() {\n        const sectors = []\n        for (const triangle of this.triangles) {\n            sectors.push(new Section(triangle[0], triangle[1]))\n            sectors.push(new Section(triangle[1], triangle[2]))\n            sectors.push(new Section(triangle[2], triangle[0]))\n        }\n        return sectors\n    }\n\n    applyForce(physObj) {\n        if (!this.triangles || !this.triangles.length) {\n            return\n        }\n        const objPosition = physObj.realObject.position\n        const p = {x: objPosition.x, y: objPosition.y}\n        const relaxed = _.some(this.triangles, tri => Util.pointInTriangle(p, tri))\n\n        this.squishZ(physObj)\n\n        if (relaxed) {\n            return\n        }\n\n        const nearestSector = _.minBy(this.allSectors, sector => sector.pDistance(p.x, p.y))\n        const nearestPoint = nearestSector.nearestPoint(p.x, p.y)\n        const distance = new Section(nearestPoint, p).length\n        this.applyForceToDistance(physObj, distance, new THREE.Vector3(nearestPoint.x, nearestPoint.y, this.z))\n    }\n}\n","export class THORChainLogoShape {\n    static original() {\n        return [\n            [\n                {x: 0, y: 0},\n                {x: 133, y: -133},\n                {x: -238, y: -291},\n            ],\n            [\n                {x: 0, y: 0},\n                {x: -133, y: 135},\n                {x: 291, y: 311},\n            ]\n        ]\n    }\n\n    static triangles(dx = 0, dy = 0, scale = 1.0) {\n        const transformed = []\n        for(const triangle of this.original()) {\n            const pts = []\n            for(const {x, y} of triangle) {\n                pts.push({\n                    x: x * scale + dx,\n                    y: y * scale + dy\n                })\n            }\n            transformed.push(pts)\n        }\n        return transformed\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {Random} from \"@/helpers/MathUtil\";\n\nexport class ModeNormal extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        const force = Config.Physics.BaseForce\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.8), force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.tcAttractor\n    }\n\n    onEnter(nodeObjList) {\n        const label = this.makeLabel({text: 'THORChain', position: new THREE.Vector3(0, -580, -10), scale: 18})\n        label.t.opacity = 0.8;\n\n        super.onEnter();\n\n        nodeObjList.forEach(o => {\n            o.velocity.add(new THREE.Vector3(0, Random.getRandomFloat(100, 1000), 0))\n        })\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport _ from \"lodash\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nconst ANY_STATUS = '*'\n\nexport class ModeStatus extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        const force = Config.Physics.BaseForce\n\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.6), force)\n        this._standbyAttractors = [\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force * 0.02),\n        ]\n\n        this.attractors = {\n            [NodeStatus.Active]: [\n                this.tcAttractor,\n            ],\n            [NodeStatus.Standby]: this._standbyAttractors,\n            [NodeStatus.Ready]: this._standbyAttractors,\n            [ANY_STATUS]: [\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force * 0.02),\n            ],\n        }\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = null\n\n        const bestAttractors = this.attractors[physObj.node.status]\n        if (bestAttractors) {\n            physObj.attractors = bestAttractors\n        } else {\n            physObj.attractors = this.attractors[ANY_STATUS]\n        }\n    }\n\n    onEnter(nodeObj) {\n        const statusesCounted = _.countBy(nodeObj, 'node.status')\n        const standbyCount = (statusesCounted[NodeStatus.Standby] || 0) + (statusesCounted[NodeStatus.Ready] || 0)\n        const activeCount = (statusesCounted[NodeStatus.Active] || 0)\n        const otherCount = nodeObj.length - (standbyCount + activeCount)\n\n        this.makeLabel({text: 'Active', position: new THREE.Vector3(0, -500, 0), scale: 20})\n        this.makeLabel({text: 'Standby', position: new THREE.Vector3(-this._sideDistance, -420, 0), scale: 12})\n        this.makeLabel({text: 'Other', position: new THREE.Vector3(this._sideDistance, -420, 0), scale: 12})\n\n        this.makeLabel({\n            text: activeCount, position: new THREE.Vector3(0, -650, 0), scale: 10,\n        })\n        this.makeLabel({\n            text: standbyCount, position: new THREE.Vector3(-this._sideDistance, -500, 0), scale: 6,\n        })\n        this.makeLabel({\n            text: otherCount, position: new THREE.Vector3(this._sideDistance, -500, 0), scale: 6,\n        })\n\n        super.onEnter();\n    }\n}\n","import * as THREE from \"three\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {Config} from \"@/config\";\n\n\nclass VirtualObject extends PhysicalObject {\n    constructor(x, y, r, name, attractor, friction) {\n        super();\n        this.name = name\n        this.position = new THREE.Vector3(x, y, 0)\n        this._radius = r\n        this.attractors = attractor\n        this.friction = friction\n    }\n\n    get radius() {\n        return this._radius\n    }\n}\n\nconst fric = Config.Physics.BaseFriction\n\nexport class CirclePack {\n    constructor(force, boundRadius, repelForce = 600, friction = fric, iterSteps = 1) {\n        this.force = force\n        this.boundRadius = boundRadius\n        this.iterSteps = iterSteps\n        this.dt = 0.05\n        this.simulation = new Simulation()\n        this.simulation.repelForce = repelForce\n        this.friction = friction\n\n        this.metaAttractor = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, -1, 0)\n    }\n\n    addCircle(name, radius) {\n        this.simulation.addObject(\n            name,\n            new VirtualObject(\n                0,\n                0,\n                radius,\n                name,\n                this.metaAttractor,\n                this.friction,\n            )\n        )\n    }\n\n    arrangeAroundCenter() {\n        if (!this.simulation.size) {\n            return this\n        }\n\n        const deltaAngle = Math.PI * 2 / this.simulation.size\n        const r = this.boundRadius * 0.5 * 0.8\n        let angle = Math.PI * 0.5\n\n        for (const name of this.simulation.allNames) {\n            const obj = this.simulation.getByName(name)\n            if (obj) {\n                obj.position.x = r * Math.cos(angle)\n                obj.position.y = r * Math.sin(angle)\n            }\n\n            angle -= deltaAngle\n        }\n        return this\n    }\n\n    clear() {\n        this.simulation.dispose()\n    }\n\n    pack(dt, steps) {\n        if (!this.simulation.size) {\n            return this\n        }\n        dt = dt || this.dt\n        steps = steps || this.iterSteps\n        this.simulation.doNSteps(steps, dt)\n        return this\n    }\n\n    getResults() {\n        const results = {}\n        for (const [name, {position, radius}] of this.simulation.entries) {\n            results[name] = {\n                position, radius\n            }\n        }\n        return results\n    }\n}\n","import axios from \"axios\";\nimport lscache from \"lscache\";\nimport _ from \"lodash\";\n\n\nexport class IPAddressInfo {\n    constructor(j) {\n        this.ipAddress = j['ip']\n        this.countryCode = j['country_code']\n        this.country = j['country_name']\n        this.city = j['city']\n        this.latitude = j['latitude']\n        this.longitude = j['longitude']\n        this.providerName = j['org']\n        this.flag = IPAddressInfo.getFlagEmoji(this.countryCode)\n    }\n\n    static getFlagEmoji(countryCode) {\n        if (countryCode) {\n            const codePoints = countryCode\n                .toUpperCase()\n                .split('')\n                .map(char => 127397 + char.charCodeAt());\n            return String.fromCodePoint(...codePoints);\n        } else {\n            return ''\n        }\n    }\n}\n\n\nexport const UNKNOWN = 'UNKNOWN'\n\n\nexport class IPAddressInfoLoader {\n    constructor(expireMinutes = 24 * 60) {\n        this.expireMinutes = expireMinutes\n        this._key = 'IPInfo2'\n    }\n\n    url(ip) {\n        return `https://settings.thornode.org/api/node/ip/${ip}`\n    }\n\n    async loadFromService(ips) {\n        const r = await axios.get(this.url(ips.join(',')))\n        console.info(`Loaded IP info for (${ips}) => ${r.status}`)\n        return _.mapValues(r.data, j => new IPAddressInfo(j))\n    }\n\n    loadFromCache(ip) {\n        return lscache.get(`${this._key}:${ip}`)\n    }\n\n    saveToCache(data) {\n        if (!data || !data.ipAddress) {\n            console.warn('no data to save!')\n            return\n        }\n        const ip = data.ipAddress\n        lscache.set(`${this._key}:${ip}`, data, this.expireMinutes)\n    }\n\n    async loadBunch(ipAddresses) {\n        const results = {}\n        const requestList = []\n        _.each(ipAddresses, ip => {\n            const data = this.loadFromCache(ip)\n            if (data) {\n                results[ip] = data\n            } else {\n                requestList.push(ip)\n            }\n        })\n\n        console.log(`requestList = ${requestList.length}, cached = ${_.keys(results).length}`)\n\n        const addressChunks = _.chunk(requestList, 50)\n        for(const ipListChunk of addressChunks) {\n            const chunkInfoDic = await this.loadFromService(ipListChunk)\n            _.each(_.values(chunkInfoDic), d => this.saveToCache(d))\n            _.extend(results, chunkInfoDic)\n        }\n\n        return results\n    }\n\n    static refineProviderName(name) {\n        if (name === undefined) {\n            return UNKNOWN\n        }\n\n        name = name.toUpperCase()\n        name = name.replace('ONLINE GMBH', '')\n        for (const component of name.split('-')) {\n            if (component !== 'AS') {\n                return component\n            }\n        }\n\n        return name\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {Random} from \"@/helpers/MathUtil\";\n\n\nexport class ModeProvider extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n        this.attractors = {}\n        this.force = Config.Physics.BaseForce\n        this.circlePacker = new CirclePack(this.force, 1400, 300, 0.02, 1)\n    }\n\n    update() {\n        // this.circlePacker.pack(dt)\n        this._transferAttractorsPositionFromPacker()\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = IPAddressInfoLoader.refineProviderName(\n                physObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            )\n            physObj.attractors = (this.attractors[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(objList) {\n        this._createProviderAttractors(objList)\n        super.onEnter();\n    }\n\n    _createProviderAttractors(objList) {\n        const providers = {}\n\n        let mostPopularProvider = null\n        let mostPopularCount = 0\n\n        for (const nodeObj of objList) {\n            const nativeName = nodeObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            const provider = IPAddressInfoLoader.refineProviderName(nativeName)\n\n            if (!providers[provider]) {\n                providers[provider] = [nodeObj]\n            } else {\n                const list = providers[provider]\n                list.push(nodeObj)\n                if (list.length > mostPopularCount) {\n                    mostPopularProvider = provider\n                    mostPopularCount = list.length\n                }\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        const sortedEntries = _.sortBy(_.entries(providers), [(pair) => pair[1].length])\n        // const sortedEntries = _.entries(providers)\n        for (const [name, items] of sortedEntries) {\n            if (name === mostPopularProvider) {\n                continue\n            }\n\n            this._makeAttractor(name, items, true)\n        }\n        this.circlePacker.arrangeAroundCenter()\n        this._transferAttractorsPositionFromPacker()\n\n        if (mostPopularProvider) {\n            this._makeAttractor(mostPopularProvider, providers[mostPopularProvider], false)\n        }\n\n        for(const nodeObj of objList) {\n            nodeObj.velocity.z = Random.getRandomFloat(-1000, 1000)\n        }\n\n        this._makeLabels(providers, mostPopularProvider)\n    }\n\n    _makeAttractor(name, items, addCircle) {\n        const circleRadius = NodeObject.estimateRadiusOfGroup(items) * 1.05\n        // console.log('prov', name, circleRadius)\n\n        if (addCircle) {\n            this.circlePacker.addCircle(name, circleRadius)\n        }\n\n        this.attractors[name] = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, 0, circleRadius)\n        return circleRadius\n    }\n\n    _makeLabelForGroup(providers, name, position) {\n        const countNodes = providers[name].length\n        const text = `${name} (${countNodes})`\n        this.makeLabel({text, position: new THREE.Vector3(position.x, position.y - 180.0, 60.0), scale: 5})\n    }\n\n    _makeLabels(providers, mostPopularName) {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            this._makeLabelForGroup(providers, name, position)\n        }\n\n        if (mostPopularName) {\n            this._makeLabelForGroup(providers, mostPopularName, new THREE.Vector3())\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}","import _ from \"lodash\";\n\nfunction isGarbage(x) {\n    return x === undefined || x === null || isNaN(x)\n}\n\nexport class Version {\n    constructor(x, y, z) {\n        this.x = x\n        this.y = y\n        this.z = z\n    }\n\n    static fromString(v) {\n        if (v instanceof Version) {\n            return v\n        }\n        const components = _.map(v.split('.'), x => parseInt(x))\n        const n = components.length\n        const x = components[0]\n        const y = n > 1 ? components[1] : 0\n        const z = n > 2 ? components[2] : 0\n        return new Version(x, y, z)\n    }\n\n    get isInvalid() {\n        return isGarbage(this.x) || isGarbage(this.y) || isGarbage(this.z)\n    }\n\n    greater(v2) {\n        return this.x > v2.x || this.y > v2.y || this.z > v2.z\n    }\n\n    less(v2) {\n        return this.x < v2.x || this.y < v2.y || this.z < v2.z\n    }\n\n    equal(v2) {\n        return this.x === v2.x && this.y === v2.y && this.z === v2.z\n    }\n\n    toString() {\n        return `${this.x}.${this.y}.${this.z}`\n    }\n\n    inc(xLimit = 10, yLimit = 10) {\n        this.z++\n        if (this.z >= xLimit) {\n            this.z = 0\n            this.y++\n            if (this.y >= yLimit) {\n                this.x++\n                this.y = 0\n            }\n        }\n        return this\n    }\n\n    get asInt() {\n        return this.z + 1000 * this.y + 1000000 * this.x\n    }\n\n    static loadVersions(rawVersions) {\n        return _.map(rawVersions, v => Version.fromString(v))\n    }\n\n    static maximumVersion(versions) {\n        return _.maxBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static minimumVersion(versions) {\n        return _.minBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static getVersionSet(nodeObjects, path = 'node.version') {\n        return Version.loadVersions(_.uniq(_.map(nodeObjects, path)))\n    }\n\n    static getSemanticVersionsDistribution(nodeObjects, path = 'node.version', activePath = 'node.isActive') {\n        const activeNodes = _.filter(nodeObjects, no => _.get(no, activePath))\n\n        const activeVersions = Version.getVersionSet(activeNodes, path)\n        const maxActiveVersion = Version.maximumVersion(activeVersions)\n        const minActiveVersion = Version.minimumVersion(activeVersions)\n        const otherActiveVersions = _.differenceBy(activeVersions, _.compact([maxActiveVersion, minActiveVersion]),\n            v => v.asInt)\n        const otherActiveVersionsStr = _.map(otherActiveVersions, v => v.toString())\n\n        const results = {}\n\n        for (const nodeObject of nodeObjects) {\n            const versionStr = _.get(nodeObject, path)\n            const version = Version.fromString(versionStr)\n            let target = null\n            let comment = ''\n            if (version.equal(maxActiveVersion)) {\n                target = maxActiveVersion.toString()\n                comment = 'latest'\n            } else if (version.equal(minActiveVersion)) {\n                target = minActiveVersion.toString()\n                comment = 'active'\n            } else if (_.includes(otherActiveVersionsStr, versionStr)) {\n                target = versionStr\n                comment = 'interim'\n            } else if (!versionStr || versionStr === '0.0.0') {\n                target = 'unknown'\n            } else {\n                target = `${version.x}.X.X`\n                comment = 'old'\n            }\n\n            if (!results[target]) {\n                results[target] = {\n                    objects: [],\n                    comment,\n                    mostPopular: false,\n                    isActive: nodeObject.node.isActive\n                }\n            }\n            results[target].objects.push(nodeObject)\n        }\n\n        if(!_.isEmpty(results)) {\n            const maxVersion = _.maxBy(_.values(results), v => v.objects.length)\n            maxVersion.mostPopular = true\n        }\n\n        return results\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Config} from \"@/config\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeObject} from \"@/visual/NodeObject\";\n\n\nexport class ModeVersion extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        this.force = Config.Physics.BaseForce\n        this._attractorsByKey = {}\n        this._attractorsByVersion = {}\n\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n\n        this._previousKeys = []\n        this._versionDist = {}\n    }\n\n    reactEvent(event, nodeObjects) {\n        if (event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            console.log(`New version detected: ${event.currValue}`)\n            this._packAttractorPositions(nodeObjects)\n            this._makeLabels()\n        }\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = physObj.node.version\n            physObj.attractors = (this._attractorsByVersion[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(nodeObjects) {\n        this._packAttractorPositions(nodeObjects)\n        this._makeLabels()\n\n        this.makeLabel({\n            text: 'Versions',\n            position: new THREE.Vector3(0, -630, -10), scale: 14\n        })\n    }\n\n    _packAttractorPositions(objList) {\n        this._versionDist = Version.getSemanticVersionsDistribution(objList)\n\n        const gap = 100.0\n        const radAttr = 1.2\n\n        let nGroups = 0\n        let radSum = 0.0\n        for (const versionDesc of _.values(this._versionDist)) {\n            versionDesc.radius = radAttr * NodeObject.estimateRadiusOfGroup(versionDesc.objects)\n            ++nGroups\n            radSum += 2 * versionDesc.radius\n        }\n        radSum += Math.max(0, nGroups - 1) * gap\n\n        let x = -radSum * 0.5\n        this._attractorsByVersion = {}\n        this._attractorsByKey = {}\n\n        let entries = _.entries(this._versionDist)\n        entries = _.sortBy(entries, e => e[0])\n\n        for (const [key, versionDesc] of entries) {\n            const r = versionDesc.radius\n            const attractor = new Attractor(new THREE.Vector3(x + r, 0, 0),\n                this.force, 0, 0, 0, versionDesc.radius)\n            x += gap + r * 2\n            this._attractorsByKey[key] = attractor\n            for (const nodeObj of versionDesc.objects) {\n                this._attractorsByVersion[nodeObj.node.version] = attractor\n            }\n        }\n    }\n\n    _makeLabels() {\n        const affectedKeys = []\n\n        for (const [key, desc] of _.entries(this._versionDist)) {\n            affectedKeys.push(key)\n            const attr = this._attractorsByKey[key]\n            if (attr) {\n\n                let tag = '\\n' + desc.comment\n                let color\n                if(desc.comment === 'latest') {\n                    color = '#41e9ff'\n                } else if(desc.comment === 'active') {\n                    color = '#19ff52'\n                } else if(desc.comment === 'interim') {\n                    color = '#1cc245'\n                    tag = ''\n                }\n\n                let text\n                if(key === 'unknown') {\n                    text = 'Unknown'\n                } else {\n                    text = `v. ${key} (${desc.objects.length})${tag}`\n                }\n\n                const position = new THREE.Vector3(attr.position.x, attr.position.y - attr.relaxRadius * 1.1 - 30.0, 50.0)\n                // const position = new THREE.Vector3(attr.position.x, -300.0, 50.0)\n                const label = this.makeLabel({\n                    text,\n                    position,\n                    scale: 2.5,\n                    key\n                }).t\n\n                if(!desc.isActive) {\n                    label.fillOpacity = 0.7\n                }\n                if(color) {\n                    label.color = color\n                }\n            }\n        }\n\n        const keysToRemove = _.difference(this._previousKeys, affectedKeys)\n        _.forEach(keysToRemove, key => {\n            this.killLabelByKey(key)\n        })\n        if(keysToRemove.length) {\n            console.log(`Removing ${keysToRemove.length} version labels...`)\n        }\n\n        this._previousKeys = affectedKeys\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Config} from \"@/config\";\nimport {shortRune} from \"@/helpers/MathUtil\";\n\nexport class ModeBond extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.nameToAttractor = {}\n        this.force = Config.Physics.BaseForce\n\n        this.center = new THREE.Vector3(0, 120)\n        this._noBondAttractor = new Attractor(this.center, this.force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.nameToAttractor[physObj.node.address]\n    }\n\n    onEnter(nodeObjects) {\n        const label = this.makeLabel({text: 'Bonds', position: new THREE.Vector3(0, -630, -10), scale: 14})\n        label.t.opacity = 0.8;\n\n        nodeObjects = _.sortBy(nodeObjects, 'node.bond')\n\n        const n = nodeObjects.length\n\n        this.nameToAttractor = {}\n\n        if (n === 0) {\n            return\n        }\n\n        this._positionateOnSpiral(nodeObjects)\n\n        super.onEnter();\n    }\n\n    _positionateOnSpiral(nodeObjects) {\n        const n = nodeObjects.length\n        let angle = 0.0\n        let radius = 34.0\n        // let gap = 3.0\n        const xScale = 1.5\n\n        let deltaRadius = 5.9;\n        let deltaAngle = 0.5;\n        const deltaDeltaRadius = 0.995;\n        const deltaDeltaAngle = 0.991;\n\n        for (let i = 0; i < n; ++i) {\n            const x = this.center.x + xScale * radius * Math.cos(angle)\n            const y = this.center.y + radius * Math.sin(angle)\n            if (this._addAttractor(nodeObjects[i], x, y)) {\n                radius += deltaRadius;\n                angle += deltaAngle;\n                deltaRadius *= deltaDeltaRadius\n                deltaAngle *= deltaDeltaAngle\n            }\n        }\n    }\n\n    _positionateOnGrid(nodeObjects) {\n        const n = nodeObjects.length\n\n        const columns = Math.ceil(Math.sqrt(n))\n        const rows = Math.ceil(n / columns)\n\n        const gapSize = 100.0\n        const width = columns * gapSize\n        const height = rows * gapSize\n        const halfWidth = 0.5 * width\n        const halfHeight = 0.5 * height\n\n        for (let i = 0; i < n; ++i) {\n            const col = i % columns\n            const row = Math.floor(i / columns)\n            const x = gapSize * col - halfWidth\n            const y = gapSize * row - halfHeight\n            this._addAttractor(nodeObjects[i], x, y)\n        }\n    }\n\n    _addAttractor(nodeObject, x, y) {\n        const bond = nodeObject.node.bond\n        if (bond > 1.0) {\n            const z = 0.0\n            this.nameToAttractor[nodeObject.node.address] = new Attractor(new THREE.Vector3(x, y, z),\n                this.force, 0, 0, -1, 10.0)\n\n            this.makeLabel({\n                text: shortRune(bond),\n                position: new THREE.Vector3(x, y - nodeObject.radius - 10.0, -10),\n                scale: 1\n            })\n            return true\n        } else {\n            this.nameToAttractor[nodeObject.node.address] = this._noBondAttractor\n            return false\n        }\n    }\n}\n","export default \"//uniform float time;\\n//uniform float saturation;\\n//uniform vec3 color;\\n\\nvarying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nconst vec3 ATMO_COLOR = vec3(0.3, 0.6, 1.0);\\nconst vec3 FORWARD = vec3(0.0, 0.0, 1.0);\\n\\nuniform sampler2D globeTexture;\\n\\nvoid main(void) {\\n    float intensity = 1.05 - dot(vNormal, FORWARD);\\n    vec3 atmo = clamp(ATMO_COLOR * pow(intensity, 1.5), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n//    vec3 atmo = vec3(0.0, 0.0, 0.0);\\n    gl_FragColor = vec4(atmo + texture2D(globeTexture, vUv).xyz, 1.0);\\n    //    gl_FragColor = texture2D(globeTexture, vUv);\\n}\\n\\n\";","export default \"varying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nvoid main()\\n{\\n    vUv = uv;\\n    vNormal = normalMatrix * normalize(normal);\\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {longLatTo3D} from \"@/helpers/3D\";\nimport TWEEN from \"tween\";\nimport _ from \"lodash\";\n\nimport AtmosphereFragmentShader from '@/visual/shader/globe_atmo_textured.frag'\nimport StdVertexShader from '@/visual/shader/standard.vert'\n\nexport class ModeGeo extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.isFlat = false\n\n        this.force = Config.Physics.BaseForce * 1.2\n        this._banishAttractor = new Attractor(new THREE.Vector3(0, 0, 0), this.force)\n\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n    }\n\n    handleObject(physObj) {\n        const attr = this._nameToAttractor[physObj.name]\n        physObj.attractors = attr ? [attr] : [this._banishAttractor]\n    }\n\n    onEnter(nodeObjects, group) {\n        // this.makeLabel('Geo', new THREE.Vector3(0, -630, -10), 14, 0, true)\n        super.onEnter();\n\n        group.repelEnabled = false\n\n        this._createAttractorsStacked(nodeObjects)\n\n        if (Config.Scene.Globe.Enabled) {\n            this._makeGlobe()\n            this._putInGlobe()\n        }\n    }\n\n    onLeave(nodeObjects, group) {\n        this._destroyGlobe()\n        _.forEach(nodeObjects, nodeObj => nodeObj.shootOut(2000))\n        super.onLeave();\n        group.repelEnabled = true\n    }\n\n    _makeGlobe() {\n        if (this.globeMesh) {\n            return\n        }\n        const textureLoader = new THREE.TextureLoader()\n\n        const globeConfig = Config.Scene.Globe\n        const geometry = new THREE.SphereGeometry(globeConfig.Radius, globeConfig.Details, globeConfig.Details);\n        // const basicMaterial = new THREE.MeshPhongMaterial({\n        //     color: 0x555555,\n        //     // depthWrite: true,\n        //     // depthTest: true,\n        // });\n\n        const material = new THREE.ShaderMaterial({\n            name: 'AtmosphereShaderMaterial',\n            fragmentShader: AtmosphereFragmentShader,\n            vertexShader: StdVertexShader,\n            uniforms: {\n                globeTexture: {\n                    value: textureLoader.load(Config.Scene.Globe.TextureMap)\n                }\n            },\n            // side: THREE.FrontSide,\n            // depthWrite: true,\n            // depthTest: true,\n        })\n\n        this.globeMesh = new THREE.Mesh(geometry, material);\n        this.globeMesh.renderOrder = 9999\n        this.scene.add(this.globeMesh)\n\n        // const dummyMesh = new THREE.Mesh(geometry, material)\n        // dummyMesh.scale.setScalar(0.9)\n        // this.globeMesh.add(dummyMesh)\n\n        // if(globeConfig.InnerAtmosphere.Enabled) {\n        //     const innerAtmoMaterial = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {\n        //             globeTexture: {\n        //                 value: textureLoader.load(Config.Scene.Globe.TextureMap)\n        //             }\n        //         },\n        //         // side: THREE.FrontSide,\n        //         // depthWrite: true,\n        //         // depthTest: true,\n        //     })\n        //\n        //     this.innerAtmoMesh = new THREE.Mesh(geometry, innerAtmoMaterial)\n        //     // this.innerAtmoMesh.scale.setScalar(1.1)\n        //     this.globeMesh.add(this.innerAtmoMesh)\n        // }\n\n        if (globeConfig.Clouds.Opacity > 0) {\n            const materialClouds = new THREE.MeshPhongMaterial({\n                map: textureLoader.load(globeConfig.Clouds.Texture),\n                side: THREE.DoubleSide,\n                opacity: globeConfig.Clouds.Opacity,\n                transparent: true,\n                depthWrite: false,\n                blending: THREE.AdditiveBlending,\n            });\n            this.cloudMesh = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh)\n\n            this.cloudMesh2 = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh2.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh2)\n        }\n\n        // if(globeConfig.Atmosphere) {\n        //     const materialAtmosphere = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {},\n        //         side: THREE.FrontSide,\n        //         depthWrite: false\n        //     })\n        //     this.atmosphereMesh = new THREE.Mesh(geometry, materialAtmosphere)\n        //     this.atmosphereMesh.scale.setScalar(globeConfig.Atmosphere.ElevationScale)\n        //     this.globeMesh.add(this.atmosphereMesh)\n        // }\n    }\n\n    _putInGlobe() {\n        this.globeMesh.scale.set(0.01, 0.01, 0.01)\n        new TWEEN.Tween(this.globeMesh.scale)\n            .to(new THREE.Vector3(1, 1, 1))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    _destroyGlobe() {\n        if (!this.globeMesh) {\n            return\n        }\n        const g = this.globeMesh\n\n        new TWEEN.Tween(g.scale)\n            .to(new THREE.Vector3(0.01, 0.01, 0.01))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                g.parent.remove(g)\n            })\n            .start()\n\n        this.globeMesh = null\n    }\n\n    update(dt) {\n        super.update(dt);\n        if (this.cloudMesh) {\n            this.cloudMesh.rotation.y += 0.02 * dt\n        }\n        if (this.cloudMesh2) {\n            this.cloudMesh2.rotation.y -= 0.04 * dt\n        }\n    }\n\n    _createAttractors(nodeObjects) {\n        const r = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let attractorHere = this._coordToAttractor[key]\n                if (!attractorHere) {\n                    const position3d = longLatTo3D(info.longitude, info.latitude, r)\n                    attractorHere = this._coordToAttractor[key] = new Attractor(position3d,\n                        this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                }\n                this._nameToAttractor[nodeObject.node.address] = attractorHere\n\n            }\n        }\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n\n    _createAttractorsStacked(nodeObjects) {\n        this._nameToAttractor = {}\n        this._coordToStack = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let stackObj = this._coordToStack[key]\n                if (!stackObj) {\n                    this._coordToStack[key] = stackObj = {\n                        stack: [],\n                        longitude: info.longitude,\n                        latitude: info.latitude,\n                    }\n                }\n                stackObj.stack.push(nodeObject)\n                // this._nameToAttractor[nodeObject.node.address] = attractorHere\n            }\n        }\n\n        const basicRadius = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        for (const {stack, longitude, latitude} of _.values(this._coordToStack)) {\n            const sortedStack = _.sortBy(stack, nodeObject => -nodeObject.node.bond)\n            let radius = basicRadius\n            for (const nodeObj of sortedStack) {\n                const position3d = longLatTo3D(longitude, latitude, radius)\n                this._nameToAttractor[nodeObj.node.address] = new Attractor(position3d,\n                    this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                radius += nodeObj.radius * 2.1\n            }\n        }\n\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n}\n","import {Random} from \"@/helpers/MathUtil\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {Config} from \"@/config\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {ModeNormal} from \"@/visual/modes/ModeNormal\";\nimport {ModeStatus} from \"@/visual/modes/ModeStatus\";\nimport {ModeProvider} from \"@/visual/modes/ModeProvider\";\nimport {ModeVersion} from \"@/visual/modes/ModeVersion\";\nimport {ModeBond} from \"@/visual/modes/ModeBond\";\nimport {ModeGeo} from \"@/visual/modes/ModeGeo\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\n// import {VisNetwork} from \"@/visual/VisNetwork\";\n\nexport const NodeGroupModes = Object.freeze({\n    Normal: 'normal',\n    Status: 'status',\n    Provider: 'provider',\n    Version: 'version',\n    Bond: 'bond',\n    Geo: 'geo',\n})\n\nexport class NodeGroup extends Simulation {\n    constructor(parent) {\n        super()\n\n        this.holder = new THREE.Group()\n        parent.add(this.holder)\n\n        this._currentIdent = 0\n        this.parent = parent\n\n        this._modeNormal = new ModeNormal(this.parent)\n        this._modeStatus = new ModeStatus(this.parent)\n        this._modeProvider = new ModeProvider(this.parent)\n        this._modeVersion = new ModeVersion(this.parent)\n        this._modeBond = new ModeBond(this.parent)\n        this._modeGeo = new ModeGeo(this.parent)\n\n        this._selector = {\n            [NodeGroupModes.Normal]: this._modeNormal,\n            [NodeGroupModes.Status]: this._modeStatus,\n            [NodeGroupModes.Provider]: this._modeProvider,\n            [NodeGroupModes.Version]: this._modeVersion,\n            [NodeGroupModes.Bond]: this._modeBond,\n            [NodeGroupModes.Geo]: this._modeGeo,\n        }\n\n        this._selectedModeHandler = this._modeNormal\n        this.mode = NodeGroupModes.Normal\n\n        this.repelForce = Config.Physics.RepelForce\n\n        // this._visNet = new VisNetwork()\n        // this.parent.add(this._visNet)\n    }\n\n    genIdent(node) {\n        return node.address ?? String(this._currentIdent++)\n    }\n\n    _placeNodeObject(nodeObject) {\n        // const pos = Random.randomVector(this._startPositionBounds)\n        const pos = Random.randomOnCircle(2000.0)\n        nodeObject.o.position.copy(pos)\n        this.holder.add(nodeObject.o)\n    }\n\n    createNewNode(node) {\n        const ident = this.genIdent(node)\n        const existing = this.getByName(ident)\n        if (existing) {\n            console.warn('NodeObject already exists. No nothing')\n            return existing\n        }\n\n        console.info(`Create node ${ident}.`)\n\n        const nodeObject = new NodeObject(node)\n        this._placeNodeObject(nodeObject)\n        this.addObject(ident, nodeObject)\n        return nodeObject\n    }\n\n    destroyNode(node) {\n        const nodeAddress = node.address ?? node\n        const nodeObject = this.getByName(nodeAddress)\n        if (!nodeObject) {\n            console.error('node not found!')\n            return\n        }\n\n        console.info(`Destroy node ${nodeAddress}.`)\n        nodeObject.dispose()\n        this.holder.remove(nodeObject.o)\n        super.removeObject(nodeAddress)\n    }\n\n    set mode(newMode) {\n        if(this._mode === newMode) {\n            return\n        }\n\n        this._mode = newMode\n\n        // dispose old\n        this._selectedModeHandler._triggerOnLeave(this.physicalObjects, this)\n\n        // pick new\n        this._selectedModeHandler = this._selector[this._mode]\n\n        // enter the new one\n        this._selectedModeHandler._triggerOnEnter(this.physicalObjects, this)\n\n        console.log(`Set Mode: ${newMode}`)\n    }\n\n    _updateObject(obj, delta) {\n        if(obj) {\n            this._selectedModeHandler.handleObject(obj)\n            super._updateObject(obj, delta)\n        }\n    }\n\n    reactEvent(event) {\n        const delay = Random.getRandomFloat(0, Config.DataSource.ReactRandomDelay)\n        setTimeout(() => {\n            const obj = this.getByName(event.node.address)\n            if (obj) {\n                obj.react(event)\n                this._selectedModeHandler.reactEvent(event, this.physicalObjects)\n            }\n        }, delay)\n    }\n\n    update(dt) {\n        this._selectedModeHandler.update(dt)\n\n        super.update(dt)\n\n        // this._visNet.update(dt)\n        // this._visNet.updatePositions(this.rBush, this.objectPositions)\n    }\n\n    updateFromCamera(camera) {\n        _.each(this.physicalObjects, no => no.updateFromCamera(camera))\n    }\n\n    dispose() {\n        super.dispose()\n        clearObject(this.holder)\n        for (const otherObj of this.physicalObjects) {\n            otherObj.dispose()\n        }\n    }\n\n    setElevatedNode(name) {\n        for(const obj of this.physicalObjects) {\n            obj.elevated = (obj.name === name)\n        }\n    }\n\n    get isCurrentModeFlat() {\n        return this._selectedModeHandler.isFlat\n    }\n}\n","import _ from \"lodash\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nexport class NodeTracker {\n    constructor(prevNodeList, currNodeList) {\n        this.prev = prevNodeList\n        this.curr = currNodeList\n    }\n\n    extractEvents() {\n        const events = []\n        const addEvent = (t, node, prevNode, k) => {\n            k = k || 'address'\n            events.push(new NodeEvent(t, node, prevNode, node ? node[k] : '',\n                prevNode ? prevNode[k] : ''))\n        }\n\n        const addedNodeAddresses = _.difference(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of addedNodeAddresses) {\n            const node = this.curr.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.CREATE, node, node)\n        }\n\n        const removeNodeAddresses = _.difference(this.prev.nameSet, this.curr.nameSet)\n        for (const addr of removeNodeAddresses) {\n            const node = this.prev.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.DESTROY, node, node)\n        }\n\n        const EVENT_TYPES = NodeEvent.EVENT_TYPE\n\n        const keyTypeTable = {\n            'slashPoints': EVENT_TYPES.SLASH,\n            'bond': EVENT_TYPES.BOND_CHANGE,\n            'IPAddress': EVENT_TYPES.IP_ADDRESS,\n            'status': EVENT_TYPES.STATUS,\n            'height': EVENT_TYPES.ACTIVE_BLOCK_HEIGHT,\n            'currentAward': EVENT_TYPES.AWARD,\n            'observeChains': EVENT_TYPES.OBSERVE_CHAIN,\n            'version': EVENT_TYPES.VERSION,\n        }\n\n        const commonNodes = _.intersection(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of commonNodes) {\n            const prevNode = this.prev.byAddress[addr]\n            const currNode = this.curr.byAddress[addr]\n            const keys = _.union(_.keys(prevNode), _.keys(currNode));\n            const keysChanged = _.filter(keys, (key) => {\n                return !_.isEqual(prevNode[key], currNode[key]);\n            });\n            for (const key of keysChanged) {\n                const eventType = keyTypeTable[key]\n                if (eventType) {\n                    addEvent(eventType, currNode, prevNode, key)\n                }\n            }\n        }\n\n        return events\n    }\n}\n\nexport class DebugNodeJuggler {\n    constructor(period = 10) {\n        this.tick = 1\n        this.period = period\n        this.enabled = true\n        this.juggleStatus = true\n        this.juggleVersion = true\n\n        this.memorizeVersions = {}\n    }\n\n    handleNodes(nodes) {\n        if (this.enabled) {\n            if (this.tick % this.period === 0) {\n                nodes = this._juggleNodes(nodes)\n            }\n            this.tick++\n        }\n        return nodes\n    }\n\n    _juggleNodes(nodes) {\n        if(this.juggleStatus) {\n            nodes = this._juggleNodesStatus(nodes)\n        }\n        if(this.juggleVersion) {\n            nodes = this._juggleNodesVersion(nodes)\n        }\n        return nodes\n    }\n\n    _juggleNodesStatus(nodes) {\n        const nodesIn = Random.getRandomIntRange(2, 7)\n        const nodesOut = Random.getRandomIntRange(2, 7)\n\n        console.warn(`Attention! _juggleNodes: IN: ${nodesIn}, OUT: ${nodesOut}!`)\n\n        nodes.filteredByStatus(NodeStatus.Active).sampleRandomly(nodesOut).setStatusAll(NodeStatus.Standby)\n        nodes.filteredByStatus(NodeStatus.Standby).sampleRandomly(nodesIn).setStatusAll(NodeStatus.Active)\n\n        return nodes\n    }\n\n    _nextVersion(vString) {\n        return Version.fromString(vString).inc(10, 100).toString()\n    }\n\n    _juggleNodesVersion(nodes) {\n        const nUpgrade = 1\n\n        const that = this\n        _.each(nodes.nodes, node => {\n            const v = that.memorizeVersions[node.address]\n            if(v) {\n                node.version = v\n            }\n        })\n\n        nodes.sampleRandomly(nUpgrade).nodes.forEach(node => {\n            const oldVersion = node.version\n            node.version = this._nextVersion(node.version)\n            that.memorizeVersions[node.address] = node.version\n            console.warn(`Debug upgrade ${node.shortAddress}: ${oldVersion} => ${node.version}`)\n        })\n\n        return nodes\n    }\n}\n","import _ from \"lodash\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {SEC_PER_BLOCK} from \"@/helpers/THORUtil\";\n\nexport class NodeSet {\n    constructor(nodes, calculate = true) {\n        this.nodes = nodes || []\n\n        this.total = this.nodes.length\n\n        if (calculate) {\n            this._nodesWithNames = _.filter(this.nodes, (item) => item.address)\n            this.byAddress = _.keyBy(this._nodesWithNames, 'address')\n            this.nameSet = _.keys(this.byAddress)\n\n            this.totalBond = _.sumBy(this.nodes, (node) => node.bond)\n            this.maxSlashNode = _.maxBy(this.nodes, (node) => node.slashPoints)\n            this.trampCount = this.total - this._nodesWithNames.length\n            this.maxAgeNode = _.maxBy(_.filter(this.nodes, node => node.activeBlockHeight && node.activeBlockHeight > 0),\n                node => node.activeBlockHeight)\n\n            this.ranks = {\n                bond: this._makeRanking('bond', 'desc'),\n                slash: this._makeRanking('slashPoints'),\n                age: this._makeRanking('activeBlockHeight'),\n                award: this._makeRanking('currentAward')\n            }\n\n            this.topHeights = this.calculateTopBlockHeight(3)\n            this.topVersion = this.calculateTopVersion()\n        }\n    }\n\n    _makeRanking(criteria, order = 'asc') {\n        const sortedArr = _.orderBy(this._nodesWithNames, [criteria], [order])\n        const names = _.map(sortedArr, 'address')\n        const ranks = Array.from(Array(sortedArr.length), (_, i) => i + 1)\n        return Object.fromEntries(_.zip(names, ranks))\n    }\n\n    findByAddress(address) {\n        return this.byAddress[address]\n    }\n\n    sortedNodes(attribute, asc = true) {\n        const f = asc ? 1 : -1\n        return new NodeSet(_.sortBy(this.nodes, (node) => f * node[attribute]))\n    }\n\n    filteredByStatus(status) {\n        return new NodeSet(_.filter(this.nodes, (node) => node.status === status))\n    }\n\n    get sortedByBond() {\n        return this.sortedNodes('bond')\n    }\n\n    get sortedByAge() {\n        return this.sortedNodes('statusSince')\n    }\n\n    get ipAddresses() {\n        return _.compact(_.uniq(_.map(this.nodes, n => n.IPAddress)))\n    }\n\n    sampleRandomly(n) {\n        return new NodeSet(_.sampleSize(this.nodes, n))\n    }\n\n    setStatusAll(status) {\n        _.forEach(this.nodes, n => n.status = status)\n    }\n\n    bondPercentOfTotal(bond) {\n        return (bond / this.totalBond * 100.0).toFixed(2)\n    }\n\n    get length() {\n        return this.total\n    }\n\n    _calculateTopBlockOneChain(nMin, heights) {\n        const heightSorted = _.map(Object.keys(heights), h => parseInt(h))\n        heightSorted.sort().reverse()\n        for (const height of heightSorted) {\n            const occurrences = heights[height]\n            if (occurrences >= nMin) {\n                return height\n            }\n        }\n        return null\n    }\n\n    calculateTopBlockHeight(nMin = 2) {\n        const allChains = Array.from(new Set(_.flatten(_.map(this._nodesWithNames, n => _.keys(n.observeChains)))))\n        const counters = _.map(\n            allChains, chain => _.countBy(this._nodesWithNames, n => n.observeChains[chain] ?? 0)\n        )\n\n        return _.zipObject(\n            allChains,\n            _.map(allChains, (chain, i) => this._calculateTopBlockOneChain(nMin, counters[i]))\n        )\n    }\n\n    calculateTopVersion() {\n        if (this.nodes.length === 0) {\n            return null\n        }\n        let topVersion = Version.fromString(this.nodes[0].version)\n        for (let i = 1; i < this.nodes.length; ++i) {\n            const currentVersion = Version.fromString(this.nodes[i].version)\n            if (currentVersion.greater(topVersion)) {\n                topVersion = currentVersion\n            }\n        }\n        return topVersion.toString()\n    }\n\n    estimateTimestampAtBlock(topThorHeight, no) {\n        const blockDiff = topThorHeight - no\n        return Date.now() - blockDiff * SEC_PER_BLOCK * 1000.0\n    }\n}\n","import axios from \"axios\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport _ from \"lodash\";\nimport {IPAddressInfoLoader} from \"@/helpers/data/IPAddressInfo\";\n\n\nexport class URLDataSource {\n    constructor(baseUrl, period) {\n        this.period = period\n        this.baseUrl = baseUrl\n        this._isRunning = false\n        this._timer = 0\n        this.callback = () => 0\n        this.ipAddressLoader = new IPAddressInfoLoader()\n    }\n\n    run() {\n        if (this._isRunning) {\n            console.warn(`${this.toString()} is already running`)\n            return\n        }\n        this._isRunning = true\n\n        console.info(`${this.toString()} started!`)\n\n        this._tick().then()\n\n        this._timer = setInterval(() => {\n            this._tick().then()\n        }, this.period)\n    }\n\n    stop() {\n        if (this._isRunning) {\n            clearInterval(this._timer)\n            this._timer = 0\n            this._isRunning = false\n            console.info(`${this.toString()} stopped.`)\n        }\n    }\n\n    toString() {\n        return `URLDataSource(${this.baseUrl}, ${this.period} sec)`\n    }\n\n    get isRunning() {\n        return this._isRunning\n    }\n\n    async dataProcess(rawData) {\n        return rawData\n    }\n\n    get url() {\n        return this.baseUrl\n    }\n\n    async _tick() {\n        try {\n            const data = await axios.get(this.url, {\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            })\n            if (this.callback) {\n                const result = await this.dataProcess(data.data)\n                this.callback(result)\n            }\n        } catch (e) {\n            console.error(`${this.toString()} tick failed: ${e}`)\n            throw e\n        }\n    }\n}\n\nexport class NodeDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/nodes'\n    }\n\n    async dataProcess(rawData) {\n        const nodeSet = new NodeSet(\n            _.map(rawData, json => new NodeInfo(json))\n        )\n\n        let ipInfoDic = {}\n        try {\n            ipInfoDic = await this.ipAddressLoader.loadBunch(nodeSet.ipAddresses)\n        } catch (e) {\n            console.error(`failed to load IPInfo`)\n        }\n\n        for (const node of nodeSet.nodes) {\n            if (node.IPAddress) {\n                node.IPInfo = ipInfoDic[node.IPAddress]\n            }\n        }\n        return nodeSet\n    }\n}\n\nexport class LastBlockDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/lastblock'\n    }\n\n    async dataProcess(rawData) {\n        const chainHeights = {}\n        for (const chainItem of rawData) {\n            chainHeights['THOR'] = +chainItem['thorchain']\n            chainHeights[chainItem['chain']] = +chainItem['last_observed_in']\n        }\n        return chainHeights\n    }\n}\n","export const DataStorage = {\n    lastBlock: {\n        'THOR': 0,\n    },\n    lastNodes: []\n}\n","import {NodeGroup} from \"@/visual/NodeGroup\";\nimport {DebugNodeJuggler, NodeTracker} from \"@/helpers/data/NodeTracker\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {LastBlockDataSource, NodeDataSource} from \"@/helpers/data/URLDataSource\";\nimport {Config} from \"@/config\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\n\nexport class MainScene {\n    constructor(scene, camera) {\n        this.scene = scene\n        this.camera = camera\n        this.prevNodes = new NodeSet([], false)\n        this.nodes = new NodeSet([], false)\n\n        this.nodeGroup = new NodeGroup(this.scene)\n\n        this._firstTime = true\n        this._runDataSource()\n\n        this._fullyLoaded = false\n\n        this._nodeJuggler = new DebugNodeJuggler(3)\n        this._nodeJuggler.enabled = Config.DataSource.NodeJuggler.Enabled\n\n        // this._debugSection()\n    }\n\n    _runDataSource() {\n        const baseUrl = Config.DataSource.NodesURL\n        this.nodeDataSource = new NodeDataSource(baseUrl, Config.DataSource.Nodes.PollPeriod)\n        this.nodeDataSource.callback = this.handleData.bind(this)\n        this.nodeDataSource.run()\n\n        this.lastBlockSource = new LastBlockDataSource(baseUrl, Config.DataSource.LastBlock.PollPeriod)\n        this.lastBlockSource.callback = (lastBlock) => {\n            DataStorage.lastBlock = lastBlock\n        }\n        this.lastBlockSource.run()\n    }\n\n    handleData(nodes) {\n        if (!nodes) {\n            console.error('No nodes to handle!')\n            return\n        }\n\n        if(!this._fullyLoaded) {\n            this._fullyLoaded = true\n            emitter.emit(EventTypes.FullyLoaded)\n        }\n\n        nodes = this._nodeJuggler.handleNodes(nodes)\n\n        DataStorage.lastNodes = nodes\n\n        emitter.emit(EventTypes.DataSourceTick, nodes)\n\n        this.prevNodes = this.nodes\n        this.nodes = nodes\n        const tracker = new NodeTracker(this.prevNodes, this.nodes)\n        const events = tracker.extractEvents()\n\n        console.info(`Handle Data tick! Total: ${events.length} events.`)\n\n        for (const event of events) {\n            const node = event.node\n            if (node.address) {\n                if (event.type === NodeEvent.EVENT_TYPE.CREATE) {\n                    this.nodeGroup.createNewNode(node)\n                } else if (event.type === NodeEvent.EVENT_TYPE.DESTROY) {\n                    this.nodeGroup.destroyNode(node)\n                } else {\n                    this.nodeGroup.reactEvent(event)\n                }\n            }\n        }\n\n        if (this._firstTime) {\n            for (let i = 0; i < Config.Physics.Startup.SimulationSteps; ++i) {\n                this.nodeGroup.update(Config.Physics.Startup.DeltaTime)\n            }\n            this._firstTime = false\n        }\n\n        if (events.length) {\n            emitter.emit(EventTypes.Activity)\n        }\n    }\n\n    update(delta) {\n        this.nodeGroup.update(delta)\n        this.nodeGroup.updateFromCamera(this.camera)\n    }\n\n    dispose() {\n        this.nodeDataSource.stop()\n        this.lastBlockSource.stop()\n        this.nodeGroup.dispose()\n        clearObject(this.scene)\n    }\n\n    findNodeByAddress(address) {\n        return this.nodes.byAddress[address]\n    }\n\n    pick(name) {\n        const node = this.findNodeByAddress(name)\n        console.log(node)\n    }\n}\n","export default \"/*\\n * Copyright 2014 Roman Bobniev (FatumR)\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvarying vec2 vUv;\\nuniform float time;\\n\\n#define OCTAVES  8.0\\n\\n\\nfloat rand(vec2 co){\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nfloat rand2(vec2 co){\\n    return fract(cos(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\n// Rough Value noise implementation\\nfloat valueNoiseSimple(vec2 vl) {\\n    float minStep = 1.0;\\n\\n    vec2 grid = floor(vl);\\n    vec2 gridPnt1 = grid;\\n    vec2 gridPnt2 = vec2(grid.x, grid.y + minStep);\\n    vec2 gridPnt3 = vec2(grid.x + minStep, grid.y);\\n    vec2 gridPnt4 = vec2(gridPnt3.x, gridPnt2.y);\\n\\n    float s = rand2(grid);\\n    float t = rand2(gridPnt3);\\n    float u = rand2(gridPnt2);\\n    float v = rand2(gridPnt4);\\n\\n    float x1 = smoothstep(0., 1., fract(vl.x));\\n    float interpX1 = mix(s, t, x1);\\n    float interpX2 = mix(u, v, x1);\\n\\n    float y = smoothstep(0., 1., fract(vl.y));\\n    float interpY = mix(interpX1, interpX2, y);\\n\\n    return interpY;\\n}\\n\\n\\nfloat fractalNoise(vec2 vl) {\\n    float persistance = 2.0;\\n    float amplitude = 0.5;\\n    float rez = 0.0;\\n    vec2 p = vl;\\n\\n    for (float i = 0.0; i < OCTAVES; i++) {\\n        rez += amplitude * valueNoiseSimple(p);\\n        amplitude /= persistance;\\n        p *= persistance;\\n    }\\n    return rez;\\n}\\n\\nfloat complexFBM(vec2 p) {\\n    float slow = time / 2.5;\\n    float fast = time / .5;\\n    vec2 offset1 = vec2(slow, 0.);// Main front\\n    vec2 offset2 = vec2(sin(fast)* 0.1, 0.);// sub fronts\\n\\n    return\\n    fractalNoise(p + offset1 + fractalNoise(\\n    p + fractalNoise(\\n    p + 2. * fractalNoise(p - offset2)\\n    )\\n    )\\n    );\\n}\\n\\nconst vec3 blueColor = vec3(0.029411765, 0.207843137, 0.250392157);\\nconst vec3 blackColor2 = vec3(0.00803922, 0.0203921569, 0.015686275);\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n    uv = uv * vec2(2.0, 0.5) - 1.0;\\n\\n    vec3 rez = mix(blackColor2, blueColor, complexFBM(uv));\\n    gl_FragColor = vec4(rez, 1.0);\\n}\";","import * as THREE from \"three\";\n\nconst defaultQuad = new THREE.PlaneBufferGeometry(2, 2, 1, 1);\nconst defaultVertexShader = `\t\nuniform vec4 uSize; \t\t//w h t l \nvarying vec2 vUv;\n\nvoid main(){\n\tvUv = uv;\n\tvec2 transformed = \n\t    position.xy * uSize.xy \n\t    - vec2(1.,-1.) + vec2( uSize.x ,  -uSize.y ) \n\t    + vec2( uSize.w , - uSize.z ) * 2.;\n\tgl_Position = vec4( transformed , 1. , 1. );\n}\n`;\n\nconst defaultFragmentShader = `\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n// uniform float time;\n\nvoid main(){\n\tgl_FragColor = texture2D( uTexture , vUv );\n}\t\n`;\n\nexport default class ScreenQuad extends THREE.Mesh {\n    constructor({\n                    width = 1,        \t//100%\n                    height = 1,\t\t\t//100%\n                    top = 0,\n                    left = 0,\n                    texture = null,\n                    fragmentShader = false\n                } = {}) {\n        super(defaultQuad, new THREE.ShaderMaterial({\n            uniforms: {\n                uTexture: {\n                    type: 't',\n                    value: texture\n                },\n                uSize: {\n                    type: 'v4',\n                    value: new THREE.Vector4(1, 1, 0, 0)\n                },\n                time: {value: 0.0},\n            },\n            vertexShader: defaultVertexShader,\n            fragmentShader: fragmentShader ? fragmentShader : defaultFragmentShader,\n            depthWrite: false\n        }));\n        this.frustumCulled = false;\n        this.renderOrder = -1;\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n\n        //cleanup\n        this._pixels = [false, false, false, false]; //w h t l\n        this._componentSetters = [\n            this.setWidth,\n            this.setHeight,\n            this.setTop,\n            this.setLeft\n        ];\n        this._components = [\n            'width',\n            'height',\n            'top',\n            'left'\n        ];\n        this.screenSize = new THREE.Vector2(1, 1);\n        this.setSize(width, height);\n        this.setOffset(top, left);\n    }\n\n    update(dt) {\n        this.material.uniforms.time.value += dt;\n    }\n\n    setScreenSize(width, height) {\n        // this.material.uniforms.uScreenSize.value.set( width , height , 1 / width , 1 / height );\n        this.screenSize.set(width, height);\n        this._pixels.forEach((p, pi) => {\n            //if a component is set in pixels, update the uniform\n            if (p) this._componentSetters[pi].call(this, this[this._components[pi]]);\n        });\n    }\n\n    setSize(width, height) {\n        this.setWidth(width);\n        this.setHeight(height);\n    }\n\n    setWidth(v) {\n        this.width = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.x = parseInt(v) / this.screenSize.x;\n            this._pixels[0] = true;\n        } else {\n            this.material.uniforms.uSize.value.x = v;\n            this._pixels[0] = false;\n        }\n    }\n\n    setHeight(v) {\n        this.height = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.y = parseInt(v) / this.screenSize.y;\n            this._pixels[1] = true;\n        } else {\n            this.material.uniforms.uSize.value.y = v;\n            this._pixels[1] = false;\n        }\n    }\n\n    setOffset(top, left) {\n        // this.material.uniforms.uSize.value.z = top;\n        // this.material.uniforms.uSize.value.w = left;\n        this.setLeft(left);\n        this.setTop(top);\n    }\n\n    setTop(v) {\n        this.top = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.z = parseInt(v) / this.screenSize.y;\n            this._pixels[2] = true;\n        } else {\n            this.material.uniforms.uSize.value.z = v;\n            this._pixels[2] = false;\n        }\n    }\n\n    setLeft(v) {\n        this.left = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.w = parseInt(v) / this.screenSize.x;\n            this._pixels[3] = true;\n        } else {\n            this.material.uniforms.uSize.value.w = v;\n            this._pixels[3] = false;\n        }\n    }\n}","// import BgShader from '@/visual/shader/bg_1.frag'\nimport BgShader from '@/visual/shader/bg_smoke.frag'\n// import BgShader from '@/visual/shader/bg_basic_swirl.frag'\nimport ScreenQuad from \"@/visual/helpers/ScreenQuad\";\nimport _ from \"lodash\";\nimport * as THREE from \"three\";\n\nclass BackgroundBase {\n    constructor(scene) {\n        this.scene = scene\n    }\n\n    install() {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    update(dt) {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    setSize(w, h) {\n    }\n}\n\nexport class Background extends BackgroundBase {\n    constructor(scene) {\n        super(scene);\n        this.quad = new ScreenQuad({\n            fragmentShader: BgShader\n        });\n    }\n\n    install() {\n        this.scene.add(this.quad)\n    }\n\n    update(dt) {\n        this.quad.update(dt)\n    }\n\n    setSize(w, h) {\n        if(this.quad) {\n            this.quad.setScreenSize(w, h)\n        }\n    }\n}\n\nexport class BlackgroundStaticBox extends BackgroundBase {\n    constructor(scene, baseUrl, ext='jpg') {\n        super(scene);\n        this.ext = ext\n        this.baseUrl = baseUrl\n    }\n\n    install() {\n        const ext = this.ext\n        const urls = _.map([\n            `right.${ext}`, `left.${ext}`,\n            `top.${ext}`, `bottom.${ext}`,\n            `front.${ext}`, `back.${ext}`\n        ], (name) => `${this.baseUrl}/${name}`);\n\n        this.scene.background = new THREE.CubeTextureLoader().load(urls)\n    }\n}\n","<template>\n    <div class=\"control-panel\">\n        <button @click=\"setSceneMode(mode.value)\"\n                :class=\"isButtonSelectedClass(mode.value)\"\n                v-for=\"mode in modes\" :key=\"mode.value\">\n            {{ mode.text }}\n        </button>\n    </div>\n</template>\n\n<script>\n\nimport {NodeGroupModes} from \"@/visual/NodeGroup\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'ControlPanel',\n    components: {},\n    emits: ['mode-selected'],\n    props: {},\n    data() {\n        return {\n            selectedMode: NodeGroupModes.Normal,\n            activeOnly: false,\n        }\n    },\n    computed: {\n        modes() {\n            return [\n                {value: NodeGroupModes.Normal, text: 'NORMAL'},\n                {value: NodeGroupModes.Status, text: 'STATUS'},\n                {value: NodeGroupModes.Provider, text: 'PROVIDER'},\n                {value: NodeGroupModes.Version, text: 'VERSION'},\n                {value: NodeGroupModes.Bond, text: 'BOND'},\n                {value: NodeGroupModes.Geo, text: 'GEO'},\n            ]\n        }\n    },\n    methods: {\n        isButtonSelectedClass(modeName) {\n            return {\n                'button-selected': this.selectedMode === modeName\n            }\n        },\n\n        setSceneMode(value) {\n            this.selectedMode = value\n            this.$emit('mode-selected', value)\n        },\n    },\n    mounted() {\n        if(Config.Scene.InitialMode && Config.Scene.InitialMode !== NodeGroupModes.Normal) {\n            setTimeout(() => this.setSceneMode(Config.Scene.InitialMode), 1000.0)\n        }\n    }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.control-panel {\n    position: absolute;\n    bottom: 4px;\n    right: 4px;\n}\n\n.button-selected {\n    border-width: 2px;\n    opacity: 1;\n}\n\n.float-right {\n    float: right;\n}\n\n</style>\n","import { render } from \"./ControlPanel.vue?vue&type=template&id=3168b94a&scoped=true\"\nimport script from \"./ControlPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ControlPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ControlPanel.vue?vue&type=style&index=0&id=3168b94a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3168b94a\"]])\n\nexport default __exports__","<template>\n    <Transition name=\"shrink\">\n        <div class=\"window\" @keyup.esc.prevent=\"close\" tabindex=\"0\" ref=\"modal\">\n            <div class=\"close-button\" @click=\"close\" v-tippy content=\"Close it\"></div>\n            <h1>Node details</h1>\n            <h2>\n                <font-awesome-icon class=\"icon\"\n                    icon=\"fa-solid fa-arrow-right\"\n                    v-if=\"node.requestedToLeave\"\n                    content=\"Requested to leave!\"\n                    v-tippy\n                />\n\n                <font-awesome-icon class=\"icon\"\n                    icon=\"fa-solid fa-arrow-down-up-lock\"\n                    v-if=\"node.forcedToLeave\"\n                    content=\"Forced to leave!\"\n                    v-tippy\n                />\n\n                {{ node.address }}\n                <button class=\"copy-button\" @click=\"copyNodeAddress\" content=\"Copy address\" v-tippy>\n                    <font-awesome-icon icon=\"fa-solid fa-copy\"/>\n                </button>\n            </h2>\n\n            <div class=\"prop-grid\">\n                <div class=\"prop-box\">\n                    <div class=\"category\">Status</div>\n                    {{ statusEmoji }}\n                    <span :class=\"nodeStatusClass\">{{ node.status }}</span>\n                </div>\n                <div class=\"prop-box\">\n                    <div class=\"category\">Since</div>\n                    <div class=\"value\">\n                        <span v-if=\"isOldest\" v-tippy content=\"The oldest active node\">⌛</span>\n                        {{ statusSince }} <small>(#{{ ageRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">💽 Version</div>\n                    <div class=\"value\">\n                        <span v-if=\"isUpToDataVersion\" v-tippy content=\"Latest version\">👌</span>\n                        <span v-else v-tippy content=\"Consider upgrading your node!\">⚠️</span>\n                        {{ node.version }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">🕸️ IP address</div>\n                    <div class=\"value\">\n                        <a :href=\"ipAddressInfoLink\" target=\"_blank\">\n                            {{ node.IPAddress }}\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">📍 Location</div>\n                    <div class=\"value\">\n                        {{ node.IPInfo?.flag }}\n                        {{ node.IPInfo?.country }},\n                        {{ node.IPInfo?.city || 'unknown city' }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">☁️ Provider</div>\n                    <div class=\"value\">{{ providerName }} </div>\n                </div>\n\n                <div class=\"prop-box\" v-else>\n                    <div class=\"value\">Unknown IP address</div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🌐 Explorer</div>\n                    <div class=\"value\">\n                        <a :href=\"`https://viewblock.io/thorchain/address/${node.address}`\"\n                           target=\"_blank\">Viewblock – {{ node.shortAddress }}</a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🔒 Bond</div>\n                    <div class=\"value\">\n                        {{ nodeBond }}\n                        <small>(#{{ nodeBondRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🏆 Awards</div>\n                    <div class=\"value\">\n                        {{ award }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">😈 Slash points</div>\n                    <div class=\"value\">\n                        {{ node.slashPoints }} pts.\n                        <small>(#{{ slashPointsRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-for=\"[chain, height] of Object.entries(node.observeChains)\" :key=\"chain\">\n                    <div class=\"category\">{{ chain }}</div>\n                    <div class=\"value\">\n                        <span :title=\"height\" v-if=\"chainLag(chain)\" class=\"chain-lag\">\n                            🩸 {{ chainLag(chain) }} blocks behind!\n                        </span>\n                        <span v-else>\n                            Up to date\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Transition>\n\n</template>\n\n<script>\n\nimport {shortRune} from \"@/helpers/MathUtil\";\nimport copy from \"copy-to-clipboard\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nconst STATUS_PROPS = {\n    [NodeStatus.Active]: {\n        emoji: '✅',\n        class: 'status-active'\n    },\n    [NodeStatus.Standby]: {\n        emoji: '⏳',\n        class: 'status-standby',\n    },\n    [NodeStatus.Disabled]: {\n        emoji: '🔴',\n        class: 'status-disabled',\n    },\n    [NodeStatus.Whitelisted]: {\n        emoji: '📄',\n        class: 'status-whitelisted',\n    },\n}\n\nexport default {\n    name: 'NodeDetailsWindow',\n    emits: ['close'],\n    props: [\n        'node',\n        'nodeSet'\n    ],\n    data() {\n        return {}\n    },\n    computed: {\n        topThorHeight() {\n            return DataStorage.lastBlock['THOR']\n        },\n        hasIP() {\n            return this.node.IPAddress && this.node.IPAddress !== ''\n        },\n        statusEmoji() {\n            return STATUS_PROPS[this.node.status]?.emoji\n        },\n        nodeStatusClass() {\n            return STATUS_PROPS[this.node.status]?.class\n        },\n        statusSince() {\n            const timestamp = this.nodeSet.estimateTimestampAtBlock(this.topThorHeight, this.node.statusSince)\n            try {\n                return (new Date(timestamp)).toISOString().slice(0, 10)\n            } catch {\n                return 'N/A'\n            }\n        },\n        isOldest() {\n            return true\n        },\n        ageRank() {\n            return this.nodeSet.ranks.age[this.node.address]\n        },\n        award() {\n            return shortRune(Math.round(this.node.currentAward))\n        },\n        nodeBond() {\n            return shortRune(Math.round(this.node.bond))\n        },\n        nodeBondRank() {\n            return this.nodeSet.ranks.bond[this.node.address]\n        },\n        nodeBondPercent() {\n            return this.nodeSet.bondPercentOfTotal(this.node.bond)\n        },\n        ipAddressInfoLink() {\n            return `https://www.infobyip.com/ip-${this.node.IPAddress}.html`\n        },\n        slashPointsRank() {\n            return this.nodeSet.ranks.slash[this.node.address]\n        },\n        chainLag() {\n            return (chain) => (this.nodeSet.topHeights[chain] ?? 0) - (this.node.observeChains[chain] ?? 0)\n        },\n        providerName() {\n            const nativeName = this.node?.IPInfo?.providerName ?? UNKNOWN\n            return IPAddressInfoLoader.refineProviderName(nativeName)\n        },\n        isUpToDataVersion() {\n            return this.node.version === this.nodeSet.topVersion\n        }\n    },\n    methods: {\n        copyNodeAddress() {\n            copy(this.node.address)\n        },\n        close() {\n            this.$emit('close')\n        }\n    },\n    mounted() {\n        this.$refs.modal.focus()\n    },\n    // watch: {\n    //     nodeSet(ns) {\n    //         console.warn('node set changed', ns.ranks.bond)\n    //     }\n    // }\n}\n\n</script>\n\n<style lang=\"scss\">\n\n// todo: different variant for Portrait orientation\n.window {\n    position: fixed;\n    left: 5%;\n    top: 50%;\n    transform: translate(0%, -50%);\n\n    border: 1px solid #097a7b;\n    border-radius: 12px;\n\n    background-color: rgba(0, 0, 0, 0.72);\n    backdrop-filter: blur(8px);\n    color: turquoise;\n    padding: 20px;\n\n    //max-width: 50vw;\n\n    font-size: 10pt;\n}\n\n.close-button {\n    float: right;\n    overflow: hidden;\n    position: relative;\n    border: none;\n    padding: 0;\n    width: 2em;\n    height: 2em;\n    border-radius: 50%;\n    background: transparent;\n    color: turquoise;\n    font: inherit;\n    text-indent: 100%;\n    cursor: pointer;\n\n    &:focus {\n        outline: solid 0 transparent;\n        box-shadow: 0 0 0 2px #8ed0f9\n    }\n\n    &:hover {\n        background: rgba(29, 161, 142, .1)\n    }\n\n    &:before, &:after {\n        position: absolute;\n        top: 15%;\n        left: calc(50% - .0625em);\n        width: .125em;\n        height: 70%;\n        border-radius: .125em;\n        transform: rotate(45deg);\n        background: currentcolor;\n        content: ''\n    }\n\n    &:after {\n        transform: rotate(-45deg);\n    }\n}\n\nh1 {\n    margin: 0;\n    padding: 0;\n    color: white;\n}\n\n.category {\n    font-family: EXO2, monospace;\n    //font-weight: bolder;\n    color: white;\n    font-size: 9pt;\n}\n\n.value {\n    font-family: EXO2, monospace;\n    font-size: 10pt;\n}\n\n.prop-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 4px;\n    color: white;\n    //font-size: 7pt;\n}\n\n.prop-box {\n    background-color: rgba(1, 0, 0, 0.5);\n    color: turquoise;\n    border-radius: 5px;\n    padding: 6px;\n    border: 1px dashed #16504a;\n    font-size: 14pt;\n}\n\n.status-standby {\n    color: #b4b4b4;\n}\n\n.status-disabled {\n    color: red;\n}\n\n.status-active {\n    color: #9cffb2;\n}\n\n.status-whitelisted {\n    color: white;\n}\n\n.chain-lag {\n    color: orangered;\n}\n\n.copy-button {\n    display: inline-block;\n    background: rgba(0, 0, 0, 0.5);\n    //border-radius: 10px;\n    padding: 4px;\n    font-size: 10pt;\n    color: white;\n}\n\n.icon {\n    padding: 2px;\n}\n\nsmall {\n    color: #34bfb1;\n}\n\n</style>\n","import { render } from \"./NodeDetailsWindow.vue?vue&type=template&id=1b7e0bee\"\nimport script from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\nexport * from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\n\nimport \"./NodeDetailsWindow.vue?vue&type=style&index=0&id=1b7e0bee&lang=scss\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport CameraControls from \"camera-controls\";\nimport TWEEN from \"tween\";\n\nexport class CameraController {\n    constructor(domElement, center = new THREE.Vector3()) {\n        this.domElement = domElement\n        this.center = center\n        this._createCamera()\n        this._createCameraControl()\n        this._animating = false\n        this.controlsEnabled = true\n    }\n\n    reset() {\n        this.controls.reset()\n    }\n\n    _createCamera() {\n        this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight,\n            0.001, Config.Controls.Camera.Distance.Max * 2);\n        // this.camera = new THREE.OrthographicCamera()\n        this.camera.position.z = Config.Controls.Camera.Distance.Start\n    }\n\n    _createCameraControl() {\n        const controls = this.controls = new CameraControls(this.camera, this.domElement);\n        const cfg = Config.Controls.Camera\n\n        controls.dragToOffset = true\n        controls.minDistance = cfg.Distance.Min\n        controls.maxDistance = cfg.Distance.Max\n        this.camera.position.z = cfg.Distance.Start\n\n        controls.minAzimuthAngle = THREE.MathUtils.degToRad(-cfg.AzimuthAngleLimit)\n        controls.maxAzimuthAngle = THREE.MathUtils.degToRad(cfg.AzimuthAngleLimit)\n\n        controls.minPolarAngle = THREE.MathUtils.degToRad(-cfg.PolarAngleLimit + 90)\n        controls.maxPolarAngle = THREE.MathUtils.degToRad(cfg.PolarAngleLimit + 90)\n\n        controls.update(0)\n    }\n\n    update(delta) {\n        if (this.controlsEnabled && !this._animating && !this.cameraInspectsObject) {\n            this.controls.update(delta);\n        }\n        // todo: if we look at the object, keep tracking it while it moves around\n    }\n\n    onResize() {\n        const canvas = this.domElement;\n        const width = canvas.clientWidth;\n        const height = canvas.clientHeight;\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n\n    _getEndQuaternion(target, lookAtThis) {\n        const currPos = this.camera.position.clone()\n        const currQ = this.camera.quaternion.clone()\n\n        this.camera.position.copy(target)\n        this.camera.lookAt(lookAtThis)\n\n        const endQuaternion = this.camera.quaternion.clone()\n\n        this.camera.position.copy(currPos)\n        this.camera.quaternion.copy(currQ)\n\n        return endQuaternion\n    }\n\n    cameraLookAtNode(nodeObj, flat) {\n        if (!this.cameraInspectsObject) {\n            this.oldCameraPos = this.camera.position.clone()\n            this.oldCameraQuaternion = this.camera.quaternion.clone()\n            this.cameraInspectsObject = true\n        }\n\n        this._animating = true\n\n        const cfg = Config.Controls.Camera.Animation\n\n        const that = this\n\n        let target\n        let targetLookAt\n\n        if(flat) {\n            target = nodeObj.o.position.clone().add(new THREE.Vector3(0, 0, cfg.DistanceWhenZoomed))\n            targetLookAt = nodeObj.o.position.clone()\n        } else {\n            const deltaVector = nodeObj.o.position.clone().normalize().multiplyScalar(cfg.DistanceWhenZoomed)\n            target = nodeObj.o.position.clone().add(deltaVector)\n            targetLookAt = nodeObj.o.position.clone()\n        }\n\n        new TWEEN.Tween(this.camera.position)\n            .to(target, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                that._animating = false\n            })\n            .start();\n\n        const endQuaternion = this._getEndQuaternion(target, targetLookAt)\n        new TWEEN.Tween(this.camera.quaternion)\n            .to(endQuaternion, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    restoreCamera() {\n        if (this.cameraInspectsObject) {\n            this.cameraInspectsObject = false\n            this._animating = true\n\n            const that = this\n            const animTime = Config.Controls.Camera.Animation.Duration\n            new TWEEN.Tween(this.camera.position)\n                .to(this.oldCameraPos, Config.Controls.Camera.Animation.Duration)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .onUpdate(function () {\n                    // that.camera.position.copy(this);\n                    // that.camera.lookAt(that.center)\n                })\n                .onComplete(() => {\n                    that._animating = false\n                })\n                .start();\n\n            const endQuaternion = this._getEndQuaternion(this.oldCameraPos, this.center)\n            new TWEEN.Tween(this.camera.quaternion)\n                .to(endQuaternion, animTime)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .start()\n        }\n    }\n\n    dispose() {\n        this.controls.dispose()\n    }\n}\n","<template>\n    <div class=\"loading-indicator\">Loading.<span>{{ dots }}</span> </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'LoadingIndicator',\n    data() {\n        return {\n            dots: ''\n        }\n    },\n    methods: {\n        tick() {\n            this.dots += '.'\n            if(this.dots.length >= 3) {\n                this.dots = ''\n            }\n        }\n    },\n    mounted() {\n        this.timer = setInterval(this.tick, 200.0)\n    },\n    beforeUnmount() {\n        clearInterval(this.timer)\n    }\n}\n\n</script>\n\n<style scoped>\n    .loading-indicator {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 1.5rem;\n        color: white;\n    }\n</style>","import { render } from \"./LoadingIndicator.vue?vue&type=template&id=3618bf7b&scoped=true\"\nimport script from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingIndicator.vue?vue&type=style&index=0&id=3618bf7b&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3618bf7b\"]])\n\nexport default __exports__","import { render } from \"./MainScreen.vue?vue&type=template&id=297046aa\"\nimport script from \"./MainScreen.vue?vue&type=script&lang=js\"\nexport * from \"./MainScreen.vue?vue&type=script&lang=js\"\n\nimport \"./MainScreen.vue?vue&type=style&index=0&id=297046aa&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4e003472\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4e003472&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue'\nimport App from './App.vue'\nimport CameraControls from \"camera-controls\";\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\n\n/* import specific icons */\nimport {faCopy, faArrowDownUpLock, faArrowRight} from '@fortawesome/free-solid-svg-icons'\n\nimport * as THREE from 'three';\nimport {emitter} from \"@/helpers/EventTypes\";\n\nimport { plugin as VueTippy } from 'vue-tippy'\nimport 'tippy.js/dist/tippy.css' // optional for styling\nimport 'tippy.js/themes/translucent.css'\nimport {isWebGL2Supported} from \"webgl-detector\";\n\nif(!isWebGL2Supported()) {\n    alert('WebGL is not supported!')\n}\n\nCameraControls.install({THREE});\n\n/* add icons to the library */\nlibrary.add(faCopy, faArrowRight, faArrowDownUpLock)\n\nconst app = createApp(App);\napp.component('font-awesome-icon', FontAwesomeIcon)\napp.use(VueTippy, {\n    directive: \"tippy\", // => v-tippy\n    component: 'tippy', // => <tippy/>\n    flipDuration: 0,\n    defaultProps: {\n        placement: 'top'\n    },\n    popperOptions: {\n        modifiers: {\n            preventOverflow: {\n                enabled: false\n            }\n        }\n    }\n})\napp.config.globalProperties.emitter = emitter;\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthorviz\"] = self[\"webpackChunkthorviz\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(552); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_MainScreen","class","_createElementBlock","_createElementVNode","ref","tabindex","onKeypress","$options","onMousemove","onMouseenter","onMouseleave","onClick","_createVNode","_component_FPSCounter","$data","_component_LoadingIndicator","key","_component_ControlPanel","onModeSelected","_KeepAlive","_component_NodeDetailsWindow","node","onClose","IsDev","process","Live","Config","DataSource","NodesURL","Nodes","PollPeriod","LastBlock","ReactRandomDelay","NodeJuggler","Enabled","Font","Main","Effects","Bloom","Strength","Threshold","Radius","Controls","Camera","Distance","Min","Max","Start","AzimuthAngleLimit","PolarAngleLimit","MouseMoveStrength","Animation","Duration","DistanceWhenZoomed","Shift","X","Scene","InitialMode","Background","Sky","SkyBox","SkyBoxExt","NodeObject","Simple","PlaneScale","MinRadius","MaxScale","MinScale","ScaleFactor","RadiusFactor","ReactStatus","DurationIn","DurationOut","BloatScale","ReactSlash","Force","RedDuration","Globe","Details","NodeElevation","TextureMap","Clouds","ElevationScale","Opacity","Texture","Atmosphere","InnerAtmosphere","Physics","BaseForce","RepelForce","Startup","SimulationSteps","DeltaTime","BaseFriction","MaxSpeedSq","Math","pow","Attractor","Flat","DeltaZ","Debug","ShowFPS","Renderer","LogZBuffer","Colors","LightningBlue","YggdrasilGreen","MidgardTurqoise","NightBlack","_toDisplayString","Number","toFixed","countObjects","parent","numOfMeshes","traverse","clearObject","obj","remove","apply","children","longLatTo3D","long","lat","r","phi","PI","theta","spherical","THREE","setFromSpherical","distanceXY","v1","v2","dx","x","dy","y","sqrt","EventTypes","FullyLoaded","DataSourceTick","Activity","emitter","mitt","name","props","updatePeriod","type","default","data","fps","objCount","activityIndicator","lastUpdateTime","methods","pokeActivity","this","setTimeout","update","delta","scene","Date","now","unmounted","off","mounted","on","__exports__","defaultValue","undefined","dec2hex","dec","toString","padStart","Random","max","floor","random","min","array","index","getRandomInt","length","splice","xMin","xMax","yMin","yMax","zMin","zMax","Vector3","getRandomFloat","cx","cy","phase","cos","sin","ceil","len","arr","Uint8Array","window","crypto","getRandomValues","Array","from","join","Section","constructor","p1","p2","whichSide","A","B","C","D","sign","center","nearestPoint","dot","len_sq","param","pDistance","xo","yo","nearestPoint1","Util","group","sumX","_","item","sumY","p3","pt","threePts","v3","d1","_signHelper","d2","d3","hasNeg","hasPos","shortNumber","mantissa","postFix","numbro","format","average","RUNE","shortRune","PhysicalObject","mass","force","velocity","friction","attractors","dt","forEach","attr","applyForce","acceleration","multiplyScalar","copy","clone","add","clamp","lengthSq","setLength","realObject","position","nullifyForce","set","radius","applyForceTo","direction","repel","physObj","forceMult","thisPos","otherPos","d","distanceTo","minDistance","lineDir","sub","normalize","negate","boundingBox","minX","minY","maxX","maxY","shootOut","o","createBillboardMaterial","baseMaterial","opts","createDerivedMaterial","Object","assign","vertexMainOutro","EVENT_TYPE","freeze","CREATE","DESTROY","SLASH","IP_ADDRESS","STATUS","VERSION","FORCED_LEAVE","REQUESTED_LEAVE","AWARD","BOND_CHANGE","OBSERVE_CHAIN","ACTIVE_BLOCK_HEIGHT","NodeEvent","prevNode","currValue","prevValue","isTramp","address","addr","SEC_PER_BLOCK","THOR_DECIMAL","THOR_DECIMAL_INV","thorToFloat","parseFloat","NodeInfo","status","jail","bond_providers","preflight_status","node_address","bond","activeBlockHeight","active_block_height","bondAddress","bond_address","statusSince","status_since","requestedToLeave","requested_to_leave","forcedToLeave","forced_to_leave","leaveHeight","leave_height","IPAddress","ip_address","version","slashPoints","slash_points","releaseHeight","release_height","reason","currentAward","current_award","observeChains","chain","height","preflightStatus","code","bondProviders","fee","providers","push","shortAddress","substring","IPInfo","flag","isActive","NodeStatus","Active","isStandby","Standby","Ready","Whitelisted","Disabled","Unknown","noCfg","geomSize","geometry","simpleGeometry","SlashColor","NormalLabelZ","CirclePackFactor","super","normalizedBond","_makeSphere","_makeLabel","_elevated","elevated","v","Boolean","material","uniforms","saturation","value","uniformsNeedUpdate","_getSphereColor","color","st","getRandomSample","mesh","_makeSimpleSphere","_makeCoolSphere","renderOrder","scale","calculateScale","setScalar","z","randFloat","_makeMaterial","vertexShader","StdVertexShader","fragmentShader","FragShader1","transparent","depthTest","depthWrite","nameTextObj","Text","text","slice","font","fontWeight","fontSize","anchorX","anchorY","outlineWidth","sync","MeshBasicMaterial","labelObj","dispose","nodeObjList","sum_r2","nodeObj","time","updateFromCamera","camera","dir","react","event","reactChain","reactSlash","reactStatusChange","reactVersion","chainReactionVelocity","pos","perp","cross","_animateTransitionShininess","slashForce","savedColor","newStatus","console","log","durationIn","durationOut","easing","TWEEN","transitionShininess","to","start","onComplete","normalScale","bigScale","Simulation","_objects","repelForce","rBush","RBush","repelEnabled","getByName","addObject","existing","warn","removeObject","error","_repelForceCalculation","vicinity","search","rBushLeaf","_updateObject","isNaN","load","doNSteps","n","step","physicalObjects","objectPositions","allNames","clear","size","entries","TitleLabel3D","rotAngle","billboard","t","label","fillOpacity","textAlign","rotateX","animDuration","animDistance","easeType","animateIn","opacity","animateOut","kill","expandedDuration","ModeBase","active","isFlat","_labelsHash","handleObject","reactEvent","nodes","makeLabel","rotation","bb","moveIfExists","generateId","findLabelByKey","titleLabel","onEnter","_triggerOnEnter","a","b","onLeave","_triggerOnLeave","clearLabels","killLabelByKey","constCoeff","linearCoeff","quadraticCoeff","relaxRadius","applyForceToDistance","distance","toPosition","fromPosition","f","getForce","magnitude","objPosition","infiniteRadius","INFINITE","AttractorFlat","squishZ","phyObj","zDist","fZ","abs","AttractorShape","triangles","centerOf","allSectors","sectors","triangle","p","relaxed","tri","pointInTriangle","nearestSector","sector","THORChainLogoShape","transformed","original","pts","ModeNormal","_circleRadius","tcAttractor","ANY_STATUS","ModeStatus","_sideDistance","_standbyAttractors","bestAttractors","statusesCounted","standbyCount","activeCount","otherCount","VirtualObject","attractor","_radius","fric","CirclePack","boundRadius","iterSteps","simulation","metaAttractor","addCircle","arrangeAroundCenter","deltaAngle","angle","pack","steps","getResults","results","IPAddressInfo","j","ipAddress","countryCode","country","city","latitude","longitude","providerName","getFlagEmoji","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","UNKNOWN","IPAddressInfoLoader","expireMinutes","_key","url","ip","ips","axios","info","loadFromCache","lscache","saveToCache","ipAddresses","requestList","addressChunks","ipListChunk","chunkInfoDic","loadFromService","replace","component","ModeProvider","_attractorBanish","circlePacker","_transferAttractorsPositionFromPacker","groupName","refineProviderName","objList","_createProviderAttractors","mostPopularProvider","mostPopularCount","nativeName","provider","list","sortedEntries","pair","items","_makeAttractor","_makeLabels","circleRadius","estimateRadiusOfGroup","_makeLabelForGroup","countNodes","mostPopularName","packedPositions","isGarbage","Version","components","parseInt","isInvalid","greater","less","equal","inc","xLimit","yLimit","asInt","rawVersions","fromString","versions","loadVersions","nodeObjects","path","activePath","activeNodes","no","activeVersions","getVersionSet","maxActiveVersion","maximumVersion","minActiveVersion","minimumVersion","otherActiveVersions","otherActiveVersionsStr","nodeObject","versionStr","target","comment","objects","mostPopular","maxVersion","ModeVersion","_attractorsByKey","_attractorsByVersion","_previousKeys","_versionDist","_packAttractorPositions","getSemanticVersionsDistribution","gap","radAttr","nGroups","radSum","versionDesc","e","affectedKeys","desc","tag","keysToRemove","ModeBond","nameToAttractor","_noBondAttractor","_positionateOnSpiral","xScale","deltaRadius","deltaDeltaRadius","deltaDeltaAngle","i","_addAttractor","_positionateOnGrid","columns","rows","gapSize","width","halfWidth","halfHeight","col","row","ModeGeo","_banishAttractor","_nameToAttractor","_coordToAttractor","_createAttractorsStacked","_makeGlobe","_putInGlobe","_destroyGlobe","globeMesh","textureLoader","globeConfig","AtmosphereFragmentShader","globeTexture","materialClouds","side","blending","cloudMesh","cloudMesh2","g","_createAttractors","attractorHere","position3d","_coordToStack","stackObj","stack","basicRadius","sortedStack","NodeGroupModes","Normal","Status","Provider","Bond","Geo","NodeGroup","holder","_currentIdent","_modeNormal","_modeStatus","_modeProvider","_modeVersion","_modeBond","_modeGeo","_selector","_selectedModeHandler","mode","genIdent","_placeNodeObject","randomOnCircle","createNewNode","ident","destroyNode","nodeAddress","newMode","_mode","delay","otherObj","setElevatedNode","isCurrentModeFlat","NodeTracker","prevNodeList","currNodeList","prev","curr","extractEvents","events","addEvent","k","addedNodeAddresses","nameSet","byAddress","removeNodeAddresses","EVENT_TYPES","keyTypeTable","commonNodes","currNode","keys","keysChanged","eventType","DebugNodeJuggler","period","tick","enabled","juggleStatus","juggleVersion","memorizeVersions","handleNodes","_juggleNodes","_juggleNodesStatus","_juggleNodesVersion","nodesIn","getRandomIntRange","nodesOut","filteredByStatus","sampleRandomly","setStatusAll","_nextVersion","vString","nUpgrade","that","oldVersion","NodeSet","calculate","total","_nodesWithNames","totalBond","maxSlashNode","trampCount","maxAgeNode","ranks","_makeRanking","slash","age","award","topHeights","calculateTopBlockHeight","topVersion","calculateTopVersion","criteria","order","sortedArr","names","fromEntries","findByAddress","sortedNodes","attribute","asc","sortedByBond","sortedByAge","bondPercentOfTotal","_calculateTopBlockOneChain","nMin","heights","heightSorted","h","sort","reverse","occurrences","allChains","Set","counters","currentVersion","estimateTimestampAtBlock","topThorHeight","blockDiff","URLDataSource","baseUrl","_isRunning","_timer","callback","ipAddressLoader","run","_tick","then","setInterval","stop","clearInterval","isRunning","rawData","headers","result","dataProcess","NodeDataSource","nodeSet","json","ipInfoDic","loadBunch","LastBlockDataSource","chainHeights","chainItem","DataStorage","lastBlock","lastNodes","MainScene","prevNodes","nodeGroup","_firstTime","_runDataSource","_fullyLoaded","_nodeJuggler","nodeDataSource","handleData","bind","lastBlockSource","emit","tracker","findNodeByAddress","pick","defaultQuad","defaultVertexShader","defaultFragmentShader","ScreenQuad","top","left","texture","uTexture","uSize","frustumCulled","_pixels","_componentSetters","setWidth","setHeight","setTop","setLeft","_components","screenSize","setSize","setOffset","setScreenSize","pi","call","w","BackgroundBase","install","quad","BgShader","_Fragment","_renderList","_hoisted_2","emits","selectedMode","activeOnly","computed","modes","isButtonSelectedClass","modeName","setSceneMode","$emit","content","_hoisted_31","_Transition","onKeyup","_hoisted_1","$props","_component_font_awesome_icon","icon","_hoisted_4","_hoisted_6","_hoisted_10","_hoisted_12","_hoisted_16","_hoisted_19","_hoisted_21","href","_hoisted_23","_hoisted_25","_hoisted_28","_hoisted_32","_hoisted_34","_hoisted_36","_hoisted_38","_hoisted_41","_hoisted_44","title","_hoisted_48","_hoisted_49","STATUS_PROPS","emoji","hasIP","statusEmoji","nodeStatusClass","timestamp","toISOString","isOldest","ageRank","round","nodeBond","nodeBondRank","nodeBondPercent","ipAddressInfoLink","slashPointsRank","chainLag","isUpToDataVersion","copyNodeAddress","close","$refs","modal","focus","CameraController","domElement","_createCamera","_createCameraControl","_animating","controlsEnabled","reset","controls","innerWidth","innerHeight","CameraControls","cfg","dragToOffset","maxDistance","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","cameraInspectsObject","onResize","canvas","clientWidth","clientHeight","aspect","updateProjectionMatrix","_getEndQuaternion","lookAtThis","currPos","currQ","quaternion","lookAt","endQuaternion","cameraLookAtNode","flat","oldCameraPos","oldCameraQuaternion","targetLookAt","deltaVector","restoreCamera","animTime","onUpdate","dots","timer","beforeUnmount","LoadingIndicator","NodeDetailsWindow","ControlPanel","FPSCounter","isLoading","showFps","mouseEnterX","mouseEnterY","tickCounter","sceneMode","fullyLoaded","nodeDetailsVisible","nodeToViewDetails","zoomedToNode","shallowRef","onKeyDown","cameraController","onMouseMove","clientX","clientY","rotate","pickedName","_pickObject","onMouseEnter","onMouseLeave","thoughtful","raycaster","pickPosition","getCanvasRelativePosition","setFromCamera","intersectedObjects","intersectObjects","namedObjects","pickedObject","startsWith","_onPickNodeObject","rect","getBoundingClientRect","resizeRendererToDisplaySize","renderer","needResize","composer","_width","_height","bloomPass","bg","render","clock","getDelta","document","visibilityState","requestAnimationFrame","makeSkybox","makeRenderer","antialias","logarithmicDepthBuffer","devicePixelRatio","setPixelRatio","renderScene","RenderPass","EffectComposer","addPass","bloomCfg","UnrealBloomPass","buildScene","onFullyLoaded","onDataArrived","onCloseDetails","MainScreen","created","preloading","preloadFont","characters","isWebGL2Supported","alert","library","faCopy","faArrowRight","faArrowDownUpLock","app","createApp","App","FontAwesomeIcon","use","VueTippy","directive","flipDuration","defaultProps","placement","popperOptions","modifiers","preventOverflow","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","getter","__esModule","definition","defineProperty","enumerable","get","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}