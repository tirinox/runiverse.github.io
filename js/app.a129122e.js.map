{"version":3,"file":"js/app.a129122e.js","mappings":"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","sources":["webpack://thorviz/./src/App.vue","webpack://thorviz/./src/components/MainScreen.vue","webpack://thorviz/./src/config.js","webpack://thorviz/./src/components/parts/FPSCounter.vue","webpack://thorviz/./src/helpers/3D.js","webpack://thorviz/./src/helpers/EventTypes.js","webpack://thorviz/./src/components/parts/FPSCounter.vue?9287","webpack://thorviz/./src/helpers/MathUtil.js","webpack://thorviz/./src/helpers/physics/PhysicalObject.js","webpack://thorviz/./src/visual/shader/billboard.vert","webpack://thorviz/./src/visual/shader/node_obj_2.frag","webpack://thorviz/./src/helpers/TextBillboard.js","webpack://thorviz/./src/helpers/NodeEvent.js","webpack://thorviz/./src/helpers/THORUtil.js","webpack://thorviz/./src/helpers/data/NodeInfo.js","webpack://thorviz/./src/visual/NodeObject.js","webpack://thorviz/./src/helpers/physics/Simulation.js","webpack://thorviz/./src/visual/TitleLabel3D.js","webpack://thorviz/./src/visual/modes/ModeBase.js","webpack://thorviz/./src/helpers/physics/Attractor.js","webpack://thorviz/./src/helpers/physics/AttractorShape.js","webpack://thorviz/./src/helpers/physics/TCLogoShape.js","webpack://thorviz/./src/visual/modes/ModeNormal.js","webpack://thorviz/./src/visual/NodeChurnTimer.js","webpack://thorviz/./src/visual/modes/ModeStatus.js","webpack://thorviz/./src/helpers/physics/CirclePack.js","webpack://thorviz/./src/helpers/data/IPAddressInfo.js","webpack://thorviz/./src/visual/modes/ModeProvider.js","webpack://thorviz/./src/helpers/data/Version.js","webpack://thorviz/./src/visual/modes/ModeVersion.js","webpack://thorviz/./src/visual/modes/ModeBond.js","webpack://thorviz/./src/visual/shader/globe_atmo_textured.frag","webpack://thorviz/./src/visual/shader/standard.vert","webpack://thorviz/./src/visual/modes/ModeGeo.js","webpack://thorviz/./src/visual/NodeGroup.js","webpack://thorviz/./src/helpers/data/NodeTracker.js","webpack://thorviz/./src/helpers/data/NodeSet.js","webpack://thorviz/./src/helpers/data/URLDataSource.js","webpack://thorviz/./src/helpers/data/Storage.js","webpack://thorviz/./src/visual/MainScene.js","webpack://thorviz/./src/visual/shader/bg_smoke.frag","webpack://thorviz/./src/visual/helpers/ScreenQuad.js","webpack://thorviz/./src/visual/helpers/Background.js","webpack://thorviz/./src/components/parts/ControlPanel.vue","webpack://thorviz/./src/helpers/String.js","webpack://thorviz/./src/components/parts/ControlPanel.vue?8974","webpack://thorviz/./src/components/NodeDetailsWindow.vue","webpack://thorviz/./src/components/NodeDetailsWindow.vue?1c42","webpack://thorviz/./src/visual/CameraController.js","webpack://thorviz/./src/components/parts/LoadingIndicator.vue","webpack://thorviz/./src/components/parts/LoadingIndicator.vue?a62b","webpack://thorviz/./src/visual/helpers/TrailRenderer.js","webpack://thorviz/./src/visual/helpers/TrailTesting.js","webpack://thorviz/./src/visual/TrailTestScene.js","webpack://thorviz/./src/visual/NodeObjTestScene.js","webpack://thorviz/./src/helpers/data/SoftwareVersion.js","webpack://thorviz/./src/components/parts/NewVersionPanel.vue","webpack://thorviz/./src/components/parts/NewVersionPanel.vue?5647","webpack://thorviz/./src/components/MainScreen.vue?8f35","webpack://thorviz/./src/App.vue?7ccd","webpack://thorviz/./src/main.js","webpack://thorviz/webpack/bootstrap","webpack://thorviz/webpack/runtime/chunk loaded","webpack://thorviz/webpack/runtime/compat get default export","webpack://thorviz/webpack/runtime/define property getters","webpack://thorviz/webpack/runtime/global","webpack://thorviz/webpack/runtime/hasOwnProperty shorthand","webpack://thorviz/webpack/runtime/make namespace object","webpack://thorviz/webpack/runtime/node module decorator","webpack://thorviz/webpack/runtime/jsonp chunk loading","webpack://thorviz/webpack/startup"],"sourcesContent":["<template>\n    <MainScreen></MainScreen>\n</template>\n\n<script>\nimport MainScreen from \"@/components/MainScreen\";\nimport {preloadFont} from \"troika-three-text\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'App',\n    components: {\n        MainScreen,\n    },\n    data() {\n        return {}\n    },\n    computed: {},\n    created() {\n        document.title = 'THORViz'\n        this.preloading()\n    },\n    methods: {\n        preloading() {\n            preloadFont(\n                {\n                    font: Config.Font.Main,\n                    characters: 'abcdefghijklmnopqrstuvwxyz1234567890'\n                },\n                () => {\n                    console.log('font loading done')\n                }\n            )\n        }\n    }\n}\n</script>\n\n<style>\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: normal;\n    src: local('Norse'), url('../public/fonts/Norse-KaWl.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: bold;\n    src: local('Norse-Bold'), url('../public/fonts/NorseBold-2Kge.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'EXO2';\n    src: url('../public/fonts/Exo2-VariableFont_wght.ttf') format('truetype');\n}\n\n@supports(padding:max(0px)) {\n    body, header, footer {\n        padding-left: min(0vmin, env(safe-area-inset-left));\n        padding-right: min(0vmin, env(safe-area-inset-right));\n    }\n}\n\nhtml, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: 'EXO2', monospace;\n    background: black;\n    color: turquoise;\n}\n\na {\n    color: turquoise;\n}\n\na:visited {\n    text-decoration: none;\n}\n\n</style>\n","<template>\n    <div class=\"container\">\n        <!-- 3D -->\n        <div class=\"canvas-container\">\n            <canvas\n                ref=\"canvas\"\n                class=\"canvas-full\"\n                tabindex=\"1\"\n                @keypress.prevent=\"onKeyDown\"\n                @mousemove=\"onMouseMove\"\n                @mouseenter=\"onMouseEnter\"\n                @mouseleave=\"onMouseLeave\"\n                @click.prevent=\"onClick\"\n            >\n            </canvas>\n            <FPSCounter\n                v-show=\"showFps\"\n                ref=\"fps\"\n            >\n            </FPSCounter>\n\n            <LoadingIndicator v-if=\"isLoading\"></LoadingIndicator>\n\n            <ControlPanel @mode-selected=\"setSceneMode\" v-if=\"fullyLoaded\"></ControlPanel>\n            <NewVersionPanel v-if=\"version.newDetected\"\n                             :old-version=\"version.oldVersion\"\n                             :new-version=\"version.newVersion\"></NewVersionPanel>\n        </div>\n\n        <!-- UI -->\n        <div class=\"ui-container\">\n            <keep-alive>\n                <NodeDetailsWindow\n                    v-if=\"nodeDetailsVisible\"\n                    :node=\"nodeToViewDetails\"\n                    :node-set=\"nodeSet\"\n                    :is-left=\"nodeDetailsIsLeft\"\n                    @close=\"onCloseDetails\">\n                </NodeDetailsWindow>\n            </keep-alive>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\nimport \"@/css/common.css\"\nimport * as THREE from \"three\"\nimport {Config} from \"@/config\";\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport {UnrealBloomPass} from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport FPSCounter from \"@/components/parts/FPSCounter\";\nimport {MainScene} from \"@/visual/MainScene\";\nimport TWEEN from \"tween.js\";\nimport {Background} from \"@/visual/helpers/Background\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport ControlPanel from \"@/components/parts/ControlPanel\";\nimport NodeDetailsWindow from \"@/components/NodeDetailsWindow\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport {CameraController} from \"@/visual/CameraController\";\nimport LoadingIndicator from \"@/components/parts/LoadingIndicator\";\nimport _ from \"lodash\";\nimport {shallowRef} from \"vue\";\nimport {TrailTestScene} from \"@/visual/TrailTestScene\";\nimport {NodeObjTestScene} from \"@/visual/NodeObjTestScene\";\nimport {SoftwareVersionTracker} from \"@/helpers/data/SoftwareVersion\";\nimport NewVersionPanel from \"@/components/parts/NewVersionPanel\";\n\nexport default {\n    name: 'MainScreen',\n    components: {NewVersionPanel, LoadingIndicator, NodeDetailsWindow, ControlPanel, FPSCounter},\n    props: {},\n\n    data() {\n        return {\n            isLoading: true,\n\n            showFps: Config.Debug.ShowFPS,\n\n            mouseEnterX: 0,\n            mouseEnterY: 0,\n\n            tickCounter: 0,\n\n            sceneMode: 'normal',\n\n            fullyLoaded: false,\n\n            nodeDetailsVisible: false,\n            nodeDetailsIsLeft: true,\n            nodeToViewDetails: new NodeInfo(),\n            zoomedToNode: false,\n\n            nodeSet: shallowRef(),\n\n            version: {\n                newDetected: false,\n                oldVersion: '1',\n                newVersion: '2',\n            }\n        }\n    },\n\n    methods: {\n        onKeyDown(event) {\n            if (event.code === 'KeyR') {\n                this.cameraController.reset()\n            } else if (event.code === 'KeyF') {\n                this.showFps = !this.showFps\n            } else if (event.code === 'KeyH') {\n                console.log('help?')\n            }\n            // event.target.blur();\n        },\n\n        choseWindowSide(mouseEvent) {\n            this.nodeDetailsIsLeft = !(mouseEvent.clientX < window.innerWidth * 0.5)\n        },\n\n        onMouseMove(event) {\n            const x = event.clientX\n            const y = event.clientY\n            if (!this.mouseEnterX) {\n                this.mouseEnterX = x\n                this.mouseEnterY = y\n                return\n            }\n            const scale = Config.Controls.Camera.MouseMoveStrength\n            const dx = this.mouseEnterX - x\n            const dy = this.mouseEnterY - y\n            this.mouseEnterX = x\n            this.mouseEnterY = y\n            this.cameraController.controls.rotate(dx * scale, dy * scale)\n\n            const pickIntersection = this._pickObject(event)\n            let pickedName = ''\n            if (pickIntersection) {\n                pickedName = pickIntersection?.object?.name\n                this.content.nodeGroup.setElevatedNode(pickedName)\n\n                this.choseWindowSide(event)\n\n                if (!this.zoomedToNode) {\n                    this.nodeDetailsVisible = !!pickedName\n                    if (this.nodeDetailsVisible) {\n                        this.nodeToViewDetails = this.content.findNodeByAddress(pickedName)\n                    }\n                }\n            } else if (!this.zoomedToNode) {\n                this.nodeDetailsVisible = false\n                // this.nodeToViewDetails = this.content.findNodeByAddress(null)\n            }\n\n            this.content.nodeGroup.setElevatedNode(pickedName)\n        },\n\n        onMouseEnter(event) {\n            this.mouseEnterX = event.clientX\n            this.mouseEnterY = event.clientY\n        },\n\n        onMouseLeave() {\n        },\n\n        _pickObject(event, thoughtful = false) {\n            if (!this.raycaster || !this.content.nodeGroup) {\n                return null\n            }\n\n            const pickPosition = this.getCanvasRelativePosition(event)\n\n            // cast a ray through the frustum\n            this.raycaster.setFromCamera(pickPosition, this.cameraController.camera);\n            // get the list of objects the ray intersected\n            const intersectedObjects = this.raycaster.intersectObjects(this.content.nodeGroup.holder.children, true);\n            if (thoughtful) {\n                console.log('Objects hit by the ray caster: ' + intersectedObjects.length)\n            }\n\n            const namedObjects = _.filter(intersectedObjects, o => o.object.name && o.object.name !== '')\n            return namedObjects.length ? namedObjects[0] : null\n        },\n\n        onClick(event) {\n            const pickedObject = this._pickObject(event, true)\n            if (pickedObject && pickedObject.object) {\n                const nodeAddress = pickedObject.object.name\n                if (nodeAddress && nodeAddress.startsWith('thor')) {\n                    this.choseWindowSide(event)\n                    this._onPickNodeObject(nodeAddress)\n                }\n            } else {\n                this.nodeDetailsVisible = false\n                this.zoomedToNode = false\n                this.cameraController.restoreCamera()\n            }\n        },\n\n        _onPickNodeObject(nodeAddress) {\n            console.log('Picked node:', nodeAddress)\n            this.content.pick(nodeAddress)\n\n            this.nodeToViewDetails = this.content.findNodeByAddress(nodeAddress)\n            this.nodeDetailsVisible = true\n\n            const nodeObj = this.content.nodeGroup.getByName(nodeAddress)\n            if (nodeObj) {\n                this.zoomedToNode = true\n                this.cameraController.cameraLookAtNode(nodeObj, this.content.nodeGroup.isCurrentModeFlat)\n            }\n        },\n\n        getCanvasRelativePosition(event) {\n            const rect = this.canvas.getBoundingClientRect()\n            const pos = {\n                x: event.clientX - rect.left,\n                y: event.clientY - rect.top,\n            }\n            return {\n                x: (pos.x / this.canvas.clientWidth) * 2 - 1,\n                y: -(pos.y / this.canvas.clientHeight) * 2 + 1\n            }\n        },\n\n        resizeRendererToDisplaySize() {\n            const renderer = this.renderer\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n\n            const needResize = this.composer._width !== width || this.composer._height !== height;\n            if (needResize) {\n                renderer.setSize(width, height, false);\n                if (this.bloomPass) {\n                    this.bloomPass.setSize(width, height);\n                }\n                this.composer.setSize(width, height);\n                if (this.bg) {\n                    this.bg.setSize(width, height)\n                }\n\n                this.cameraController.onResize()\n            }\n\n            return needResize;\n        },\n\n        render() {\n            // try {\n            let delta = this.clock.getDelta();\n\n            if (document.visibilityState === 'hidden') {\n                return\n            } else if (delta > 0.4) {\n                delta = 0.01\n            }\n\n            this.resizeRendererToDisplaySize(this.renderer)\n            TWEEN.update()\n            if (this.$refs.fps) {\n                this.$refs.fps.update(delta, this.scene)\n            }\n            this.cameraController.update(delta)\n            this.content.update(delta)\n            if (this.bg) {\n                this.bg.update(delta)\n            }\n            this.composer.render(delta)\n            // } catch (e) {\n            //     console.error('Render error! ' + e)\n            // }\n\n            requestAnimationFrame(this.render);\n        },\n\n        makeSkybox() {\n            if (Config.Scene.Background.Enabled) {\n                // this.bg = new Background(this.scene)\n                // this.bg = new BlackgroundStaticBox(this.scene, Config.Scene.Sky.SkyBox, Config.Scene.Sky.SkyBoxExt)\n                this.bg = new Background(this.scene)\n                this.bg.install()\n            }\n        },\n\n        makeRenderer(canvas) {\n            let renderer = this.renderer = new THREE.WebGLRenderer({\n                canvas,\n                antialias: false,\n                logarithmicDepthBuffer: Config.Renderer.LogZBuffer,\n            });\n\n            if (devicePixelRatio) {\n                console.log(`Renderer: Setting devicePixelRatio = ${devicePixelRatio}.`)\n                renderer.setPixelRatio(devicePixelRatio)\n            }\n\n            const renderScene = new RenderPass(this.scene, this.cameraController.camera);\n\n            this.composer = new EffectComposer(renderer);\n            this.composer.addPass(renderScene);\n\n            const bloomCfg = Config.Effects.Bloom\n            if (bloomCfg.Enabled) {\n                this.bloomPass = new UnrealBloomPass(\n                    new THREE.Vector2(window.innerWidth, window.innerHeight),\n                    bloomCfg.Strength,\n                    bloomCfg.Radius,\n                    bloomCfg.Threshold)\n                this.composer.addPass(this.bloomPass);\n            }\n        },\n\n        buildScene() {\n            this.scene.add(this.cameraController.camera)\n            this.makeSkybox()\n\n            const mode = Config.Scene.DebugMode\n            if (mode === 'nodeobj') {\n                this.content = new NodeObjTestScene(this.scene, this.cameraController.camera)\n            } else if (mode === 'trail') {\n                this.content = new TrailTestScene(this.scene, this.cameraController.camera)\n            } else {\n                this.content = new MainScene(this.scene, this.cameraController.camera)\n            }\n        },\n\n        setSceneMode(mode) {\n            this.sceneMode = mode\n            if (this.content.nodeGroup) {\n                this.content.nodeGroup.mode = mode\n            }\n        },\n\n        onFullyLoaded() {\n            console.log('Removing loading screen...')\n            this.isLoading = false\n            this.fullyLoaded = true\n        },\n\n        onDataArrived(nodeSet) {\n            this.nodeSet = nodeSet\n        },\n\n        onCloseDetails() {\n            this.zoomedToNode = false\n            this.nodeDetailsVisible = false\n            this.nodeToViewDetails = new NodeInfo()\n            this.cameraController.restoreCamera()\n        },\n\n        onNewVersion(e) {\n            this.version.newDetected = true\n            this.version.oldVersion = e.oldVersion\n            this.version.newVersion = e.newVersion\n        }\n    },\n\n    mounted() {\n        this.canvas = this.$refs.canvas\n\n        this.clock = new THREE.Clock()\n        this.scene = new THREE.Scene()\n\n        this.cameraController = new CameraController(this.canvas)\n        this.makeRenderer(this.canvas)\n        this.resizeRendererToDisplaySize()\n        this.buildScene()\n\n        this.raycaster = new THREE.Raycaster()\n\n        this.versionTracker = new SoftwareVersionTracker(emitter, Config.SoftwareVersion.Interval)\n        if (Config.SoftwareVersion.Enabled) {\n            this.versionTracker.run()\n        }\n\n        emitter.on(EventTypes.FullyLoaded, this.onFullyLoaded)\n        emitter.on(EventTypes.DataSourceTick, this.onDataArrived)\n        emitter.on(EventTypes.NewViewerVersion, this.onNewVersion)\n\n        requestAnimationFrame(this.render);\n    },\n\n    unmounted() {\n        this.versionTracker.stop()\n        this.content.dispose()\n        this.cameraController.dispose()\n        emitter.off(EventTypes.FullyLoaded)\n        emitter.off(EventTypes.DataSourceTick)\n    }\n}\n\n</script>\n\n<style>\n\n.container {\n    position: relative;\n}\n\n.canvas-container {\n    position: absolute;\n    z-index: 8;\n}\n\n.ui-container {\n    position: absolute;\n    z-index: 10;\n}\n\n.canvas-full {\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n}\n\ncanvas {\n}\n\n*:focus {\n    outline: none;\n}\n\n</style>\n","const IsProduction = process.env.NODE_ENV !== 'development'\nconsole.log('Env = ', process.env.NODE_ENV)\n\n// const Live = true\n\nexport const Config = {\n    DataSource: {\n        THORNodeURL: 'https://thornode.ninerealms.com',\n        MidgardURL: 'https://midgard.ninerealms.com',\n\n        Nodes: {\n            PollPeriod: 3000.0, // msec\n        },\n\n        LastBlock: {\n            PollPeriod: 10000.0, // msec\n        },\n\n        Network: {\n            PollPeriod: 60 * 1000.0,\n        },\n\n        ReactRandomDelay: 500.0, // msec\n        NodeJuggler: {\n            // Enabled: !IsProduction\n            Enabled: false\n        }\n    },\n    Font: {\n        // Main: 'fonts/NorseBold-2Kge.otf'\n        Main: 'fonts/Exo2-VariableFont_wght.ttf'\n    },\n    Effects: {\n        Bloom: {\n            Enabled: true,\n            Strength: 0.65,\n            Threshold: 0.5,\n            Radius: 1.2,\n        }\n    },\n    Controls: {\n        Camera: {\n            Distance: {\n                Min: 800,\n                Max: 2900,\n                Start: 2000,\n            },\n            AzimuthAngleLimit: 180,\n            PolarAngleLimit: 180,\n            MouseMoveStrength: 0.0002,\n\n            Animation: {\n                Duration: 500.0,\n                DistanceWhenZoomed: 300.0,\n                Shift: {\n                    X: -200.0\n                }\n            }\n        },\n    },\n    Scene: {\n        DebugMode: false, // 'nodeobj',\n\n        Background: {\n            Enabled: IsProduction,\n        },\n        Sky: {\n            SkyBox: 'texture/skybox/star',\n            SkyBoxExt: 'png',\n        },\n        NodeObject: {\n            Simple: false,\n            PlaneScale: 1.0,\n            MinRadius: 12.0,\n            MaxScale: 80.0,\n            MinScale: 10.0,\n            ScaleFactor: 1.0,\n            RadiusFactor: 0.3,\n            Animation: {\n                // todo use this configs!\n                ReactStatus: {\n                    DurationIn: 500, // ms\n                    DurationOut: 1250,\n                    BloatScale: 1.5,\n                },\n                ReactSlash: {\n                    Force: 100.0,\n                    RedDuration: 150.0, // ms\n                }\n            },\n            Rust: {\n                MaxLagToFullRust: 2 * 60 * 60 * 24, // sec,\n                MaxStrength: 0.85,\n            },\n\n        },\n        Globe: {\n            Enabled: true,\n            Details: 64,\n            Radius: 600.0,\n            NodeElevation: 20.0,\n            TextureMap: 'texture/globe/2k_earth_nightmap.jpeg',\n            // TextureMap: 'texture/globe/2k_earth_daymap.jpeg',\n            Clouds: {\n                ElevationScale: 1.005,\n                Opacity: 0.05,\n                Texture: 'texture/globe/earth_atmo.jpeg',\n            },\n            Atmosphere: {\n                ElevationScale: 1.15,\n            },\n            InnerAtmosphere: {\n                Enabled: true,\n            }\n        },\n    },\n    Physics: {\n        BaseForce: 3500.0,\n        RepelForce: 200.0, // 2000\n        Startup: {\n            SimulationSteps: 10,\n            DeltaTime: 0.1\n        },\n        BaseFriction: 0.07, //0.04\n        HoverFriction: 0.3, //0.04\n        MaxSpeedSq: Math.pow(15000, 2),\n        Attractor: {\n            Flat: {\n                DeltaZ: 1.0,\n            }\n        },\n\n    },\n    Debug: {\n        ShowFPS: false,\n    },\n    Renderer: {\n        LogZBuffer: true,\n        // LogZBuffer: false,\n    },\n    SoftwareVersion: {\n        Enabled: true,\n        Interval: 60 * 1000, // ms\n    }\n}\n\nexport const Colors = {\n    LightningBlue: 0x00CCFF,\n    YggdrasilGreen: 0x33FF99,\n    MidgardTurqoise: 0x23DCC8,\n    NightBlack: 0x101921\n}\n","<template>\n    <div class=\"fps-counter\">\n        <span><strong>{{ Number(fps).toFixed(2) }}</strong> FPS, {{ objCount }} objects</span>\n        <span class=\"activity\" v-show=\"activityIndicator\">•</span>\n    </div>\n</template>\n\n<script>\n\nimport {countObjects} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\n\nexport default {\n    name: 'FPSCounter',\n    props: {\n        updatePeriod: {\n            type: Number,\n            default: 1.0\n        }\n    },\n    data() {\n        return {\n            fps: 0.0,\n            objCount: 0,\n            activityIndicator: false,\n            lastUpdateTime: 0.0\n        }\n    },\n    methods: {\n        pokeActivity() {\n            this.activityIndicator = true\n            setTimeout(() => {\n                this.activityIndicator = false\n            }, 100)\n        },\n\n        update(delta, scene) {\n            if (delta > 0 && +Date.now() - this.updatePeriod * 1000 > this.lastUpdateTime) {\n                this.fps = 1.0 / delta\n                this.objCount = countObjects(scene)\n                this.lastUpdateTime = +Date.now()\n            }\n        },\n    },\n    unmounted() {\n        emitter.off(EventTypes.Activity, this.pokeActivity)\n    },\n    mounted() {\n        emitter.on(EventTypes.Activity, this.pokeActivity)\n    }\n}\n\n</script>\n\n<style scoped>\n\n.fps-counter {\n    text-align: left;\n    font-size: 14pt;\n    color: whitesmoke;\n    position: absolute;\n    margin: 10px;\n    left: 0;\n    top: 0;\n}\n</style>","import * as THREE from \"three\";\n\nexport function countObjects(parent) {\n    let numOfMeshes = 0;\n    parent.traverse(function () {\n        numOfMeshes++;\n    });\n    return numOfMeshes\n}\n\nexport function clearObject(obj) {\n    if (obj) {\n        obj.remove.apply(obj, obj.children);\n    }\n}\n\nexport function longLatTo3D(long, lat, r = 1) {\n    // const phi = (lat + 180.0) * PI180\n    // const theta = (long + 180.0) / PI180\n    // const x = -r * Math.cos(phi) * Math.cos(theta)\n    // const y = r * Math.cos(phi) * Math.sin(theta)\n    // const z = r * Math.sin(phi)\n\n    const phi = Math.PI * (0.5 - (lat / 180));\n    const theta = Math.PI * (0.5 + long / 180);\n    const spherical = new THREE.Spherical(r, phi, theta);\n    return new THREE.Vector3().setFromSpherical(spherical);\n}\n\nexport function distanceXY(v1, v2) {\n    const dx = v1.x - v2.x\n    const dy = v1.y - v2.y\n    return Math.sqrt(\n        dx * dx + dy * dy\n    )\n}\n","import mitt from \"mitt\";\n\nexport const EventTypes = {\n    FullyLoaded: 'fully_loaded',\n    DataSourceTick: 'data_source_tick',\n    Activity: 'activity',\n    NewViewerVersion: 'new_viewer_version',\n    NodeChurnUpdate: 'node_churn_update',\n}\n\nexport const emitter = mitt();\n\nexport function dbgEmmitAfter(name, after_ms = 1000) {\n    setTimeout(() => {\n        emitter.emit(name)\n    }, after_ms)\n}\n\nexport function dbgSimulateLoaded() {\n    dbgEmmitAfter(EventTypes.FullyLoaded, 100)\n}\n","import { render } from \"./FPSCounter.vue?vue&type=template&id=27eb1626&scoped=true\"\nimport script from \"./FPSCounter.vue?vue&type=script&lang=js\"\nexport * from \"./FPSCounter.vue?vue&type=script&lang=js\"\n\nimport \"./FPSCounter.vue?vue&type=style&index=0&id=27eb1626&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27eb1626\"]])\n\nexport default __exports__","import {Vector3} from \"three\";\nimport _ from \"lodash\";\nimport numbro from 'numbro';\n\nexport function defaultValue(x, defaultValue) {\n    return x === undefined ? defaultValue : x\n}\n\nexport function dec2hex(dec) {\n    return dec.toString(16).padStart(2, \"0\")\n}\n\nexport class Random {\n    static getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    static getRandomFloat(min, max) {\n        return Math.random() * (max - min) + min\n    }\n\n    static getRandomSample(array) {\n        if (!array) {\n            return null\n        }\n        const index = Random.getRandomInt(array.length)\n        return array[index]\n    }\n\n    static removeRandomItem(array) {\n        if (Math.random() > 0.5) {\n            const index = Random.getRandomInt(array.length)\n            array.splice(index, 1)\n        }\n        return array\n    }\n\n    static randomVector({xMin, xMax, yMin, yMax, zMin, zMax}) {\n        xMin = defaultValue(+xMin, -10)\n        xMax = defaultValue(+xMax, 10)\n        yMin = defaultValue(+yMin, -10)\n        yMax = defaultValue(+yMax, 10)\n        zMin = defaultValue(+zMin, -10)\n        zMax = defaultValue(+zMax, 10)\n\n        return new Vector3(\n            Random.getRandomFloat(xMin, xMax),\n            Random.getRandomFloat(yMin, yMax),\n            Random.getRandomFloat(zMin, zMax),\n        )\n    }\n\n    static randomOnCircle(r = 100, cx = 0, cy = 0) {\n        const phase = Random.getRandomFloat(0, 2 * Math.PI)\n        return new Vector3(\n            cx + r * Math.cos(phase),\n            cy + r * Math.sin(phase)\n        )\n    }\n\n    static getRandomIntRange(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;  // [min, max)\n    }\n\n    // generateId :: Integer -> String\n    static generateId(len) {\n        const arr = new Uint8Array((len || 20) / 2)\n        window.crypto.getRandomValues(arr)\n        return Array.from(arr, dec2hex).join('')\n    }\n}\n\nexport class Section {\n    constructor(p1, p2) {\n        this.p1 = p1\n        this.p2 = p2\n    }\n\n    get dx() {\n        return this.p2.x - this.p1.x\n    }\n\n    get dy() {\n        return this.p2.y - this.p1.y\n    }\n\n    whichSide(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n        return Math.sign(A * C - B * D);\n    }\n\n    get center() {\n        return {\n            x: 0.5 * (this.p1.x + this.p2.x),\n            y: 0.5 * (this.p1.y + this.p2.y)\n        }\n    }\n\n    nearestPoint(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n\n        const dot = A * C + B * D;\n        const len_sq = C * C + D * D;\n        let param = -1;\n        if (len_sq !== 0) {\n            param = dot / len_sq;\n        }\n\n        if (param < 0) {\n            x = this.p1.x\n            y = this.p1.y\n        } else if (param > 1) {\n            x = this.p2.x\n            y = this.p2.y\n        } else {\n            x = this.p1.x + param * C;\n            y = this.p1.y + param * D;\n        }\n        return {x, y}\n    }\n\n    pDistance(xo, yo) {\n        const nearestPoint1 = this.nearestPoint(xo, yo)\n        return new Section(nearestPoint1, {x: xo, y: yo}).length\n    }\n\n    get length() {\n        const dx = this.dx\n        const dy = this.dy\n        return Math.sqrt(dx * dx + dy * dy)\n    }\n}\n\nexport class Util {\n    static clamp(x, xMin, xMax) {\n        return Math.min(+xMax, Math.max(+xMin, +x))\n    }\n\n    static centerOf(group) {\n        if (!group || !group.length) {\n            return\n        }\n        let sumX = _.sumBy(group, item => item.x)\n        let sumY = _.sumBy(group, item => item.y)\n        return {\n            x: sumX / group.length,\n            y: sumY / group.length\n        }\n    }\n\n    static _signHelper(p1, p2, p3) {\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n    }\n\n    static pointInTriangle(pt, threePts) {\n        const [v1, v2, v3] = threePts\n        const d1 = Util._signHelper(pt, v1, v2);\n        const d2 = Util._signHelper(pt, v2, v3);\n        const d3 = Util._signHelper(pt, v3, v1);\n\n        const hasNeg = (d1 < 0) || (d2 < 0) || (d3 < 0);\n        const hasPos = (d1 > 0) || (d2 > 0) || (d3 > 0);\n\n        return !(hasNeg && hasPos);\n    }\n}\n\nexport function shortNumber(x, mantissa = 2, postFix = '') {\n    return numbro(x).format({\n        average: true,\n        mantissa,\n    }) + postFix\n}\n\nexport function fullNumber(x, postFix) {\n    return numbro(x).format({\n        thousandSeparated: true\n    }) + postFix\n}\n\nexport const RUNE = 'Rune'\n\nexport function shortRune(x, mantissa = 2) {\n    return shortNumber(x, mantissa, ' ' + RUNE)\n}\n\nexport function fullRune(x) {\n    return fullNumber(x, ' ' + RUNE)\n}\n\nexport function smoothStep(min, max, value) {\n    var x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}","import {Vector3} from \"three\";\nimport {Util} from \"@/helpers/MathUtil\";\nimport {Config} from \"@/config\";\n\nexport class PhysicalObject {\n    constructor() {\n        this.mass = 1.0\n        this.force = new Vector3()\n        this.velocity = new Vector3()\n        this.friction = 0.0\n        this.attractors = []\n    }\n\n    update(dt) {\n        if (this.attractors.forEach) {\n            this.attractors.forEach(attr => attr.applyForce(this))\n        } else if (this.attractors.applyForce) {\n            this.attractors.applyForce(this)\n        }\n\n        const acceleration = this.force.multiplyScalar(this.mass)\n        this.velocity.copy(this.velocity.clone().add(acceleration.multiplyScalar(dt)))\n        this.velocity.multiplyScalar(Util.clamp(1.0 - this.friction, 0.0, 1.0))\n        if (this.velocity.lengthSq() > Config.Physics.MaxSpeedSq) {\n            this.velocity.setLength(Math.sqrt(Config.Physics.MaxSpeedSq))\n        }\n        this.realObject.position.add(this.velocity.clone().multiplyScalar(dt))\n    }\n\n    nullifyForce() {\n        this.force.set(0.0, 0.0, 0.0)\n    }\n\n    get radius() {\n        return 1.0\n    }\n\n    applyForceTo(direction, force) {\n        this.force.add(direction.copy().multiplyScalar(force))\n    }\n\n    get realObject() {\n        return this\n    }\n\n    repel(physObj, forceMult = 100.0) {\n        if (physObj === this) {\n            return\n        }\n\n        const thisPos = this.realObject.position\n        const otherPos = physObj.realObject.position\n\n        const d = thisPos.distanceTo(otherPos)\n        const minDistance = (this.radius + physObj.radius)\n        if (d < minDistance) {\n            const lineDir = thisPos\n                .clone()\n                .sub(otherPos)\n                .normalize()\n                .multiplyScalar(forceMult)\n            this.force.add(lineDir)\n            physObj.force.add(lineDir.negate())\n        }\n    }\n\n    get boundingBox() {\n        const x = this.realObject.position.x\n        const y = this.realObject.position.y\n        const r = this.radius\n        return {\n            minX: x - r,\n            minY: y - r,\n            maxX: x + r,\n            maxY: y + r,\n        }\n    }\n\n    shootOut(force = 1) {\n        const velocity = this.o.position.clone().normalize().multiplyScalar(force)\n        this.velocity.copy(velocity)\n    }\n}","export default \"#ifdef USE_LOGDEPTHBUF\\n#ifdef USE_LOGDEPTHBUF_EXT\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#else\\nuniform float logDepthBufFC;\\n#endif\\n#endif\\n\\n// optional: pass 2D rotation angle as an uniform\\nuniform float rotation;\\n// optional: pass 2D center point as an uniform\\nuniform vec2 center;\\n\\nvarying vec2 vUv;\\n\\n// optional: use this define to scale the model according to distance from the camera\\n#define USE_SIZEATTENUATION\\n\\n// [skipped includes]\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    // discard rotation and scale\\n    vec4 mvPosition = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);\\n\\n    // extract model's scale\\n    vec2 scale;\\n    scale.x = length(vec3(modelMatrix[0].x, modelMatrix[0].y, modelMatrix[0].z));\\n    scale.y = length(vec3(modelMatrix[1].x, modelMatrix[1].y, modelMatrix[1].z));\\n\\n    // if not defined, keep model the same size regardless of distance from the camera\\n    #ifndef USE_SIZEATTENUATION\\n    bool isPerspective = isPerspectiveMatrix(projectionMatrix);\\n    if (isPerspective) scale *= - mvPosition.z;\\n    #endif\\n\\n    // if center is not passed as uniform, create vec2 center = vec2(0.0);\\n\\n    // aligned with the camera [and scaled]\\n    vec2 alignedPosition = (position.xy - center) * scale;\\n\\n    // if rotation is not passed as uniform, skip the next block\\n\\n    // rotate 2D\\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y;\\n    rotatedPosition.y = sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y;\\n\\n    // billboard\\n    mvPosition.xy += rotatedPosition;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    // [skipped includes]\\n    #ifdef USE_LOGDEPTHBUF\\n        #ifdef USE_LOGDEPTHBUF_EXT\\n    vFragDepth = 1.0 + gl_Position.w;\\n//    vIsPerspective = float(isPerspectiveMatrix(projectionMatrix));\\n    vIsPerspective = 1.0;\\n        #else\\n//    if (isPerspectiveMatrix(projectionMatrix)) {\\n        gl_Position.z = log2(max(EPSILON, gl_Position.w + 1.0)) * logDepthBufFC - 1.0;\\n        gl_Position.z *= gl_Position.w;\\n//    }\\n        #endif\\n    #endif\\n}\";","export default \"// port from http://glslsandbox.com/e#8625.0 by Duke\\n// Fireball\\n// Awd\\n// @AlexWDunn\\n\\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\nuniform float logDepthBufFC;\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#endif\\n\\nuniform float time;\\n\\nuniform float saturation;\\nuniform float transitionShininess;\\nuniform float rust;\\n\\nuniform vec3 color;\\n\\nvarying vec2 vUv;\\n\\n#define saturate(oo) clamp(oo, 0.0, 1.0)\\n\\n// Quality Settings\\n#define MarchSteps 4\\n// Scene Settings\\n#define ExpPosition vec3(0.0)\\n#define Radius 1.0\\n#define Background vec4(0.0, 0.0, 0.0, 0.0)\\n// Noise Settings\\n#define NoiseSteps 1\\n#define NoiseAmplitude 0.06\\n//#define NoiseFrequency 4.0\\n#define NoiseFrequency 2.0\\n#define Animation vec3(0.0, -3.0, 0.5)\\n\\n// Colour Gradient\\n#define Color1 vec4(1.0, 1.0, 1.0, 1.0)\\n#define Color2 vec4(0.2, 0.8, 1.0, 1.0)\\n#define Color3 vec4(0.2, 0.03, 1.0, 1.0)\\n#define Color4 vec4(0.05, 0.02, 0.02, 0.3)\\n\\nconst float zoom = 2.8f;// 2.5 full\\n\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n//\\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 permute(vec4 x) { return mod289(((x * 34.0) + 1.0) * x); }\\nvec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\\n\\nfloat snoise(vec3 v)\\n{\\n    const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\\n    const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\\n    // First corner\\n    vec3 i = floor(v + dot(v, C.yyy));\\n    vec3 x0 = v - i + dot(i, C.xxx);\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min(g.xyz, l.zxy);\\n    vec3 i2 = max(g.xyz, l.zxy);\\n    vec3 x1 = x0 - i1 + C.xxx;\\n    vec3 x2 = x0 - i2 + C.yyy;// 2.0*C.x = 1/3 = C.y\\n    vec3 x3 = x0 - D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\\n    // Permutations\\n    i = mod289(i);\\n    vec4 p = permute(permute(permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n    float n_ = 0.142857142857;// 1.0/7.0\\n    vec3 ns = n_ * D.wyz - D.xzx;\\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);//  mod(p,7*7)\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_);// mod(j,N)\\n    vec4 x = x_ * ns.x + ns.yyyy;\\n    vec4 y = y_ * ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n    vec4 b0 = vec4(x.xy, y.xy);\\n    vec4 b1 = vec4(x.zw, y.zw);\\n    vec4 s0 = floor(b0) * 2.0 + 1.0;\\n    vec4 s1 = floor(b1) * 2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n    vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\\n    vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\\n    vec3 p0 = vec3(a0.xy, h.x);\\n    vec3 p1 = vec3(a0.zw, h.y);\\n    vec3 p2 = vec3(a1.xy, h.z);\\n    vec3 p3 = vec3(a1.zw, h.w);\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\\n}\\n\\n\\n\\nfloat Turbulence(vec3 position, float minFreq, float maxFreq, float qWidth)\\n{\\n    float value = 0.0;\\n    float cutoff = clamp(0.5 / qWidth, 0.0, maxFreq);\\n    float fade;\\n    float fOut = minFreq;\\n    for (int i = NoiseSteps; i >= 0; i--)\\n    {\\n        if (fOut >= 0.5 * cutoff) break;\\n        fOut *= 2.0;\\n        value += abs(snoise(position * fOut)) / fOut;\\n    }\\n    fade = clamp(2.0 * (cutoff - fOut) / cutoff, 0.0, 1.0);\\n    value += fade * abs(snoise(position * fOut)) / fOut;\\n    return 1.0 - value;\\n}\\n\\nfloat SphereDist(vec3 position)\\n{\\n    return length(position - ExpPosition) - Radius;\\n}\\n\\nvec4 Shade(float distance)\\n{\\n    float c1 = clamp(distance * 5.0 + 0.5, 0.0, 1.0);\\n    float c2 = clamp(distance * 5.0, 0.0, 1.0);\\n    float c3 = clamp(distance * 3.4 - 0.5, 0.0, 1.0);\\n\\n    //    #define Color1 vec4(1.0, 1.0, 1.0, 1.0)   -- white\\n    //    #define Color2 vec4(0.2, 0.8, 1.0, 1.0) --- green\\n    //    #define Color3 vec4(0.2, 0.03, 1.0, 1.0)  -- blue\\n    //    #define Color4 vec4(0.05, 0.02, 0.02, 0.3) -- black transparent\\n\\n    vec4 original = vec4(color, 1.0);\\n    vec4 a = mix(Color1, Color3, c1);\\n    vec4 b = mix(a, Color4, c2);\\n    return mix(original, b, c3);\\n}\\n\\n// Draws the scene\\nfloat RenderScene(vec3 position, out float distance)\\n{\\n    float noise = Turbulence(position * NoiseFrequency + Animation * time, 0.1, 1.5, 0.03) * NoiseAmplitude;\\n    noise = clamp(abs(noise), 0.0, 1.0);\\n    distance = SphereDist(position) - noise;\\n    return noise;\\n}\\n\\n// Basic ray marching method.\\nvec4 March(vec3 rayOrigin, vec3 rayStep)\\n{\\n    vec3 position = rayOrigin;\\n    float distance;\\n    float displacement;\\n    for (int step = MarchSteps; step >= 0; --step)\\n    {\\n        displacement = RenderScene(position, distance);\\n        if (distance < 0.05) break;\\n        position += rayStep * distance;\\n    }\\n    return mix(Shade(displacement), Background, float(distance >= 0.5));\\n}\\n\\nbool IntersectSphere(vec3 ro, vec3 rd, vec3 pos, float radius, out vec3 intersectPoint)\\n{\\n    vec3 relDistance = (ro - pos);\\n    float b = dot(relDistance, rd);\\n    float c = dot(relDistance, relDistance) - radius * radius;\\n    float d = b * b - c;\\n    intersectPoint = ro + rd * (-b - sqrt(d));\\n    return d >= 0.0;\\n}\\n\\nvec2 fade(vec2 t) {return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);}\\n\\nfloat cnoise(vec2 P) {\\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n    Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\\n    vec4 ix = Pi.xzxz;\\n    vec4 iy = Pi.yyww;\\n    vec4 fx = Pf.xzxz;\\n    vec4 fy = Pf.yyww;\\n    vec4 i = permute(permute(ix) + iy);\\n    vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\\n    vec4 gy = abs(gx) - 0.5;\\n    vec4 tx = floor(gx + 0.5);\\n    gx = gx - tx;\\n    vec2 g00 = vec2(gx.x, gy.x);\\n    vec2 g10 = vec2(gx.y, gy.y);\\n    vec2 g01 = vec2(gx.z, gy.z);\\n    vec2 g11 = vec2(gx.w, gy.w);\\n    vec4 norm = 1.79284291400159 - 0.85373472095314 *\\n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\\n    g00 *= norm.x;\\n    g01 *= norm.y;\\n    g10 *= norm.z;\\n    g11 *= norm.w;\\n    float n00 = dot(g00, vec2(fx.x, fy.x));\\n    float n10 = dot(g10, vec2(fx.y, fy.y));\\n    float n01 = dot(g01, vec2(fx.z, fy.z));\\n    float n11 = dot(g11, vec2(fx.w, fy.w));\\n    vec2 fade_xy = fade(Pf.xy);\\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n    return 2.3 * n_xy;\\n}\\n\\nvec4 doRust(vec4 col, float rust, vec2 uv) {\\n    float noise = cnoise(uv * 9.0 + time * 0.1);\\n    float step = smoothstep(rust - 0.05, rust + 0.05, noise);\\n    float n = cnoise(uv * 10.0 + cnoise(vec2(time, uv.x))) + 0.3;\\n    return col * step + vec4(n * 0.5, 0.1, 0.1, col.a) * (1. - step);\\n}\\n\\nconst float circleThickness = 0.15;\\nconst float circleRadius = 0.78;\\n\\nvoid main()\\n{\\n    vec2 p = vUv * 2.0 - 1.0;\\n\\n    // camera\\n    vec3 ro = zoom * vec3(.7, .7, 0.0);\\n    vec3 ww = normalize(vec3(0.0, 0.0, 0.0) - ro);\\n    vec3 uu = normalize(cross(vec3(0.0, 1.0, 0.0), ww));\\n    vec3 vv = normalize(cross(ww, uu));\\n    vec3 rd = normalize(p.x * uu + p.y * vv + 1.5 * ww);\\n    //    vec3 rd = normalize(p.x*uu + p.y*vv + zoom_f * ww);\\n    vec4 col = Background;\\n    vec3 origin;\\n    if (IntersectSphere(ro, rd, ExpPosition, Radius + NoiseAmplitude * 6.0, origin))\\n    {\\n        col = March(origin, rd);\\n    }\\n\\n    // After FX\\n\\n    float d = length(p);\\n    if (saturation > 1.0) {\\n        //  1.0 - smoothstep(radius-borderThickness, radius, d);\\n        float t = 1.0 - smoothstep(0.0, circleRadius, abs(circleThickness - d));\\n        col = mix(col * saturation, vec4(0.9, 0.9, 1.0, 0.5), clamp(t, 0.0, 0.5));\\n    }\\n\\n    if (transitionShininess > 0.0) {\\n        vec4 shineColor = vec4(0.8, 0.9, 1.0, 1.0);\\n        col += shineColor * transitionShininess * clamp(1.0 - d * 0.9, 0.0, col.a);\\n    }\\n//\\n//    if (rust > 0.0) {\\n//\\n//    }\\n\\n    col = doRust(col, rust, p);\\n\\n    gl_FragColor = col;\\n\\n    // Z buffer\\n    #if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n    // Doing a strict comparison with == 1.0 can cause noise artifacts\\n    // on some platforms. See issue #17623.\\n    gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2(vFragDepth) * logDepthBufFC * 0.5;\\n    #endif\\n}\\n\";","import { createDerivedMaterial } from 'troika-three-utils'\n\nexport function createBillboardMaterial(baseMaterial, opts) {\n    return createDerivedMaterial(\n        baseMaterial,\n        Object.assign(\n            {\n                vertexMainOutro: `\n                    vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n                    vec3 scale = vec3(\n                      length(modelViewMatrix[0].xyz),\n                      length(modelViewMatrix[1].xyz),\n                      length(modelViewMatrix[2].xyz)\n                      );\n                    // size attenuation: scale *= -mvPosition.z * 0.2;\n                    mvPosition.xyz += position * scale;\n                    gl_Position = projectionMatrix * mvPosition;\n                    `\n            },\n            opts\n        )\n    )\n}\n","const EVENT_TYPE = Object.freeze({\n    CREATE: 'create',\n    DESTROY: 'destroy',\n\n    SLASH: 'slash',\n    IP_ADDRESS: 'ip_address',\n    STATUS: 'status',\n    VERSION: 'version',\n    FORCED_LEAVE: 'forced_to_leave',\n    REQUESTED_LEAVE: 'requested_to_leave',\n    AWARD: 'current_award',\n    BOND_CHANGE: 'bond',\n    OBSERVE_CHAIN: 'observe_chains',\n    ACTIVE_BLOCK_HEIGHT: 'active_block_height',\n})\n\nexport class NodeEvent {\n    constructor(type, node, prevNode, currValue, prevValue, nodeSet) {\n        this.type = type\n        this.node = node\n        this.prevNode = prevNode\n        this.currValue = currValue\n        this.prevValue = prevValue\n        this.nodeSet = nodeSet\n        this.isTramp = node ? node.address === '' : false\n    }\n\n    toString() {\n        const addr = this.node ? this.node.address : '?'\n        return `NodeEvent(${this.type}, ${addr}, ${this.currValue} => ${this.prevValue})`\n    }\n}\n\nNodeEvent.EVENT_TYPE = EVENT_TYPE\n","export const SEC_PER_BLOCK = 6.0\n\nexport const THOR_DECIMAL = Math.pow(10, 8)\nexport const THOR_DECIMAL_INV = 1.0 / THOR_DECIMAL\n\nexport function thorToFloat(x) {\n    return parseFloat(x) * THOR_DECIMAL_INV\n}\n","import {thorToFloat} from \"@/helpers/THORUtil\";\n\nexport class NodeInfo {\n    constructor(node) {\n        if (!node) {\n            node = {\n                status: 'Unknown',\n                jail: {},\n                bond_providers: {},\n                preflight_status: {},\n            }\n        }\n\n        this.address = node.node_address\n        this.status = node.status\n        this.bond = thorToFloat(node.total_bond)\n        this.activeBlockHeight = +node.active_block_height\n        this.bondAddress = node.node_operator_address\n        this.statusSince = +node.status_since\n        this.requestedToLeave = !!node.requested_to_leave\n        this.forcedToLeave = !!node.forced_to_leave\n        this.leaveHeight = +node.leave_height\n        this.IPAddress = node.ip_address\n        this.version = node.version\n        this.slashPoints = +node.slash_points\n        if(node.jail) {\n            this.jail = {\n                address: node.jail.node_address,\n                releaseHeight: +node.jail.release_height,\n                reason: node.jail.reason,\n            }\n        }\n        this.currentAward = thorToFloat(node.current_award)\n\n        this.observeChains = {}\n\n        if (node['observe_chains']) {\n            for (let {chain, height} of node['observe_chains']) {\n                this.observeChains[chain] = +height\n            }\n            // no TERRA any more...\n            delete this.observeChains['TERRA']\n        }\n\n        if(node.preflight_status) {\n            this.preflightStatus = {\n                status: node.preflight_status.status,\n                reason: node.preflight_status.reason,\n                code: +node.preflight_status.code\n            }\n        }\n\n        if(node.bond_providers) {\n            this.bondProviders = {\n                address: node.bond_providers['node_address'],\n                fee: (+node.bond_providers['node_operator_fee']) / 10000.0,\n                providers: []\n            }\n\n            if (node.bond_providers.providers) {\n                for (let {bond_address, bond} of node.bond_providers.providers) {\n                    this.bondProviders.providers.push({\n                        bond_address,\n                        bond: thorToFloat(bond)\n                    })\n                }\n            }\n        }\n\n        // post init\n        this.shortAddress = this.address ? this.address.substring(this.address.length - 4) : '?'\n\n        this.IPInfo = {\n            flag: '🏳️'\n        }\n\n        // this.requestedToLeave = true\n        // this.forcedtoLeave = true\n    }\n\n    get isActive() {\n        return this.status === NodeStatus.Active\n    }\n\n    get isStandby() {\n        return this.status === NodeStatus.Standby || this.status === NodeStatus.Ready\n    }\n}\n\nexport const NodeStatus = {\n    Standby: 'Standby',\n    Ready: 'Ready',\n    Whitelisted: 'Whitelisted',\n    Disabled: 'Disabled',\n    Active: 'Active',\n    Unknown: 'Unknown',\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial, Vector3} from \"three\";\nimport {Random, smoothStep, Util} from \"@/helpers/MathUtil\";\nimport {Text} from 'troika-three-text'\nimport {Colors, Config} from \"@/config\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport StdVertexShader from '@/visual/shader/billboard.vert'\nimport FragShader1 from '@/visual/shader/node_obj_2.frag'\nimport {randFloat} from \"three/src/math/MathUtils\";\nimport {clamp} from \"lodash\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\nimport TWEEN from \"tween.js\";\n\n\nconst noCfg = Config.Scene.NodeObject\nconst geomSize = noCfg.PlaneScale\n\nconst geometry = new THREE.BoxGeometry(geomSize, geomSize, geomSize)\nconst simpleGeometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\n\nconst SlashColor = 0xff3300\n\nconst NormalLabelZ = 42.42\n\nconst CirclePackFactor = 1 / Math.sqrt(0.72)\n\nexport class NodeObject extends PhysicalObject {\n    constructor(node) {\n        super()\n\n        this.node = node\n        this.normalizedBond = this.node.bond / 1_000_000  // millions of Rune\n        this.mass = this.normalizedBond + 1.0\n\n        this.o = new THREE.Group()\n        this.o.name = this.name\n\n        this.attractors = []\n        this.mass = 1.0 + this.normalizedBond * 2.0\n        this.friction = Config.Physics.BaseFriction\n\n        this._makeSphere()\n        this._makeLabel()\n\n        this._reactingToSlash = false\n        this._elevated = false\n    }\n\n    get name() {\n        return this.node.address\n    }\n\n    set elevated(v) {\n        v = Boolean(v)\n        if (this._elevated !== v) {\n            this._elevated = v\n\n            this.material.uniforms.saturation.value = this._elevated ? 1.5 : 1.0\n            this.material.uniformsNeedUpdate = true\n        }\n        this.friction = Config.Physics[v ? 'HoverFriction' : 'BaseFriction']\n    }\n\n    get elevated() {\n        return this._elevated\n    }\n\n    _getSphereColor() {\n        let color = 0x111111;\n        const st = this.node.status\n        if (st === NodeStatus.Standby) {\n            color = 0x167a56\n        } else if (st === NodeStatus.Ready) {\n            color = 0x167a8f\n        } else if (st === NodeStatus.Active) {\n            color = Random.getRandomSample([\n                Colors.LightningBlue,\n                Colors.YggdrasilGreen\n            ])\n        } else if (st === NodeStatus.Disabled) {\n            color = 0xee0000\n        } else if (st === NodeStatus.Whitelisted) {\n            color = 0x444444\n        } else if (st === NodeStatus.Unknown) {\n            color = 0x111144\n        }\n        return new THREE.Color(color)\n    }\n\n    _makeSphere() {\n        if (!this.mesh) {\n            if (Config.Scene.NodeObject.Simple) {\n                this._makeSimpleSphere()\n            } else {\n                this._makeCoolSphere()\n            }\n        }\n\n        if (this.material.uniforms) {\n            this.material.uniforms.color.value = this._getSphereColor()\n            this.material.uniformsNeedUpdate = true\n        }\n\n        this.mesh.name = this.name\n        this.mesh.renderOrder = 1\n\n        const scale = this.calculateScale\n        this.mesh.scale.setScalar(scale)\n\n        this.mesh.position.z = randFloat(-0.1, 0.1)\n        this.o.renderOrder = 1\n        this.o.add(this.mesh)\n    }\n\n    get currentColor() {\n        return this.material.uniforms.color.value\n    }\n\n    _makeSimpleSphere() {\n        // simpleGeometry\n        this.material = new THREE.MeshBasicMaterial({\n            color: this._getSphereColor()\n        })\n        this.mesh = new THREE.Mesh(simpleGeometry, this.material)\n    }\n\n    _makeCoolSphere() {\n        if (!this.material) {\n            this._makeMaterial()\n        }\n\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        return this.mesh\n    }\n\n    _makeMaterial() {\n        // material\n\n        const initRust = -1.0\n\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                \"time\": {value: Random.getRandomFloat(0.0, 100.0)},\n                \"saturation\": {value: 1.0},\n                \"color\": {value: this._getSphereColor()},\n                \"transitionShininess\": {value: 0.0},\n                \"rust\": {value: initRust},\n            },\n            vertexShader: StdVertexShader,\n            fragmentShader: FragShader1,\n            transparent: true,\n            depthTest: true,\n            depthWrite: true,\n            // sizeAttenuation: true,\n        })\n    }\n\n    get calculateScale() {\n        const scale = this.normalizedBond * noCfg.MaxScale\n        return Util.clamp(scale, noCfg.MinScale, noCfg.MaxScale)\n    }\n\n    get realObject() {\n        return this.o\n    }\n\n    get position() {\n        return this.o.position\n    }\n\n    _makeLabel() {\n        const address = this.node.address\n        if (address && address.length >= 4) {\n            const nameTextObj = this.nameTextObj = new Text()\n\n            nameTextObj.text = address.slice(-4)\n            nameTextObj.font = Config.Font.Main\n            nameTextObj.fontWeight = 900\n            nameTextObj.fontSize = 15\n            nameTextObj.position.z = NormalLabelZ\n            nameTextObj.color = this.node.status === NodeStatus.Active ? 0xFFFFFF : 0xBBBBBB;\n            nameTextObj.anchorX = 'center'\n            nameTextObj.anchorY = 'middle'\n            nameTextObj.outlineWidth = 2.0\n            nameTextObj.sync()\n            nameTextObj.renderOrder = 100\n            nameTextObj.name = this.name\n            nameTextObj.material = createBillboardMaterial(new MeshBasicMaterial())\n            nameTextObj.scale.setScalar(\n                clamp(this.normalizedBond * 1.1, 0.5, 1.5)\n            )\n            this.o.add(nameTextObj)\n            this.labelObj = nameTextObj\n        }\n    }\n\n    dispose() {\n        if (this.nameTextObj) {\n            this.nameTextObj.dispose()\n        }\n        this.material.dispose()\n    }\n\n    get radius() {\n        return Math.max(noCfg.MinRadius, this.mesh.scale.x * noCfg.PlaneScale * noCfg.RadiusFactor)\n    }\n\n    static estimateRadiusOfGroup(nodeObjList) {\n        let sum_r2 = 0.0\n        for (const nodeObj of nodeObjList) {\n            sum_r2 += nodeObj.radius * nodeObj.radius\n        }\n        const r = Math.sqrt(sum_r2)\n        return Math.max(0.1, CirclePackFactor * r)\n    }\n\n    update(dt) {\n        super.update(dt);\n\n        if (this.material) {\n            this.material.uniforms.time.value += dt\n        }\n\n        // todo: remove debug\n        // if (Math.random() > 0.99) {\n        //     this._animateTransitionShininess()\n        // }\n    }\n\n    updateFromCamera(camera) {\n        const dir = camera.position.clone().sub(this.position)\n        dir.normalize().multiplyScalar(NormalLabelZ)\n        this.nameTextObj.position.copy(dir)\n    }\n\n    // ----------------- R E A C T I O N S -------------------\n\n    react(event) {\n        this.node = event.node\n        if (event.type === NodeEvent.EVENT_TYPE.OBSERVE_CHAIN) {\n            this.reactChain(event.nodeSet)\n        } else if (event.type === NodeEvent.EVENT_TYPE.SLASH) {\n            this.reactSlash()\n        } else if (event.type === NodeEvent.EVENT_TYPE.STATUS) {\n            this.reactStatusChange(event.node.status)\n        } else if (event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            this.reactVersion()\n        }\n\n        // if(Math.random() > 0.8) {\n        //     this.reactSlash()\n        // }\n    }\n\n    reactChain(nodeSet) {\n        // update: node appearance according chain lag\n        this._updateRust(nodeSet)\n\n        const chainReactionVelocity = 1.0 // 100\n        // this.mesh.rotateZ(1.0)\n        const pos = this.o.position.clone().normalize()\n        const perp = pos.cross(new Vector3(0, 0, 1)).multiplyScalar(chainReactionVelocity)\n        this.velocity.add(perp)\n    }\n\n    reactVersion() {\n        this._animateTransitionShininess()\n    }\n\n    reactSlash() {\n        if (this._reactingToSlash || !this.material) {\n            return\n        }\n\n        const slashForce = 100.0\n        this.shootOut(slashForce)\n        // this.velocity.set(Random.randomOnCircle(slashForce))\n\n        this._animateScale(0.82, 200, 600)\n\n        this._reactingToSlash = true\n\n        const savedColor = this.material.uniforms.color.value.clone()\n\n        this.material.uniforms.color.value.set(SlashColor)\n        this.material.uniformsNeedUpdate = true\n\n        setTimeout(() => {\n            this.material.uniforms.color.value.set(savedColor)\n            this.material.uniformsNeedUpdate = true\n            this._reactingToSlash = false\n        }, 100)\n    }\n\n    reactStatusChange(newStatus) {\n        console.log(`New status ${this.node.status} -> ${newStatus}`)\n        this._animateTransitionShininess()\n    }\n\n    _updateRust(nodeSet) {\n        this.material.uniforms.rust.value = this._getRust(nodeSet)\n        this.material.uniformsNeedUpdate = true\n    }\n\n    _getRust(nodeSet) {\n        if (!this.node.isActive) {\n            return -1.0\n        }\n\n        const rustCfg = Config.Scene.NodeObject.Rust\n\n        const {max} = nodeSet.getChainHeightLagAllSeconds(this.node)\n        const maxRustLag = rustCfg.MaxLagToFullRust\n        const a = smoothStep(0, maxRustLag, max)\n        return 2.0 * clamp(a, 0.0, rustCfg.MaxStrength) - 1.0\n    }\n\n    _animateScale(targetScaleOfNormal,\n                  durationIn = 1000,\n                  durationOut = 1000,\n                  easing = TWEEN.Easing.Sinusoidal.InOut) {\n        const normalScale = this.calculateScale\n        const targetScale = targetScaleOfNormal * normalScale\n        new TWEEN.Tween(this.mesh.scale)\n            .to(new THREE.Vector3(targetScale, targetScale, targetScale), durationIn)\n            .easing(easing)\n            .start()\n            .chain(\n                new TWEEN.Tween(this.mesh.scale)\n                    .to(new THREE.Vector3(normalScale, normalScale, normalScale), durationOut)\n                    .easing(easing)\n            )\n    }\n\n    _animateTransitionShininess() {\n        const durationIn = 500.0\n        const durationOut = durationIn * 2.5\n        const easing = TWEEN.Easing.Sinusoidal.InOut\n\n        new TWEEN.Tween(this.material.uniforms.transitionShininess)\n            .to({value: 1.0}, durationIn)\n            .easing(easing)\n            .start().onComplete(() => {\n            this._makeSphere()\n        }).chain(\n            new TWEEN.Tween(this.material.uniforms.transitionShininess)\n                .to({value: 0.0}, durationOut)\n                .easing(easing)\n        )\n\n        this._animateScale(1.5, durationIn, durationOut)\n    }\n}\n","import _ from \"lodash\";\nimport RBush from \"rbush\";\n\nexport class Simulation {\n    constructor() {\n        this._objects = {}\n\n        this.repelForce = 0.0\n        this.rBush = new RBush()\n        this.repelEnabled = true\n    }\n\n    getByName(name) {\n        return this._objects[name]\n    }\n\n    addObject(name, physObj) {\n        const existing = this.getByName(name)\n        if (existing) {\n            console.warn('PhysObj already exists. No nothing')\n            return existing\n        }\n\n        this._objects[name] = physObj\n    }\n\n    removeObject(name) {\n        const physObj = this.getByName(name)\n        if (!physObj) {\n            console.error('PhysObj not found!')\n            return\n        }\n\n        physObj.dispose()\n        delete this._objects[name]\n    }\n\n    _repelForceCalculation(obj) {\n        let vicinity = this.rBush.search(obj.boundingBox)\n\n        for (const rBushLeaf of vicinity) {\n            if (rBushLeaf.o !== obj) {\n                obj.repel(rBushLeaf.o, this.repelForce)\n            }\n        }\n    }\n\n    _updateObject(physObj, delta) {\n        physObj.nullifyForce()\n        if(this.repelEnabled) {\n            this._repelForceCalculation(physObj)\n        }\n        physObj.update(delta)\n    }\n\n    update(dt) {\n        if (isNaN(dt)) {\n            return\n        }\n        this.rBush = new RBush()\n        this.rBush.load(_.map(_.values(this._objects), physObj => ({\n            ...physObj.boundingBox,\n            o: physObj\n        })))\n        _.forEach(_.values(this._objects), obj => this._updateObject(obj, dt))\n    }\n\n    doNSteps(n, dt = 0.016) {\n        for (let step = 0; step < n; ++step) {\n            this.update(dt)\n        }\n    }\n\n    get physicalObjects() {\n        return _.values(this._objects)\n    }\n\n    get objectPositions() {\n        return _.map(this.physicalObjects, 'position')\n    }\n\n    get allNames() {\n        return _.keys(this._objects)\n    }\n\n    dispose() {\n        this._objects = {}\n        this.rBush.clear()\n    }\n\n    get size() {\n        return _.size(this._objects)\n    }\n\n    get entries() {\n        return _.entries(this._objects)\n    }\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial} from \"three\";\nimport {Text} from 'troika-three-text'\nimport {Config} from \"@/config\";\nimport TWEEN from \"tween.js\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\n\nexport class TitleLabel3D extends THREE.Object3D {\n    constructor(text, scale = 20, rotAngle = -45, billboard = false) {\n        super();\n        this.text = text\n        const t = this.label = new Text()\n        t.font = Config.Font.Main\n        t.fontSize = 10\n        t.scale.set(scale, scale, scale)\n        t.color = 0xFFFFFF\n        t.anchorX = 'center'\n        t.anchorY = 'middle'\n        t.textAlign = 'center'\n        t.text = text\n        if (billboard) {\n            t.material = createBillboardMaterial(new MeshBasicMaterial({\n                transparent: true,\n            }))\n        }\n        t.rotateX(THREE.MathUtils.degToRad(rotAngle))\n        t.sync()\n        this.t = t\n        this.add(t)\n        this.animDuration = 500\n        this.animDistance = 1500\n        this.easeType = TWEEN.Easing.Back.Out\n    }\n\n    updateText(newText) {\n        this.text = newText\n        this.t.text = newText\n        this.t.sync()\n    }\n\n    set color(c) {\n        this.t.color = c\n    }\n\n    get color() {\n        return this.t.color\n    }\n\n    set opacity(o) {\n        this.t.fillOpacity = o * 255.0\n    }\n\n    get opacity() {\n        return this.t.material.opacity\n    }\n\n    animateIn() {\n        this.t.position.z = this.animDistance\n        this.opacity = 0.0\n\n        new TWEEN.Tween(this.t.position)\n            .to({z: 0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this)\n            .to({opacity: 1.0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n    }\n\n    animateOut(kill = false) {\n        const expandedDuration = this.animDuration * 5\n        new TWEEN.Tween(this.t.position)\n            .to({z: -this.animDistance * 5}, expandedDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this)\n            .to({opacity: 0.0}, expandedDuration * 0.5)\n            .easing(this.easeType)\n            .start().onComplete(() => {\n            if (kill) {\n                if (this.parent) {\n                    this.parent.remove(this)\n                }\n            }\n        })\n    }\n}","import {TitleLabel3D} from \"@/visual/TitleLabel3D\";\nimport _ from \"lodash\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport TWEEN from \"tween.js\";\n\nexport class ModeBase {\n    constructor(scene) {\n        this.scene = scene\n        this.active = false\n        this.isFlat = true\n        this._labelsHash = {}\n    }\n\n    handleObject(physObj) {\n        +physObj // do nothing\n    }\n\n    reactEvent(event, nodes) {\n        +event;\n        +nodes\n    }\n\n    makeLabel({\n                  text,\n                  position,\n                  scale = 20,\n                  rotation = -45.0,\n                  bb = false,\n                  key = null,\n                  moveIfExists = true\n              }) {\n        if (!text || text === '') {\n            return\n        }\n\n        key = key || Random.generateId()\n\n        const label = this.findLabelByKey(key)\n        if(label && label.text !== text) {\n            console.log(`Updating label ${key} from ${label.text} to ${text}`)\n            label.updateText(text)\n        }\n\n        if (moveIfExists) {\n            if (label) {\n                new TWEEN.Tween(label.position)\n                    .to(position, 1000.0)\n                    .easing(TWEEN.Easing.Sinusoidal.InOut)\n                    .start();\n                return label\n            }\n        }\n\n        const titleLabel = new TitleLabel3D(text, scale, rotation, bb)\n        titleLabel.key = key\n\n        titleLabel.position.copy(position)\n        this.scene.add(titleLabel)\n\n        this._labelsHash[key] = titleLabel\n\n        return titleLabel\n    }\n\n    onEnter() {\n    }\n\n    _triggerOnEnter(a, b) {\n        this.onEnter(a, b)\n\n        this.active = true\n        _.values(this._labelsHash).forEach(label => label.animateIn())\n    }\n\n    onLeave() {\n    }\n\n    _triggerOnLeave(a, b) {\n        this.onLeave(a, b)\n\n        this.active = false\n        this.clearLabels()\n    }\n\n    findLabelByKey(key) {\n        return this._labelsHash[key]\n    }\n\n    killLabelByKey(key) {\n        console.log(`Killing label ${key}.`)\n        const label = this.findLabelByKey(key)\n        if (label) {\n            label.animateOut(true)\n            delete this._labelsHash[key]\n        }\n    }\n\n    clearLabels() {\n        _.values(this._labelsHash).forEach(label => label.animateOut(true))\n\n        this._labelsHash = {}\n    }\n\n    update(dt) {\n        +dt\n    }\n\n    dispose() {}\n}","import {distanceXY} from \"@/helpers/3D\";\n// import * as THREE from \"three\";\n\nexport class Attractor {\n    constructor(position,\n                constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0,\n                radius = -1.0,\n                relaxRadius = 0.0) {\n        this.position = position\n        this.constCoeff = constCoeff\n        this.linearCoeff = linearCoeff\n        this.quadraticCoeff = quadraticCoeff\n        this.radius = radius\n        this.relaxRadius = relaxRadius\n    }\n\n    applyForceToDistance(physObj, distance, toPosition) {\n        const fromPosition = physObj.realObject.position\n        const f = this.getForce(distance, fromPosition, toPosition)\n        physObj.force.add(f)\n    }\n\n    getForce(distance, fromPosition, toPosition) {\n        const magnitude = this.constCoeff + distance * this.linearCoeff + distance * distance * this.quadraticCoeff\n        return toPosition.clone().sub(fromPosition).normalize().multiplyScalar(magnitude)\n    }\n\n    distance(physObj) {\n        const objPosition = physObj.realObject.position\n        return this.position.distanceTo(objPosition)\n    }\n\n    applyForce(physObj) {\n        const distance = this.distance(physObj)\n        const infiniteRadius = this.radius <= 0.0\n\n        if ((infiniteRadius || distance <= this.radius) && distance > this.relaxRadius) {\n            this.applyForceToDistance(physObj, distance, this.position)\n        }\n    }\n}\n\nAttractor.INFINITE = -1\n\nexport class AttractorFlat extends Attractor {\n    distance(physObj) {\n        return distanceXY(this.position, physObj.realObject.position)\n    }\n\n    applyForce(physObj) {\n        super.applyForce(physObj);\n        this.squishZ(physObj)\n    }\n\n    squishZ(phyObj) {\n        const zDist = phyObj.realObject.position.z - this.position.z\n        let fZ = 0.0\n        if(Math.abs(zDist) > 1.0) {\n            fZ = -zDist * 100.0\n        }\n        phyObj.force.z = fZ\n    }\n}","import _ from \"lodash\";\nimport {Section, Util} from \"@/helpers/MathUtil\";\nimport {AttractorFlat} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\n\n\nexport class AttractorShape extends AttractorFlat {\n    constructor(triangles, constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0, z = 0) {\n        const center = Util.centerOf(_.flatten(triangles))\n        super(new THREE.Vector3(center.x, center.y, 0.0),\n            constCoeff, linearCoeff, quadraticCoeff, 0, 0)\n        this.triangles = triangles\n        this.center = center\n        this.z = z\n    }\n\n    get allSectors() {\n        const sectors = []\n        for (const triangle of this.triangles) {\n            sectors.push(new Section(triangle[0], triangle[1]))\n            sectors.push(new Section(triangle[1], triangle[2]))\n            sectors.push(new Section(triangle[2], triangle[0]))\n        }\n        return sectors\n    }\n\n    applyForce(physObj) {\n        if (!this.triangles || !this.triangles.length) {\n            return\n        }\n        const objPosition = physObj.realObject.position\n        const p = {x: objPosition.x, y: objPosition.y}\n        const relaxed = _.some(this.triangles, tri => Util.pointInTriangle(p, tri))\n\n        this.squishZ(physObj)\n\n        if (relaxed) {\n            return\n        }\n\n        const nearestSector = _.minBy(this.allSectors, sector => sector.pDistance(p.x, p.y))\n        const nearestPoint = nearestSector.nearestPoint(p.x, p.y)\n        const distance = new Section(nearestPoint, p).length\n        this.applyForceToDistance(physObj, distance, new THREE.Vector3(nearestPoint.x, nearestPoint.y, this.z))\n    }\n}\n","export class THORChainLogoShape {\n    static original() {\n        return [\n            [\n                {x: 0, y: 0},\n                {x: 133, y: -133},\n                {x: -238, y: -291},\n            ],\n            [\n                {x: 0, y: 0},\n                {x: -133, y: 135},\n                {x: 291, y: 311},\n            ]\n        ]\n    }\n\n    static triangles(dx = 0, dy = 0, scale = 1.0) {\n        const transformed = []\n        for(const triangle of this.original()) {\n            const pts = []\n            for(const {x, y} of triangle) {\n                pts.push({\n                    x: x * scale + dx,\n                    y: y * scale + dy\n                })\n            }\n            transformed.push(pts)\n        }\n        return transformed\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {Random} from \"@/helpers/MathUtil\";\n\nexport class ModeNormal extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        const force = Config.Physics.BaseForce\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.8), force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.tcAttractor\n    }\n\n    onEnter(nodeObjList) {\n        const label = this.makeLabel({text: 'THORChain', position: new THREE.Vector3(0, -580, -10), scale: 18})\n        label.opacity = 0.8;\n\n        super.onEnter();\n\n        nodeObjList.forEach(o => {\n            o.velocity.add(new THREE.Vector3(0, Random.getRandomFloat(100, 1000), 0))\n        })\n    }\n}\n","import * as THREE from \"three\";\n\nexport class NodeChurnTimer extends THREE.Object3D {\n    constructor() {\n        super();\n    }\n\n    dispose() {\n\n    }\n}","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport _ from \"lodash\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\nimport {NodeChurnTimer} from \"@/visual/NodeChurnTimer\";\n\nconst ANY_STATUS = '*'\n\nexport class ModeStatus extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        const force = Config.Physics.BaseForce\n\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.6), force)\n        this._standbyAttractors = [\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force * 0.02),\n        ]\n\n        this.attractors = {\n            [NodeStatus.Active]: [\n                this.tcAttractor,\n            ],\n            [NodeStatus.Standby]: this._standbyAttractors,\n            [NodeStatus.Ready]: this._standbyAttractors,\n            [ANY_STATUS]: [\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force * 0.02),\n            ],\n        }\n\n        this.nodeChurnTimer = new NodeChurnTimer()\n        this.scene.add(this.nodeChurnTimer)\n        this.nodeChurnTimer.visible = false\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = null\n\n        const bestAttractors = this.attractors[physObj.node.status]\n        if (bestAttractors) {\n            physObj.attractors = bestAttractors\n        } else {\n            physObj.attractors = this.attractors[ANY_STATUS]\n        }\n    }\n\n    onEnter(nodeObj) {\n        const statusesCounted = _.countBy(nodeObj, 'node.status')\n        const standbyCount = (statusesCounted[NodeStatus.Standby] || 0) + (statusesCounted[NodeStatus.Ready] || 0)\n        const activeCount = (statusesCounted[NodeStatus.Active] || 0)\n        const otherCount = nodeObj.length - (standbyCount + activeCount)\n\n        this.makeLabel({text: 'Active', position: new THREE.Vector3(0, -500, 0), scale: 20})\n        this.makeLabel({text: 'Standby', position: new THREE.Vector3(-this._sideDistance, -420, 0), scale: 12}).opacity = 0.8\n        this.makeLabel({text: 'Other', position: new THREE.Vector3(this._sideDistance, -420, 0), scale: 12}).opacity = 0.8\n\n        this.makeLabel({\n            text: activeCount, position: new THREE.Vector3(0, -650, 0), scale: 10,\n        })\n        this.makeLabel({\n            text: standbyCount, position: new THREE.Vector3(-this._sideDistance, -500, 0), scale: 6,\n        })\n        this.makeLabel({\n            text: otherCount, position: new THREE.Vector3(this._sideDistance, -500, 0), scale: 6,\n        })\n\n\n        super.onEnter();\n    }\n}\n","import * as THREE from \"three\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {Config} from \"@/config\";\n\n\nclass VirtualObject extends PhysicalObject {\n    constructor(x, y, r, name, attractor, friction) {\n        super();\n        this.name = name\n        this.position = new THREE.Vector3(x, y, 0)\n        this._radius = r\n        this.attractors = attractor\n        this.friction = friction\n    }\n\n    get radius() {\n        return this._radius\n    }\n}\n\nconst fric = Config.Physics.BaseFriction\n\nexport class CirclePack {\n    constructor(force, boundRadius, repelForce = 600, friction = fric, iterSteps = 1) {\n        this.force = force\n        this.boundRadius = boundRadius\n        this.iterSteps = iterSteps\n        this.dt = 0.05\n        this.simulation = new Simulation()\n        this.simulation.repelForce = repelForce\n        this.friction = friction\n\n        this.metaAttractor = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, -1, 0)\n    }\n\n    addCircle(name, radius) {\n        this.simulation.addObject(\n            name,\n            new VirtualObject(\n                0,\n                0,\n                radius,\n                name,\n                this.metaAttractor,\n                this.friction,\n            )\n        )\n    }\n\n    arrangeAroundCenter() {\n        if (!this.simulation.size) {\n            return this\n        }\n\n        const deltaAngle = Math.PI * 2 / this.simulation.size\n        const r = this.boundRadius * 0.5 * 0.8\n        let angle = Math.PI * 0.5\n\n        for (const name of this.simulation.allNames) {\n            const obj = this.simulation.getByName(name)\n            if (obj) {\n                obj.position.x = r * Math.cos(angle)\n                obj.position.y = r * Math.sin(angle)\n            }\n\n            angle -= deltaAngle\n        }\n        return this\n    }\n\n    clear() {\n        this.simulation.dispose()\n    }\n\n    pack(dt, steps) {\n        if (!this.simulation.size) {\n            return this\n        }\n        dt = dt || this.dt\n        steps = steps || this.iterSteps\n        this.simulation.doNSteps(steps, dt)\n        return this\n    }\n\n    getResults() {\n        const results = {}\n        for (const [name, {position, radius}] of this.simulation.entries) {\n            results[name] = {\n                position, radius\n            }\n        }\n        return results\n    }\n}\n","import axios from \"axios\";\nimport lscache from \"lscache\";\nimport _ from \"lodash\";\n\n\nexport class IPAddressInfo {\n    constructor(j) {\n        this.ipAddress = j['ip']\n        this.countryCode = j['country_code']\n        this.country = j['country_name']\n        this.city = j['city']\n        this.latitude = j['latitude']\n        this.longitude = j['longitude']\n        this.providerName = j['org']\n        this.flag = IPAddressInfo.getFlagEmoji(this.countryCode)\n    }\n\n    static getFlagEmoji(countryCode) {\n        if (countryCode) {\n            const codePoints = countryCode\n                .toUpperCase()\n                .split('')\n                .map(char => 127397 + char.charCodeAt());\n            return String.fromCodePoint(...codePoints);\n        } else {\n            return ''\n        }\n    }\n}\n\n\nexport const UNKNOWN = 'UNKNOWN'\n\n\nexport class IPAddressInfoLoader {\n    constructor(expireMinutes = 24 * 60) {\n        this.expireMinutes = expireMinutes\n        this._key = 'IPInfo2'\n    }\n\n    url(ip) {\n        return `https://settings.thornode.org/api/node/ip/${ip}`\n    }\n\n    async loadFromService(ips) {\n        const r = await axios.get(this.url(ips.join(',')))\n        console.info(`Loaded IP info for (${ips}) => ${r.status}`)\n        return _.mapValues(r.data, j => new IPAddressInfo(j))\n    }\n\n    loadFromCache(ip) {\n        return lscache.get(`${this._key}:${ip}`)\n    }\n\n    saveToCache(data) {\n        if (!data || !data.ipAddress) {\n            console.warn('no data to save!')\n            return\n        }\n        const ip = data.ipAddress\n        lscache.set(`${this._key}:${ip}`, data, this.expireMinutes)\n    }\n\n    async loadBunch(ipAddresses) {\n        const results = {}\n        const requestList = []\n        _.each(ipAddresses, ip => {\n            const data = this.loadFromCache(ip)\n            if (data) {\n                results[ip] = data\n            } else {\n                requestList.push(ip)\n            }\n        })\n\n        // console.log(`requestList = ${requestList.length}, cached = ${_.keys(results).length}`)\n\n        const addressChunks = _.chunk(requestList, 50)\n        for(const ipListChunk of addressChunks) {\n            const chunkInfoDic = await this.loadFromService(ipListChunk)\n            _.each(_.values(chunkInfoDic), d => this.saveToCache(d))\n            _.extend(results, chunkInfoDic)\n        }\n\n        return results\n    }\n\n    static refineProviderName(name) {\n        if (name === undefined) {\n            return UNKNOWN\n        }\n\n        name = name.toUpperCase()\n        name = name.replace('ONLINE GMBH', '')\n        for (const component of name.split('-')) {\n            if (component !== 'AS') {\n                return component\n            }\n        }\n\n        return name\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {Random} from \"@/helpers/MathUtil\";\n\n\nexport class ModeProvider extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n        this.attractors = {}\n        this.force = Config.Physics.BaseForce\n        this.circlePacker = new CirclePack(this.force, 1400, 300, 0.02, 1)\n    }\n\n    update() {\n        // this.circlePacker.pack(dt)\n        this._transferAttractorsPositionFromPacker()\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = IPAddressInfoLoader.refineProviderName(\n                physObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            )\n            physObj.attractors = (this.attractors[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(objList) {\n        this._createProviderAttractors(objList)\n        super.onEnter();\n    }\n\n    _createProviderAttractors(objList) {\n        const providers = {}\n\n        let mostPopularProvider = null\n        let mostPopularCount = 0\n\n        for (const nodeObj of objList) {\n            const nativeName = nodeObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            const provider = IPAddressInfoLoader.refineProviderName(nativeName)\n\n            if (!providers[provider]) {\n                providers[provider] = [nodeObj]\n            } else {\n                const list = providers[provider]\n                list.push(nodeObj)\n                if (list.length > mostPopularCount) {\n                    mostPopularProvider = provider\n                    mostPopularCount = list.length\n                }\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        const sortedEntries = _.sortBy(_.entries(providers), [(pair) => pair[1].length])\n        // const sortedEntries = _.entries(providers)\n        for (const [name, items] of sortedEntries) {\n            if (name === mostPopularProvider) {\n                continue\n            }\n\n            this._makeAttractor(name, items, true)\n        }\n        this.circlePacker.arrangeAroundCenter()\n        this._transferAttractorsPositionFromPacker()\n\n        if (mostPopularProvider) {\n            this._makeAttractor(mostPopularProvider, providers[mostPopularProvider], false)\n        }\n\n        for(const nodeObj of objList) {\n            nodeObj.velocity.z = Random.getRandomFloat(-1000, 1000)\n        }\n\n        this._makeLabels(providers, mostPopularProvider)\n    }\n\n    _makeAttractor(name, items, addCircle) {\n        const circleRadius = NodeObject.estimateRadiusOfGroup(items) * 1.05\n        // console.log('prov', name, circleRadius)\n\n        if (addCircle) {\n            this.circlePacker.addCircle(name, circleRadius)\n        }\n\n        this.attractors[name] = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, 0, circleRadius)\n        return circleRadius\n    }\n\n    _makeLabelForGroup(providers, name, position) {\n        const countNodes = providers[name].length\n        const text = `${name} (${countNodes})`\n        this.makeLabel({text, position: new THREE.Vector3(position.x, position.y - 180.0, 60.0), scale: 5})\n    }\n\n    _makeLabels(providers, mostPopularName) {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            this._makeLabelForGroup(providers, name, position)\n        }\n\n        if (mostPopularName) {\n            this._makeLabelForGroup(providers, mostPopularName, new THREE.Vector3())\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}","import _ from \"lodash\";\n\nfunction isGarbage(x) {\n    return x === undefined || x === null || isNaN(x)\n}\n\nexport class Version {\n    constructor(x, y, z) {\n        this.x = x\n        this.y = y\n        this.z = z\n    }\n\n    static fromString(v) {\n        if (v instanceof Version) {\n            return v\n        }\n        const components = _.map(v.split('.'), x => parseInt(x))\n        const n = components.length\n        const x = components[0]\n        const y = n > 1 ? components[1] : 0\n        const z = n > 2 ? components[2] : 0\n        return new Version(x, y, z)\n    }\n\n    get isInvalid() {\n        return isGarbage(this.x) || isGarbage(this.y) || isGarbage(this.z)\n    }\n\n    greater(v2) {\n        if(this.x > v2.x) {\n            return true;\n        } else if(this.x === v2.x) {\n            if(this.y > v2.y) {\n                return true;\n            } else if(this.y === v2.y) {\n                return this.z > v2.z;\n            }\n        }\n    }\n\n    less(v2) {\n        if(this.x < v2.x) {\n            return true;\n        } else if(this.x === v2.x) {\n            if(this.y < v2.y) {\n                return true;\n            } else if(this.y === v2.y) {\n                return this.z < v2.z;\n            }\n        }\n    }\n\n    equal(v2) {\n        return this.x === v2.x && this.y === v2.y && this.z === v2.z\n    }\n\n    toString() {\n        return `${this.x}.${this.y}.${this.z}`\n    }\n\n    inc(xLimit = 10, yLimit = 10) {\n        this.z++\n        if (this.z >= xLimit) {\n            this.z = 0\n            this.y++\n            if (this.y >= yLimit) {\n                this.x++\n                this.y = 0\n            }\n        }\n        return this\n    }\n\n    get asInt() {\n        return this.z + 1000 * this.y + 1000000 * this.x\n    }\n\n    static loadVersions(rawVersions) {\n        return _.map(rawVersions, v => Version.fromString(v))\n    }\n\n    static maximumVersion(versions) {\n        return _.maxBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static minimumVersion(versions) {\n        return _.minBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static getVersionSet(nodeObjects, path = 'node.version') {\n        return Version.loadVersions(_.uniq(_.map(nodeObjects, path)))\n    }\n\n    static getSemanticVersionsDistribution(nodeObjects, path = 'node.version', activePath = 'node.isActive') {\n        const activeNodes = _.filter(nodeObjects, no => _.get(no, activePath))\n\n        const activeVersions = Version.getVersionSet(activeNodes, path)\n        const maxActiveVersion = Version.maximumVersion(activeVersions)\n        const minActiveVersion = Version.minimumVersion(activeVersions)\n        const otherActiveVersions = _.differenceBy(activeVersions, _.compact([maxActiveVersion, minActiveVersion]),\n            v => v.asInt)\n        const otherActiveVersionsStr = _.map(otherActiveVersions, v => v.toString())\n\n        const results = {}\n\n        for (const nodeObject of nodeObjects) {\n            const versionStr = _.get(nodeObject, path)\n            const version = Version.fromString(versionStr)\n            let target = null\n            let comment = ''\n            const isActive = version.equal(minActiveVersion)\n            const isLatest = version.equal(maxActiveVersion)\n            if(isLatest && isActive) {\n                target = minActiveVersion.toString()\n                comment = 'latest and active'\n            } else if (isLatest) {\n                target = maxActiveVersion.toString()\n                comment = 'latest'\n            } else if (isActive) {\n                target = minActiveVersion.toString()\n                comment = 'active'\n            } else if (_.includes(otherActiveVersionsStr, versionStr)) {\n                target = versionStr\n                comment = 'interim'\n            } else if (!versionStr || versionStr === '0.0.0') {\n                target = 'unknown'\n            } else {\n                target = `${version.x}.X.X`\n                comment = 'old'\n            }\n\n            if (!results[target]) {\n                results[target] = {\n                    objects: [],\n                    comment,\n                    mostPopular: false,\n                    isActive: nodeObject.node.isActive\n                }\n            }\n            results[target].objects.push(nodeObject)\n        }\n\n        if(!_.isEmpty(results)) {\n            const maxVersion = _.maxBy(_.values(results), v => v.objects.length)\n            maxVersion.mostPopular = true\n        }\n\n        return results\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Config} from \"@/config\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeObject} from \"@/visual/NodeObject\";\n\n\nexport class ModeVersion extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        this.force = Config.Physics.BaseForce\n        this._attractorsByKey = {}\n        this._attractorsByVersion = {}\n\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n\n        this._previousKeys = []\n        this._versionDist = {}\n    }\n\n    reactEvent(event, nodeObjects) {\n        if (event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            console.log(`New version detected: ${event.currValue}`)\n            this._packAttractorPositions(nodeObjects)\n            this._makeLabels()\n        }\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = physObj.node.version\n            physObj.attractors = (this._attractorsByVersion[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(nodeObjects) {\n        this._packAttractorPositions(nodeObjects)\n        this._makeLabels()\n\n        this.makeLabel({\n            text: 'Versions',\n            position: new THREE.Vector3(0, -630, -10), scale: 14\n        })\n    }\n\n    _packAttractorPositions(objList) {\n        this._versionDist = Version.getSemanticVersionsDistribution(objList)\n\n        const gap = 100.0\n        const radAttr = 1.2\n\n        let nGroups = 0\n        let radSum = 0.0\n        for (const versionDesc of _.values(this._versionDist)) {\n            versionDesc.radius = radAttr * NodeObject.estimateRadiusOfGroup(versionDesc.objects)\n            ++nGroups\n            radSum += 2 * versionDesc.radius\n        }\n        radSum += Math.max(0, nGroups - 1) * gap\n\n        let x = -radSum * 0.5\n        this._attractorsByVersion = {}\n        this._attractorsByKey = {}\n\n        let entries = _.entries(this._versionDist)\n        entries = _.sortBy(entries, e => e[0])\n\n        for (const [key, versionDesc] of entries) {\n            const r = versionDesc.radius\n            const attractor = new Attractor(new THREE.Vector3(x + r, 0, 0),\n                this.force, 0, 0, 0, versionDesc.radius * 0.9)\n            x += gap + r * 2\n            this._attractorsByKey[key] = attractor\n            for (const nodeObj of versionDesc.objects) {\n                this._attractorsByVersion[nodeObj.node.version] = attractor\n            }\n        }\n    }\n\n    _makeLabels() {\n        const affectedKeys = []\n\n        for (const [key, desc] of _.entries(this._versionDist)) {\n            affectedKeys.push(key)\n            const attr = this._attractorsByKey[key]\n            if (attr) {\n                this._putLabel(attr, key, desc);\n            }\n        }\n\n        const keysToRemove = _.difference(this._previousKeys, affectedKeys)\n        _.forEach(keysToRemove, key => {\n            this.killLabelByKey(key)\n        })\n\n        this._previousKeys = affectedKeys\n    }\n\n    _putLabel(attr, key, desc) {\n        console.log(`Put a label for ${key}.`)\n\n        let tag = '\\n' + desc.comment\n        let color\n        if(desc.comment === 'latest') {\n            color = '#41e9ff'\n        } else if(desc.comment === 'latest and active') {\n            color = '#1dfc53'\n        } else if(desc.comment === 'active') {\n            color = '#16f14b'\n        } else if(desc.comment === 'interim') {\n            color = '#1cc245'\n            tag = ''\n        }\n\n        let text\n        if(key === 'unknown') {\n            text = 'Unknown'\n        } else {\n            text = `v. ${key} (${desc.objects.length})${tag}`\n        }\n        const position = new THREE.Vector3(attr.position.x, attr.position.y - attr.relaxRadius * 1.1 - 30.0, 50.0)\n        // const position = new THREE.Vector3(attr.position.x, -300.0, 50.0)\n        const label = this.makeLabel({\n            text,\n            position,\n            scale: 2.5,\n            key\n        }).t\n\n        if (!desc.isActive) {\n            label.opacity = 0.9\n        }\n        if (color) {\n            label.color = color\n        }\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Config} from \"@/config\";\nimport {shortRune} from \"@/helpers/MathUtil\";\n\nexport class ModeBond extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.nameToAttractor = {}\n        this.force = Config.Physics.BaseForce\n\n        this.center = new THREE.Vector3(0, 120)\n        this._noBondAttractor = new Attractor(new THREE.Vector3(0, -2000, 0), this.force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.nameToAttractor[physObj.node.address]\n    }\n\n    onEnter(nodeObjects) {\n        const label = this.makeLabel({text: 'Bonds', position: new THREE.Vector3(0, -630, -10), scale: 14})\n        label.opacity = 0.8;\n\n        nodeObjects = _.sortBy(nodeObjects, 'node.bond')\n\n        const n = nodeObjects.length\n\n        this.nameToAttractor = {}\n\n        if (n === 0) {\n            return\n        }\n\n        this._positionateOnSpiral(nodeObjects)\n\n        super.onEnter();\n    }\n\n    _positionateOnSpiral(nodeObjects) {\n        const n = nodeObjects.length\n        let angle = 0.0\n        let radius = 34.0\n        // let gap = 3.0\n        const xScale = 1.5\n\n        let deltaRadius = 5.9;\n        let deltaAngle = 0.5;\n        const deltaDeltaRadius = 0.995;\n        const deltaDeltaAngle = 0.991;\n\n        for (let i = 0; i < n; ++i) {\n            const x = this.center.x + xScale * radius * Math.cos(angle)\n            const y = this.center.y + radius * Math.sin(angle)\n            if (this._addAttractor(nodeObjects[i], x, y)) {\n                radius += deltaRadius;\n                angle += deltaAngle;\n                deltaRadius *= deltaDeltaRadius\n                deltaAngle *= deltaDeltaAngle\n            }\n        }\n    }\n\n    _positionateOnGrid(nodeObjects) {\n        const n = nodeObjects.length\n\n        const columns = Math.ceil(Math.sqrt(n))\n        const rows = Math.ceil(n / columns)\n\n        const gapSize = 100.0\n        const width = columns * gapSize\n        const height = rows * gapSize\n        const halfWidth = 0.5 * width\n        const halfHeight = 0.5 * height\n\n        for (let i = 0; i < n; ++i) {\n            const col = i % columns\n            const row = Math.floor(i / columns)\n            const x = gapSize * col - halfWidth\n            const y = gapSize * row - halfHeight\n            this._addAttractor(nodeObjects[i], x, y)\n        }\n    }\n\n    _addAttractor(nodeObject, x, y) {\n        const bond = nodeObject.node.bond\n        if (bond > 1.0) {\n            const z = 0.0\n            this.nameToAttractor[nodeObject.node.address] = new Attractor(new THREE.Vector3(x, y, z),\n                this.force, 0, 0, -1, 10.0)\n\n            const label = this.makeLabel({\n                text: shortRune(bond),\n                position: new THREE.Vector3(x, y - nodeObject.radius - 19.0, -10),\n                scale: 1,\n                rotation: -22.0\n            })\n\n            if(!nodeObject.node.isActive) {\n                label.color = '#999'\n            } else {\n                label.color = nodeObject.currentColor\n            }\n\n            return true\n        } else {\n            this.nameToAttractor[nodeObject.node.address] = this._noBondAttractor\n            return false\n        }\n    }\n}\n","export default \"//uniform float time;\\n//uniform float saturation;\\n//uniform vec3 color;\\n\\nvarying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nconst vec3 ATMO_COLOR = vec3(0.3, 0.6, 1.0);\\nconst vec3 FORWARD = vec3(0.0, 0.0, 1.0);\\n\\nuniform sampler2D globeTexture;\\n\\nvoid main(void) {\\n    float intensity = 1.05 - dot(vNormal, FORWARD);\\n    vec3 atmo = clamp(ATMO_COLOR * pow(intensity, 1.5), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n//    vec3 atmo = vec3(0.0, 0.0, 0.0);\\n    gl_FragColor = vec4(atmo + texture2D(globeTexture, vUv).xyz, 1.0);\\n    //    gl_FragColor = texture2D(globeTexture, vUv);\\n}\\n\\n\";","export default \"varying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nvoid main()\\n{\\n    vUv = uv;\\n    vNormal = normalMatrix * normalize(normal);\\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {longLatTo3D} from \"@/helpers/3D\";\nimport TWEEN from \"tween.js\";\nimport _ from \"lodash\";\n\nimport AtmosphereFragmentShader from '@/visual/shader/globe_atmo_textured.frag'\nimport StdVertexShader from '@/visual/shader/standard.vert'\n\nexport class ModeGeo extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.isFlat = false\n\n        this.force = Config.Physics.BaseForce * 1.2\n        this._banishAttractor = new Attractor(new THREE.Vector3(0, -2000, 0), this.force)\n\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n    }\n\n    handleObject(physObj) {\n        const attr = this._nameToAttractor[physObj.name]\n        physObj.attractors = attr ? [attr] : [this._banishAttractor]\n    }\n\n    onEnter(nodeObjects, group) {\n        // this.makeLabel('Geo', new THREE.Vector3(0, -630, -10), 14, 0, true)\n        super.onEnter();\n\n        group.repelEnabled = false\n\n        this._createAttractorsStacked(nodeObjects)\n\n        if (Config.Scene.Globe.Enabled) {\n            this._makeGlobe()\n            this._putInGlobe()\n        }\n    }\n\n    onLeave(nodeObjects, group) {\n        this._destroyGlobe()\n        _.forEach(nodeObjects, nodeObj => nodeObj.shootOut(2000))\n        super.onLeave();\n        group.repelEnabled = true\n    }\n\n    _makeGlobe() {\n        if (this.globeMesh) {\n            return\n        }\n        const textureLoader = new THREE.TextureLoader()\n\n        const globeConfig = Config.Scene.Globe\n        const geometry = new THREE.SphereGeometry(globeConfig.Radius, globeConfig.Details, globeConfig.Details);\n        // const basicMaterial = new THREE.MeshPhongMaterial({\n        //     color: 0x555555,\n        //     // depthWrite: true,\n        //     // depthTest: true,\n        // });\n\n        const material = new THREE.ShaderMaterial({\n            name: 'AtmosphereShaderMaterial',\n            fragmentShader: AtmosphereFragmentShader,\n            vertexShader: StdVertexShader,\n            uniforms: {\n                globeTexture: {\n                    value: textureLoader.load(Config.Scene.Globe.TextureMap)\n                }\n            },\n            // side: THREE.FrontSide,\n            // depthWrite: true,\n            // depthTest: true,\n        })\n\n        this.globeMesh = new THREE.Mesh(geometry, material);\n        this.globeMesh.renderOrder = 9999\n        this.scene.add(this.globeMesh)\n\n        // const dummyMesh = new THREE.Mesh(geometry, material)\n        // dummyMesh.scale.setScalar(0.9)\n        // this.globeMesh.add(dummyMesh)\n\n        // if(globeConfig.InnerAtmosphere.Enabled) {\n        //     const innerAtmoMaterial = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {\n        //             globeTexture: {\n        //                 value: textureLoader.load(Config.Scene.Globe.TextureMap)\n        //             }\n        //         },\n        //         // side: THREE.FrontSide,\n        //         // depthWrite: true,\n        //         // depthTest: true,\n        //     })\n        //\n        //     this.innerAtmoMesh = new THREE.Mesh(geometry, innerAtmoMaterial)\n        //     // this.innerAtmoMesh.scale.setScalar(1.1)\n        //     this.globeMesh.add(this.innerAtmoMesh)\n        // }\n\n        if (globeConfig.Clouds.Opacity > 0) {\n            const materialClouds = new THREE.MeshPhongMaterial({\n                map: textureLoader.load(globeConfig.Clouds.Texture),\n                side: THREE.DoubleSide,\n                opacity: globeConfig.Clouds.Opacity,\n                transparent: true,\n                depthWrite: false,\n                blending: THREE.AdditiveBlending,\n            });\n            this.cloudMesh = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh)\n\n            this.cloudMesh2 = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh2.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh2)\n        }\n\n        // if(globeConfig.Atmosphere) {\n        //     const materialAtmosphere = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {},\n        //         side: THREE.FrontSide,\n        //         depthWrite: false\n        //     })\n        //     this.atmosphereMesh = new THREE.Mesh(geometry, materialAtmosphere)\n        //     this.atmosphereMesh.scale.setScalar(globeConfig.Atmosphere.ElevationScale)\n        //     this.globeMesh.add(this.atmosphereMesh)\n        // }\n    }\n\n    _putInGlobe() {\n        this.globeMesh.scale.set(0.01, 0.01, 0.01)\n        new TWEEN.Tween(this.globeMesh.scale)\n            .to(new THREE.Vector3(1, 1, 1))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    _destroyGlobe() {\n        if (!this.globeMesh) {\n            return\n        }\n        const g = this.globeMesh\n\n        new TWEEN.Tween(g.scale)\n            .to(new THREE.Vector3(0.01, 0.01, 0.01))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                g.parent.remove(g)\n            })\n            .start()\n\n        this.globeMesh = null\n    }\n\n    update(dt) {\n        super.update(dt);\n        if (this.cloudMesh) {\n            this.cloudMesh.rotation.y += 0.02 * dt\n        }\n        if (this.cloudMesh2) {\n            this.cloudMesh2.rotation.y -= 0.04 * dt\n        }\n    }\n\n    _createAttractors(nodeObjects) {\n        const r = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let attractorHere = this._coordToAttractor[key]\n                if (!attractorHere) {\n                    const position3d = longLatTo3D(info.longitude, info.latitude, r)\n                    attractorHere = this._coordToAttractor[key] = new Attractor(position3d,\n                        this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                }\n                this._nameToAttractor[nodeObject.node.address] = attractorHere\n\n            }\n        }\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n\n    _createAttractorsStacked(nodeObjects) {\n        this._nameToAttractor = {}\n        this._coordToStack = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let stackObj = this._coordToStack[key]\n                if (!stackObj) {\n                    this._coordToStack[key] = stackObj = {\n                        stack: [],\n                        longitude: info.longitude,\n                        latitude: info.latitude,\n                    }\n                }\n                stackObj.stack.push(nodeObject)\n                // this._nameToAttractor[nodeObject.node.address] = attractorHere\n            }\n        }\n\n        const basicRadius = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        for (const {stack, longitude, latitude} of _.values(this._coordToStack)) {\n            const sortedStack = _.sortBy(stack, nodeObject => -nodeObject.node.bond)\n            let radius = basicRadius\n            for (const nodeObj of sortedStack) {\n                const position3d = longLatTo3D(longitude, latitude, radius)\n                this._nameToAttractor[nodeObj.node.address] = new Attractor(position3d,\n                    this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                radius += nodeObj.radius * 2.1\n            }\n        }\n\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n}\n","import {Random} from \"@/helpers/MathUtil\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {Config} from \"@/config\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {ModeNormal} from \"@/visual/modes/ModeNormal\";\nimport {ModeStatus} from \"@/visual/modes/ModeStatus\";\nimport {ModeProvider} from \"@/visual/modes/ModeProvider\";\nimport {ModeVersion} from \"@/visual/modes/ModeVersion\";\nimport {ModeBond} from \"@/visual/modes/ModeBond\";\nimport {ModeGeo} from \"@/visual/modes/ModeGeo\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\n\n\nexport const NodeGroupModes = Object.freeze({\n    Normal: 'Normal',\n    Status: 'Status',\n    Provider: 'Provider',\n    Version: 'Version',\n    Bond: 'Bond',\n    Geo: 'Geo',\n})\n\n\nexport class NodeGroup extends Simulation {\n    constructor(parent) {\n        super()\n\n        this.holder = new THREE.Group()\n        parent.add(this.holder)\n\n        this._currentIdent = 0\n        this.parent = parent\n\n        this._modeNormal = new ModeNormal(this.parent)\n        this._modeStatus = new ModeStatus(this.parent)\n        this._modeProvider = new ModeProvider(this.parent)\n        this._modeVersion = new ModeVersion(this.parent)\n        this._modeBond = new ModeBond(this.parent)\n        this._modeGeo = new ModeGeo(this.parent)\n\n        this._selector = {\n            [NodeGroupModes.Normal]: this._modeNormal,\n            [NodeGroupModes.Status]: this._modeStatus,\n            [NodeGroupModes.Provider]: this._modeProvider,\n            [NodeGroupModes.Version]: this._modeVersion,\n            [NodeGroupModes.Bond]: this._modeBond,\n            [NodeGroupModes.Geo]: this._modeGeo,\n        }\n\n        this._selectedModeHandler = this._modeNormal\n        this.mode = NodeGroupModes.Normal\n\n        this.repelForce = Config.Physics.RepelForce\n\n        // this._visNet = new VisNetwork()\n        // this.parent.add(this._visNet)\n    }\n\n    genIdent(node) {\n        return node.address ?? String(this._currentIdent++)\n    }\n\n    _placeNodeObject(nodeObject) {\n        // const pos = Random.randomVector(this._startPositionBounds)\n        const pos = Random.randomOnCircle(2000.0)\n        nodeObject.o.position.copy(pos)\n        this.holder.add(nodeObject.o)\n    }\n\n    createNewNode(node, nodeSet) {\n        const ident = this.genIdent(node)\n        const existing = this.getByName(ident)\n        if (existing) {\n            console.warn('NodeObject already exists. No nothing')\n            return existing\n        }\n\n        console.info(`Create node ${ident}.`)\n\n        const nodeObject = new NodeObject(node)\n        nodeObject._updateRust(nodeSet)\n        this._placeNodeObject(nodeObject)\n        this.addObject(ident, nodeObject)\n        return nodeObject\n    }\n\n    destroyNode(node) {\n        const nodeAddress = node.address ?? node\n        const nodeObject = this.getByName(nodeAddress)\n        if (!nodeObject) {\n            console.error('node not found!')\n            return\n        }\n\n        console.info(`Destroy node ${nodeAddress}.`)\n        nodeObject.dispose()\n        this.holder.remove(nodeObject.o)\n        super.removeObject(nodeAddress)\n    }\n\n    set mode(newMode) {\n        if (this._mode === newMode) {\n            return\n        }\n\n        this._mode = newMode\n\n        // dispose old\n        this._selectedModeHandler._triggerOnLeave(this.physicalObjects, this)\n\n        // pick new\n        this._selectedModeHandler = this._selector[this._mode]\n\n        // enter the new one\n        this._selectedModeHandler._triggerOnEnter(this.physicalObjects, this)\n\n        console.log(`Set Mode: ${newMode}`)\n    }\n\n    _updateObject(obj, delta) {\n        if (obj) {\n            this._selectedModeHandler.handleObject(obj)\n            super._updateObject(obj, delta)\n        }\n    }\n\n    reactEvent(event) {\n        const delay = Random.getRandomFloat(0, Config.DataSource.ReactRandomDelay)\n        setTimeout(() => {\n            const obj = this.getByName(event.node.address)\n            if (obj) {\n                obj.react(event)\n                this._selectedModeHandler.reactEvent(event, this.physicalObjects)\n            }\n        }, delay)\n    }\n\n    update(dt) {\n        this._selectedModeHandler.update(dt)\n        super.update(dt)\n    }\n\n    updateFromCamera(camera) {\n        _.each(this.physicalObjects, no => no.updateFromCamera(camera))\n    }\n\n    dispose() {\n        super.dispose()\n        clearObject(this.holder)\n        for (const otherObj of this.physicalObjects) {\n            otherObj.dispose()\n        }\n        for (const mode of Object.values(this._selector)) {\n            mode.dispose()\n        }\n    }\n\n    setElevatedNode(name) {\n        for (const obj of this.physicalObjects) {\n            obj.elevated = (obj.name === name)\n        }\n    }\n\n    get isCurrentModeFlat() {\n        return this._selectedModeHandler.isFlat\n    }\n}\n","import _ from \"lodash\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nexport class NodeTracker {\n    constructor(prevNodeSet, currNodeSet) {\n        this.prev = prevNodeSet\n        this.curr = currNodeSet\n    }\n\n    extractEvents() {\n        const events = []\n        const addEvent = (t, node, prevNode, k) => {\n            k = k || 'address'\n            events.push(new NodeEvent(t, node, prevNode, node ? node[k] : '',\n                prevNode ? prevNode[k] : '', this.curr))\n        }\n\n        const addedNodeAddresses = _.difference(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of addedNodeAddresses) {\n            const node = this.curr.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.CREATE, node, node)\n        }\n\n        const removeNodeAddresses = _.difference(this.prev.nameSet, this.curr.nameSet)\n        for (const addr of removeNodeAddresses) {\n            const node = this.prev.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.DESTROY, node, node)\n        }\n\n        const EVENT_TYPES = NodeEvent.EVENT_TYPE\n\n        const keyTypeTable = {\n            'slashPoints': EVENT_TYPES.SLASH,\n            'total_bond': EVENT_TYPES.BOND_CHANGE,\n            'IPAddress': EVENT_TYPES.IP_ADDRESS,\n            'status': EVENT_TYPES.STATUS,\n            'height': EVENT_TYPES.ACTIVE_BLOCK_HEIGHT,\n            'currentAward': EVENT_TYPES.AWARD,\n            'observeChains': EVENT_TYPES.OBSERVE_CHAIN,\n            'version': EVENT_TYPES.VERSION,\n        }\n\n        const commonNodes = _.intersection(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of commonNodes) {\n            const prevNode = this.prev.byAddress[addr]\n            const currNode = this.curr.byAddress[addr]\n            const keys = _.union(_.keys(prevNode), _.keys(currNode));\n            const keysChanged = _.filter(keys, (key) => {\n                return !_.isEqual(prevNode[key], currNode[key]);\n            });\n            for (const key of keysChanged) {\n                const eventType = keyTypeTable[key]\n                if (eventType) {\n                    addEvent(eventType, currNode, prevNode, key)\n                }\n            }\n        }\n\n        return events\n    }\n}\n\nexport class DebugNodeJuggler {\n    constructor(period = 10) {\n        this.tick = 1\n        this.period = period\n        this.enabled = true\n        this.juggleStatus = true\n        this.juggleVersion = true\n\n        this.memorizeVersions = {}\n    }\n\n    handleNodes(nodes) {\n        if (this.enabled) {\n            if (this.tick % this.period === 0) {\n                nodes = this._juggleNodes(nodes)\n            }\n            this.tick++\n        }\n        return nodes\n    }\n\n    _juggleNodes(nodes) {\n        if(this.juggleStatus) {\n            nodes = this._juggleNodesStatus(nodes)\n        }\n        if(this.juggleVersion) {\n            nodes = this._juggleNodesVersion(nodes)\n        }\n        return nodes\n    }\n\n    _juggleNodesStatus(nodes) {\n        const nodesIn = Random.getRandomIntRange(2, 7)\n        const nodesOut = Random.getRandomIntRange(2, 7)\n\n        console.warn(`Attention! _juggleNodes: IN: ${nodesIn}, OUT: ${nodesOut}!`)\n\n        nodes.filteredByStatus(NodeStatus.Active).sampleRandomly(nodesOut).setStatusAll(NodeStatus.Standby)\n        nodes.filteredByStatus(NodeStatus.Standby).sampleRandomly(nodesIn).setStatusAll(NodeStatus.Active)\n\n        return nodes\n    }\n\n    _nextVersion(vString) {\n        return Version.fromString(vString).inc(10, 100).toString()\n    }\n\n    _juggleNodesVersion(nodes) {\n        const nUpgrade = 1\n\n        const that = this\n        _.each(nodes.nodes, node => {\n            const v = that.memorizeVersions[node.address]\n            if(v) {\n                node.version = v\n            }\n        })\n\n        nodes.sampleRandomly(nUpgrade).nodes.forEach(node => {\n            const oldVersion = node.version\n            node.version = this._nextVersion(node.version)\n            that.memorizeVersions[node.address] = node.version\n            console.warn(`Debug upgrade ${node.shortAddress}: ${oldVersion} => ${node.version}`)\n        })\n\n        return nodes\n    }\n}\n","import _ from \"lodash\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {SEC_PER_BLOCK} from \"@/helpers/THORUtil\";\n\nexport const TYPICAL_BLOCK_TIME = {\n    ETH: 12.8,\n    BTC: 600,\n    BCH: 600,\n    LTC: 150,\n    BNB: 0.4,\n    THOR: 6.0,\n    DOGE: 60,\n    TERRA: 6.64,\n    GAIA: 6.85, // ATOM\n    AVAX: 3.0\n}\n\nexport class NodeSet {\n    constructor(nodes, calculate = true) {\n        this.nodes = nodes || []\n\n        this.total = this.nodes.length\n\n        if (calculate) {\n            this._nodesWithNames = _.filter(this.nodes, (item) => item.address)\n            this.byAddress = _.keyBy(this._nodesWithNames, 'address')\n            this.nameSet = _.keys(this.byAddress)\n\n            this.totalBond = _.sumBy(this.nodes, (node) => node.bond)\n            this.maxSlashNode = _.maxBy(this.nodes, (node) => node.slashPoints)\n            this.trampCount = this.total - this._nodesWithNames.length\n            this.maxAgeNode = _.maxBy(_.filter(this.nodes, node => node.activeBlockHeight && node.activeBlockHeight > 0),\n                node => node.activeBlockHeight)\n\n            this.ranks = {\n                bond: this._makeRanking('bond', 'desc'),\n                slash: this._makeRanking('slashPoints'),\n                age: this._makeRanking('activeBlockHeight'),\n                award: this._makeRanking('currentAward')\n            }\n\n            this.topHeights = this.calculateTopBlockHeight(3)\n\n            this.topVersion = this.calculateTopVersion()\n        }\n    }\n\n    _makeRanking(criteria, order = 'asc') {\n        const sortedArr = _.orderBy(this._nodesWithNames, [criteria], [order])\n        const names = _.map(sortedArr, 'address')\n        const ranks = Array.from(Array(sortedArr.length), (_, i) => i + 1)\n        return Object.fromEntries(_.zip(names, ranks))\n    }\n\n    findByAddress(address) {\n        return this.byAddress[address]\n    }\n\n    sortedNodes(attribute, asc = true) {\n        const f = asc ? 1 : -1\n        return new NodeSet(_.sortBy(this.nodes, (node) => f * node[attribute]))\n    }\n\n    filteredByStatus(status) {\n        return new NodeSet(_.filter(this.nodes, (node) => node.status === status))\n    }\n\n    get sortedByBond() {\n        return this.sortedNodes('bond')\n    }\n\n    get sortedByAge() {\n        return this.sortedNodes('statusSince')\n    }\n\n    get ipAddresses() {\n        return _.compact(_.uniq(_.map(this.nodes, n => n.IPAddress)))\n    }\n\n    sampleRandomly(n) {\n        return new NodeSet(_.sampleSize(this.nodes, n))\n    }\n\n    setStatusAll(status) {\n        _.forEach(this.nodes, n => n.status = status)\n    }\n\n    bondPercentOfTotal(bond) {\n        return (bond / this.totalBond * 100.0).toFixed(2)\n    }\n\n    get length() {\n        return this.total\n    }\n\n    _calculateTopBlockOneChain(nMin, heights) {\n        const heightSorted = _.map(Object.keys(heights), h => parseInt(h))\n        heightSorted.sort().reverse()\n        for (const height of heightSorted) {\n            const occurrences = heights[height]\n            if (occurrences >= nMin) {\n                return height\n            }\n        }\n        return null\n    }\n\n    calculateTopBlockHeight(nMin = 2) {\n        const allChains = Array.from(new Set(_.flatten(_.map(this._nodesWithNames, n => _.keys(n.observeChains)))))\n        const counters = _.map(\n            allChains, chain => _.countBy(this._nodesWithNames, n => n.observeChains[chain] ?? 0)\n        )\n\n        return _.zipObject(\n            allChains,\n            _.map(allChains, (chain, i) => this._calculateTopBlockOneChain(nMin, counters[i]))\n        )\n    }\n\n    calculateTopVersion() {\n        if (this.nodes.length === 0) {\n            return null\n        }\n        let topVersion = Version.fromString(this.nodes[0].version)\n        for (let i = 1; i < this.nodes.length; ++i) {\n            const currentVersion = Version.fromString(this.nodes[i].version)\n            if (currentVersion.greater(topVersion)) {\n                topVersion = currentVersion\n            }\n        }\n        return topVersion.toString()\n    }\n\n    estimateTimestampAtBlock(topThorHeight, no) {\n        const blockDiff = topThorHeight - no\n        return Date.now() - blockDiff * SEC_PER_BLOCK * 1000.0\n    }\n\n    getChainHeightLagBlocks(node, chain) {\n        return (this.topHeights[chain] ?? 0) - (node.observeChains[chain] ?? 0)\n    }\n\n    getChainHeightLagSeconds(node, chain) {\n        const mult = TYPICAL_BLOCK_TIME[chain] ?? 1.0\n        return mult * this.getChainHeightLagBlocks(node, chain)\n    }\n\n    getChainHeightLagAllSeconds(node) {\n        const keys = _.keys(this.topHeights)\n        if(!keys.length) {\n            return 0\n        }\n        const results = {\n            sum: 0,\n            max: 0,\n        }\n        for(const chain of keys) {\n            const lag = this.getChainHeightLagSeconds(node, chain)\n            results.max = Math.max(results.max, lag)\n            results.sum += lag\n        }\n        results.avg = results.sum / keys.length\n        return results\n    }\n}\n","import axios from \"axios\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport _ from \"lodash\";\nimport {IPAddressInfoLoader} from \"@/helpers/data/IPAddressInfo\";\n\n\nexport class URLDataSource {\n    constructor(baseUrl, period) {\n        this.period = period\n        this.baseUrl = baseUrl\n        this._isRunning = false\n        this._timer = 0\n        this.callback = () => 0\n        this.ipAddressLoader = new IPAddressInfoLoader()\n    }\n\n    run() {\n        if (this._isRunning) {\n            console.warn(`${this.toString()} is already running`)\n            return\n        }\n        this._isRunning = true\n\n        console.info(`${this.toString()} started!`)\n\n        this._tick().then()\n\n        this._timer = setInterval(() => {\n            this._tick().then()\n        }, this.period)\n    }\n\n    stop() {\n        if (this._isRunning) {\n            clearInterval(this._timer)\n            this._timer = 0\n            this._isRunning = false\n            console.info(`${this.toString()} stopped.`)\n        }\n    }\n\n    toString() {\n        return `URLDataSource(${this.baseUrl}, ${this.period / 1000.} sec)`\n    }\n\n    get isRunning() {\n        return this._isRunning\n    }\n\n    async dataProcess(rawData) {\n        return rawData\n    }\n\n    get url() {\n        return this.baseUrl\n    }\n\n    async _load() {\n        return await axios.get(this.url, {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        })\n    }\n\n    async loadOnce() {\n        return await this.dataProcess(\n            await this._load()\n        )\n    }\n\n    async _tick() {\n        try {\n            const data = await this._load()\n            if (this.callback) {\n                const result = await this.dataProcess(data.data)\n                this.callback(result)\n            }\n        } catch (e) {\n            console.error(`${this.toString()} tick failed: ${e}`)\n            throw e\n        }\n    }\n}\n\nexport class NodeDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/nodes'\n    }\n\n    async dataProcess(rawData) {\n        const nodeSet = new NodeSet(\n            _.map(rawData, json => new NodeInfo(json))\n        )\n\n        let ipInfoDic = {}\n        try {\n            ipInfoDic = await this.ipAddressLoader.loadBunch(nodeSet.ipAddresses)\n        } catch (e) {\n            console.error(`failed to load IPInfo`)\n        }\n\n        for (const node of nodeSet.nodes) {\n            if (node.IPAddress) {\n                node.IPInfo = ipInfoDic[node.IPAddress]\n            }\n        }\n        return nodeSet\n    }\n}\n\nexport class LastBlockDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/lastblock'\n    }\n\n    async dataProcess(rawData) {\n        const chainHeights = {}\n        for (const chainItem of rawData) {\n            chainHeights['THOR'] = +chainItem['thorchain']\n            chainHeights[chainItem['chain']] = +chainItem['last_observed_in']\n        }\n        return chainHeights\n    }\n}\n\nexport class NetworkDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/v2/network';\n    }\n\n    async dataProcess(rawData) {\n        return {\n            nextChurnHeight: +rawData['nextChurnHeight'],\n        }\n    }\n}\n","export const DataStorage = {\n    lastBlock: {\n        'THOR': 0,\n    },\n    lastNodes: []\n}\n","import {NodeGroup} from \"@/visual/NodeGroup\";\nimport {DebugNodeJuggler, NodeTracker} from \"@/helpers/data/NodeTracker\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {LastBlockDataSource, NetworkDataSource, NodeDataSource} from \"@/helpers/data/URLDataSource\";\nimport {Config} from \"@/config\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\n\nexport class MainScene {\n    constructor(scene, camera) {\n        this.scene = scene\n        this.camera = camera\n        this.prevNodes = new NodeSet([], false)\n        this.nodes = new NodeSet([], false)\n\n        this.nodeGroup = new NodeGroup(this.scene)\n\n        this._firstTime = true\n        this._runDataSource()\n\n        this._fullyLoaded = false\n\n        this._nodeJuggler = new DebugNodeJuggler(3)\n        this._nodeJuggler.enabled = Config.DataSource.NodeJuggler.Enabled\n\n        // this._debugSection()\n    }\n\n    _runDataSource() {\n        this._dataSources = []\n\n        const cfg = Config.DataSource\n\n        const nodeDataSource = new NodeDataSource(cfg.THORNodeURL, cfg.Nodes.PollPeriod)\n        nodeDataSource.callback = this.handleData.bind(this)\n        nodeDataSource.run()\n\n        const lastBlockSource = new LastBlockDataSource(cfg.THORNodeURL, cfg.LastBlock.PollPeriod)\n        lastBlockSource.callback = (lastBlock) => {\n            DataStorage.lastBlock = lastBlock\n        }\n        lastBlockSource.run()\n\n        const networkSource = new NetworkDataSource(cfg.MidgardURL, cfg.Network.PollPeriod)\n        networkSource.callback = (networkInfo) => {\n            console.log(networkInfo)\n            if(DataStorage.lastBlock) {\n                emitter.emit(EventTypes.NodeChurnUpdate, {\n                    ...networkInfo,\n                    lastBlock: DataStorage.lastBlock\n                })\n            }\n        }\n        networkSource.run()\n\n        this._dataSources.push(nodeDataSource, lastBlockSource, networkSource)\n    }\n\n    handleData(nodes) {\n        if (!nodes) {\n            console.error('No nodes to handle!')\n            return\n        }\n\n        if (!this._fullyLoaded) {\n            this._fullyLoaded = true\n            console.log('[EV] Fully loaded!')\n            emitter.emit(EventTypes.FullyLoaded)\n        }\n\n        nodes = this._nodeJuggler.handleNodes(nodes)\n\n        DataStorage.lastNodes = nodes\n\n        emitter.emit(EventTypes.DataSourceTick, nodes)\n\n        this.prevNodes = this.nodes\n        this.nodes = nodes\n        const tracker = new NodeTracker(this.prevNodes, this.nodes)\n        const events = tracker.extractEvents()\n\n        console.info(`Handle Data tick! Total: ${events.length} events.`)\n\n        for (const event of events) {\n            const node = event.node\n            if (node.address) {\n                if (event.type === NodeEvent.EVENT_TYPE.CREATE) {\n                    this.nodeGroup.createNewNode(node, nodes)\n                } else if (event.type === NodeEvent.EVENT_TYPE.DESTROY) {\n                    this.nodeGroup.destroyNode(node)\n                } else {\n                    this.nodeGroup.reactEvent(event)\n                }\n            }\n        }\n\n        if (this._firstTime) {\n            for (let i = 0; i < Config.Physics.Startup.SimulationSteps; ++i) {\n                this.nodeGroup.update(Config.Physics.Startup.DeltaTime)\n            }\n            this._firstTime = false\n        }\n\n        if (events.length) {\n            emitter.emit(EventTypes.Activity)\n        }\n    }\n\n    update(delta) {\n        this.nodeGroup.update(delta)\n        this.nodeGroup.updateFromCamera(this.camera)\n    }\n\n    dispose() {\n        for(const source of this._dataSources) {\n            source.stop()\n        }\n        this._dataSources = []\n\n        this.nodeGroup.dispose()\n        clearObject(this.scene)\n    }\n\n    findNodeByAddress(address) {\n        return this.nodes.byAddress[address]\n    }\n\n    pick(name) {\n        const node = this.findNodeByAddress(name)\n        console.log(node)\n    }\n}\n","export default \"/*\\n * Copyright 2014 Roman Bobniev (FatumR)\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvarying vec2 vUv;\\nuniform float time;\\n\\n#define OCTAVES  8.0\\n\\n\\nfloat rand(vec2 co){\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nfloat rand2(vec2 co){\\n    return fract(cos(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\n// Rough Value noise implementation\\nfloat valueNoiseSimple(vec2 vl) {\\n    float minStep = 1.0;\\n\\n    vec2 grid = floor(vl);\\n    vec2 gridPnt1 = grid;\\n    vec2 gridPnt2 = vec2(grid.x, grid.y + minStep);\\n    vec2 gridPnt3 = vec2(grid.x + minStep, grid.y);\\n    vec2 gridPnt4 = vec2(gridPnt3.x, gridPnt2.y);\\n\\n    float s = rand2(grid);\\n    float t = rand2(gridPnt3);\\n    float u = rand2(gridPnt2);\\n    float v = rand2(gridPnt4);\\n\\n    float x1 = smoothstep(0., 1., fract(vl.x));\\n    float interpX1 = mix(s, t, x1);\\n    float interpX2 = mix(u, v, x1);\\n\\n    float y = smoothstep(0., 1., fract(vl.y));\\n    float interpY = mix(interpX1, interpX2, y);\\n\\n    return interpY;\\n}\\n\\n\\nfloat fractalNoise(vec2 vl) {\\n    float persistance = 2.0;\\n    float amplitude = 0.5;\\n    float rez = 0.0;\\n    vec2 p = vl;\\n\\n    for (float i = 0.0; i < OCTAVES; i++) {\\n        rez += amplitude * valueNoiseSimple(p);\\n        amplitude /= persistance;\\n        p *= persistance;\\n    }\\n    return rez;\\n}\\n\\nfloat complexFBM(vec2 p) {\\n    float slow = time / 2.5;\\n    float fast = time / .5;\\n    vec2 offset1 = vec2(slow, 0.);// Main front\\n    vec2 offset2 = vec2(sin(fast)* 0.1, 0.);// sub fronts\\n\\n    return\\n    fractalNoise(p + offset1 + fractalNoise(\\n    p + fractalNoise(\\n    p + 2. * fractalNoise(p - offset2)\\n    )\\n    )\\n    );\\n}\\n\\nconst vec3 blueColor = vec3(0.029411765, 0.207843137, 0.250392157);\\nconst vec3 blackColor2 = vec3(0.00803922, 0.0203921569, 0.015686275);\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n    uv = uv * vec2(2.0, 0.5) - 1.0;\\n\\n    vec3 rez = mix(blackColor2, blueColor, complexFBM(uv));\\n    gl_FragColor = vec4(rez, 1.0);\\n}\";","import * as THREE from \"three\";\n\nconst defaultQuad = new THREE.PlaneBufferGeometry(2, 2, 1, 1);\nconst defaultVertexShader = `\t\nuniform vec4 uSize; \t\t//w h t l \nvarying vec2 vUv;\n\nvoid main(){\n\tvUv = uv;\n\tvec2 transformed = \n\t    position.xy * uSize.xy \n\t    - vec2(1.,-1.) + vec2( uSize.x ,  -uSize.y ) \n\t    + vec2( uSize.w , - uSize.z ) * 2.;\n\tgl_Position = vec4( transformed , 1. , 1. );\n}\n`;\n\nconst defaultFragmentShader = `\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n// uniform float time;\n\nvoid main(){\n\tgl_FragColor = texture2D( uTexture , vUv );\n}\t\n`;\n\nexport default class ScreenQuad extends THREE.Mesh {\n    constructor({\n                    width = 1,        \t//100%\n                    height = 1,\t\t\t//100%\n                    top = 0,\n                    left = 0,\n                    texture = null,\n                    fragmentShader = false\n                } = {}) {\n        super(defaultQuad, new THREE.ShaderMaterial({\n            uniforms: {\n                uTexture: {\n                    type: 't',\n                    value: texture\n                },\n                uSize: {\n                    type: 'v4',\n                    value: new THREE.Vector4(1, 1, 0, 0)\n                },\n                time: {value: 0.0},\n            },\n            vertexShader: defaultVertexShader,\n            fragmentShader: fragmentShader ? fragmentShader : defaultFragmentShader,\n            depthWrite: false\n        }));\n        this.frustumCulled = false;\n        this.renderOrder = -1;\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n\n        //cleanup\n        this._pixels = [false, false, false, false]; //w h t l\n        this._componentSetters = [\n            this.setWidth,\n            this.setHeight,\n            this.setTop,\n            this.setLeft\n        ];\n        this._components = [\n            'width',\n            'height',\n            'top',\n            'left'\n        ];\n        this.screenSize = new THREE.Vector2(1, 1);\n        this.setSize(width, height);\n        this.setOffset(top, left);\n    }\n\n    update(dt) {\n        this.material.uniforms.time.value += dt;\n    }\n\n    setScreenSize(width, height) {\n        // this.material.uniforms.uScreenSize.value.set( width , height , 1 / width , 1 / height );\n        this.screenSize.set(width, height);\n        this._pixels.forEach((p, pi) => {\n            //if a component is set in pixels, update the uniform\n            if (p) this._componentSetters[pi].call(this, this[this._components[pi]]);\n        });\n    }\n\n    setSize(width, height) {\n        this.setWidth(width);\n        this.setHeight(height);\n    }\n\n    setWidth(v) {\n        this.width = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.x = parseInt(v) / this.screenSize.x;\n            this._pixels[0] = true;\n        } else {\n            this.material.uniforms.uSize.value.x = v;\n            this._pixels[0] = false;\n        }\n    }\n\n    setHeight(v) {\n        this.height = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.y = parseInt(v) / this.screenSize.y;\n            this._pixels[1] = true;\n        } else {\n            this.material.uniforms.uSize.value.y = v;\n            this._pixels[1] = false;\n        }\n    }\n\n    setOffset(top, left) {\n        // this.material.uniforms.uSize.value.z = top;\n        // this.material.uniforms.uSize.value.w = left;\n        this.setLeft(left);\n        this.setTop(top);\n    }\n\n    setTop(v) {\n        this.top = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.z = parseInt(v) / this.screenSize.y;\n            this._pixels[2] = true;\n        } else {\n            this.material.uniforms.uSize.value.z = v;\n            this._pixels[2] = false;\n        }\n    }\n\n    setLeft(v) {\n        this.left = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.w = parseInt(v) / this.screenSize.x;\n            this._pixels[3] = true;\n        } else {\n            this.material.uniforms.uSize.value.w = v;\n            this._pixels[3] = false;\n        }\n    }\n}","// import BgShader from '@/visual/shader/bg_1.frag'\nimport BgShader from '@/visual/shader/bg_smoke.frag'\n// import BgShader from '@/visual/shader/bg_basic_swirl.frag'\nimport ScreenQuad from \"@/visual/helpers/ScreenQuad\";\nimport _ from \"lodash\";\nimport * as THREE from \"three\";\n\nclass BackgroundBase {\n    constructor(scene) {\n        this.scene = scene\n    }\n\n    install() {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    update(dt) {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    setSize(w, h) {\n    }\n}\n\nexport class Background extends BackgroundBase {\n    constructor(scene) {\n        super(scene);\n        this.quad = new ScreenQuad({\n            fragmentShader: BgShader\n        });\n    }\n\n    install() {\n        this.scene.add(this.quad)\n    }\n\n    update(dt) {\n        this.quad.update(dt)\n    }\n\n    setSize(w, h) {\n        if(this.quad) {\n            this.quad.setScreenSize(w, h)\n        }\n    }\n}\n\nexport class BlackgroundStaticBox extends BackgroundBase {\n    constructor(scene, baseUrl, ext='jpg') {\n        super(scene);\n        this.ext = ext\n        this.baseUrl = baseUrl\n    }\n\n    install() {\n        const ext = this.ext\n        const urls = _.map([\n            `right.${ext}`, `left.${ext}`,\n            `top.${ext}`, `bottom.${ext}`,\n            `front.${ext}`, `back.${ext}`\n        ], (name) => `${this.baseUrl}/${name}`);\n\n        this.scene.background = new THREE.CubeTextureLoader().load(urls)\n    }\n}\n","<template>\n    <div class=\"control-panel\">\n        <button @click=\"setSceneMode(mode.value)\"\n                :class=\"isButtonSelectedClass(mode.value)\"\n                v-for=\"mode in modes\" :key=\"mode.value\">\n            {{ mode.text }}\n        </button>\n    </div>\n</template>\n\n<script>\n\nimport {NodeGroupModes} from \"@/visual/NodeGroup\";\nimport {capitalizeFirstLetter} from \"@/helpers/String\";\n\nexport default {\n    name: 'ControlPanel',\n    components: {},\n    emits: ['mode-selected'],\n    props: {},\n    data() {\n        return {\n            selectedMode: NodeGroupModes.Normal,\n            activeOnly: false,\n        }\n    },\n    computed: {\n        modes() {\n            return [\n                {value: NodeGroupModes.Normal, text: 'NORMAL'},\n                {value: NodeGroupModes.Status, text: 'STATUS'},\n                {value: NodeGroupModes.Provider, text: 'PROVIDER'},\n                {value: NodeGroupModes.Version, text: 'VERSION'},\n                {value: NodeGroupModes.Bond, text: 'BOND'},\n                {value: NodeGroupModes.Geo, text: 'GEO'},\n            ]\n        }\n    },\n    methods: {\n        isButtonSelectedClass(modeName) {\n            return {\n                'button-selected': this.selectedMode === modeName\n            }\n        },\n\n        setSceneMode(value) {\n            if (value in NodeGroupModes) {\n                this.selectedMode = value\n                this.$emit('mode-selected', value)\n                location.hash = value\n            } else {\n                console.error(`Unknown mode: ${value}`)\n            }\n        },\n\n        setModeFromHash() {\n            const hash = location.hash\n            if (hash) {\n                const modeName = capitalizeFirstLetter(hash.substring(1))\n                this.setSceneMode(modeName)\n            }\n        }\n    },\n    mounted() {\n        this.setModeFromHash()\n    },\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.control-panel {\n    position: absolute;\n    bottom: 4px;\n    right: 4px;\n}\n\n@media (min-device-width: 320px) and (max-device-width: 768px) {\n    .control-panel {\n        bottom: 60px;\n    }\n}\n\n.button-selected {\n    border-width: 2px;\n    opacity: 1;\n}\n\n.float-right {\n    float: right;\n}\n\n</style>\n","export function capitalizeFirstLetter(string) {\n    return string && (string.charAt(0).toUpperCase() + string.slice(1));\n}","import { render } from \"./ControlPanel.vue?vue&type=template&id=0f6d274a&scoped=true\"\nimport script from \"./ControlPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ControlPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ControlPanel.vue?vue&type=style&index=0&id=0f6d274a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0f6d274a\"]])\n\nexport default __exports__","<template>\n    <Transition name=\"shrink\">\n        <div :class=\"{'window window-left': isLeft, 'window window-right': !isLeft }\" @keyup.esc.prevent=\"close\"\n             tabindex=\"0\" ref=\"modal\">\n            <div class=\"close-button\" @click=\"close\" v-tippy content=\"Close it\"></div>\n            <h1>Node details</h1>\n            <h2>\n                <font-awesome-icon class=\"icon\"\n                                   icon=\"fa-solid fa-arrow-right\"\n                                   v-if=\"node.requestedToLeave\"\n                                   content=\"Requested to leave!\"\n                                   v-tippy\n                />\n\n                <font-awesome-icon class=\"icon\"\n                                   icon=\"fa-solid fa-arrow-down-up-lock\"\n                                   v-if=\"node.forcedToLeave\"\n                                   content=\"Forced to leave!\"\n                                   v-tippy\n                />\n\n                {{ node.address }}\n                <button class=\"copy-button\" @click=\"copyNodeAddress\" content=\"Copy address\" v-tippy>\n                    <font-awesome-icon icon=\"fa-solid fa-copy\"/>\n                </button>\n            </h2>\n\n            <div class=\"prop-grid\">\n                <div class=\"prop-box\">\n                    <div class=\"category\">Status</div>\n                    {{ statusEmoji }}\n                    <span :class=\"nodeStatusClass\">{{ node.status }}</span>\n                </div>\n                <div class=\"prop-box\">\n                    <div class=\"category\">Since</div>\n                    <div class=\"value\">\n                        <span v-if=\"isOldest\" v-tippy content=\"The oldest active node\">⌛</span>\n                        {{ statusSince }} <small>(#{{ ageRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">💽 Version</div>\n                    <div class=\"value\">\n                        <span v-if=\"isUpToDataVersion\" v-tippy content=\"Latest version\">👌</span>\n                        <span v-else v-tippy content=\"Consider upgrading your node!\">⚠️</span>\n                        {{ node.version }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">🕸️ IP address</div>\n                    <div class=\"value\">\n                        <a :href=\"ipAddressInfoLink\" target=\"_blank\">\n                            {{ node.IPAddress }}\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">📍 Location</div>\n                    <div class=\"value\">\n                        {{ node.IPInfo?.flag }}\n                        {{ node.IPInfo?.country }},\n                        {{ node.IPInfo?.city || 'unknown city' }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">☁️ Provider</div>\n                    <div class=\"value\">{{ providerName }}</div>\n                </div>\n\n                <div class=\"prop-box\" v-else>\n                    <div class=\"value\">Unknown IP address</div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🌐 Explorer</div>\n                    <div class=\"value\">\n                        <a :href=\"`https://viewblock.io/thorchain/address/${node.address}`\"\n                           target=\"_blank\">Viewblock – {{ node.shortAddress }}</a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🔒 Bond</div>\n                    <div class=\"value\">\n                        {{ nodeBond }}\n                        <small>(#{{ nodeBondRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">Bond providers</div>\n                    <div class=\"value\">\n                        {{ node.bondProviders?.providers?.length }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🏆 Awards</div>\n                    <div class=\"value\">\n                        {{ award }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">😈 Slash points</div>\n                    <div class=\"value\">\n                        {{ node.slashPoints }} pts.\n                        <small>(#{{ slashPointsRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-for=\"[chain, height] of chainEntries\" :key=\"chain\">\n                    <div class=\"category\">{{ chain }}</div>\n                    <div class=\"value\">\n                        <span :title=\"height\" v-if=\"chainLag(chain)\" class=\"chain-lag\">\n                            🩸\n                            <span v-if=\"height > 0\">\n                                {{ chainLag(chain) }} blocks behind!\n                            </span>\n                            <span v-else>\n                                No sync at all\n                            </span>\n                        </span>\n                        <span v-else>\n                            Up to date\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Transition>\n\n</template>\n\n<script>\n\nimport {shortRune} from \"@/helpers/MathUtil\";\nimport copy from \"copy-to-clipboard\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\nimport _ from \"lodash\";\n\nconst STATUS_PROPS = {\n    [NodeStatus.Active]: {\n        emoji: '✅',\n        class: 'status-active'\n    },\n    [NodeStatus.Standby]: {\n        emoji: '⏳',\n        class: 'status-standby',\n    },\n    [NodeStatus.Disabled]: {\n        emoji: '🔴',\n        class: 'status-disabled',\n    },\n    [NodeStatus.Whitelisted]: {\n        emoji: '📄',\n        class: 'status-whitelisted',\n    },\n}\n\nexport default {\n    name: 'NodeDetailsWindow',\n    emits: ['close'],\n    props: [\n        'node',\n        'nodeSet',\n        'isLeft'\n    ],\n    data() {\n        return {}\n    },\n    computed: {\n        chainEntries() {\n            const keys = Object.keys(this.nodeSet.topHeights)\n            keys.sort()\n            return _.map(keys, chain => [chain, this.node.observeChains[chain] ?? 0])\n        },\n        topThorHeight() {\n            return DataStorage.lastBlock['THOR']\n        },\n        hasIP() {\n            return this.node.IPAddress && this.node.IPAddress !== ''\n        },\n        statusEmoji() {\n            return STATUS_PROPS[this.node.status]?.emoji\n        },\n        nodeStatusClass() {\n            return STATUS_PROPS[this.node.status]?.class\n        },\n        statusSince() {\n            const timestamp = this.nodeSet.estimateTimestampAtBlock(this.topThorHeight, this.node.statusSince)\n            try {\n                return (new Date(timestamp)).toISOString().slice(0, 10)\n            } catch {\n                return 'N/A'\n            }\n        },\n        isOldest() {\n            return true\n        },\n        ageRank() {\n            return this.nodeSet.ranks.age[this.node.address]\n        },\n        award() {\n            return shortRune(Math.round(this.node.currentAward))\n        },\n        nodeBond() {\n            return shortRune(Math.round(this.node.bond))\n        },\n        nodeBondRank() {\n            return this.nodeSet.ranks.bond[this.node.address]\n        },\n        nodeBondPercent() {\n            return this.nodeSet.bondPercentOfTotal(this.node.bond)\n        },\n        ipAddressInfoLink() {\n            return `https://www.infobyip.com/ip-${this.node.IPAddress}.html`\n        },\n        slashPointsRank() {\n            return this.nodeSet.ranks.slash[this.node.address]\n        },\n        chainLag() {\n            return (chain) => this.nodeSet.getChainHeightLagBlocks(this.node, chain)\n        },\n        providerName() {\n            const nativeName = this.node?.IPInfo?.providerName ?? UNKNOWN\n            return IPAddressInfoLoader.refineProviderName(nativeName)\n        },\n        isUpToDataVersion() {\n            return this.node.version === this.nodeSet.topVersion\n        }\n    },\n    methods: {\n        copyNodeAddress() {\n            copy(this.node.address)\n        },\n        close() {\n            this.$emit('close')\n        }\n    },\n    mounted() {\n        this.$refs.modal.focus()\n    },\n    // watch: {\n    //     nodeSet(ns) {\n    //         console.warn('node set changed', ns.ranks.bond)\n    //     }\n    // }\n}\n\n</script>\n\n<style lang=\"scss\">\n\n// todo: different variant for Portrait orientation\n.window {\n    position: fixed;\n    top: 50%;\n    transform: translate(0%, -50%);\n\n    border: 1px solid #097a7b;\n    border-radius: 12px;\n\n    background-color: rgba(0, 0, 0, 0.72);\n    backdrop-filter: blur(8px);\n    color: turquoise;\n    padding: 20px;\n\n    //max-width: 50vw;\n\n    font-size: 10pt;\n}\n\n.window-left {\n    left: 5%;\n}\n\n.window-right {\n    right: 5%;\n}\n\n.close-button {\n    float: right;\n    overflow: hidden;\n    position: relative;\n    border: none;\n    padding: 0;\n    width: 2em;\n    height: 2em;\n    border-radius: 50%;\n    background: transparent;\n    color: turquoise;\n    font: inherit;\n    text-indent: 100%;\n    cursor: pointer;\n\n    &:focus {\n        outline: solid 0 transparent;\n        box-shadow: 0 0 0 2px #8ed0f9\n    }\n\n    &:hover {\n        background: rgba(29, 161, 142, .1)\n    }\n\n    &:before, &:after {\n        position: absolute;\n        top: 15%;\n        left: calc(50% - .0625em);\n        width: .125em;\n        height: 70%;\n        border-radius: .125em;\n        transform: rotate(45deg);\n        background: currentcolor;\n        content: ''\n    }\n\n    &:after {\n        transform: rotate(-45deg);\n    }\n}\n\nh1 {\n    margin: 0;\n    padding: 0;\n    color: white;\n}\n\n.category {\n    font-family: EXO2, monospace;\n    //font-weight: bolder;\n    color: white;\n    font-size: 9pt;\n}\n\n.value {\n    font-family: EXO2, monospace;\n    font-size: 10pt;\n}\n\n.prop-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 4px;\n    color: white;\n    //font-size: 7pt;\n}\n\n.prop-box {\n    background-color: rgba(1, 0, 0, 0.5);\n    color: turquoise;\n    border-radius: 5px;\n    padding: 6px;\n    border: 1px dashed #16504a;\n    font-size: 14pt;\n}\n\n.status-standby {\n    color: #b4b4b4;\n}\n\n.status-disabled {\n    color: red;\n}\n\n.status-active {\n    color: #9cffb2;\n}\n\n.status-whitelisted {\n    color: white;\n}\n\n.chain-lag {\n    color: orangered;\n}\n\n.copy-button {\n    display: inline-block;\n    background: rgba(0, 0, 0, 0.5);\n    //border-radius: 10px;\n    padding: 4px;\n    font-size: 10pt;\n    color: white;\n}\n\n.icon {\n    padding: 2px;\n}\n\nsmall {\n    color: #34bfb1;\n}\n\n</style>\n","import { render } from \"./NodeDetailsWindow.vue?vue&type=template&id=5739990c\"\nimport script from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\nexport * from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\n\nimport \"./NodeDetailsWindow.vue?vue&type=style&index=0&id=5739990c&lang=scss\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport CameraControls from \"camera-controls\";\nimport TWEEN from \"tween.js\";\n\nexport class CameraController {\n    constructor(domElement, center = new THREE.Vector3()) {\n        this.domElement = domElement\n        this.center = center\n        this._createCamera()\n        this._createCameraControl()\n        this._animating = false\n        this.controlsEnabled = true\n    }\n\n    reset() {\n        this.controls.reset()\n    }\n\n    projectToScreen(worldVector) {\n        this.camera.updateProjectionMatrix()\n        return worldVector.project(this.camera)\n    }\n\n    _createCamera() {\n        this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight,\n            0.001, Config.Controls.Camera.Distance.Max * 2);\n        // this.camera = new THREE.OrthographicCamera()\n        this.camera.position.z = Config.Controls.Camera.Distance.Start\n    }\n\n    _createCameraControl() {\n        const controls = this.controls = new CameraControls(this.camera, this.domElement);\n        const cfg = Config.Controls.Camera\n\n        controls.dragToOffset = true\n        controls.minDistance = cfg.Distance.Min\n        controls.maxDistance = cfg.Distance.Max\n        this.camera.position.z = cfg.Distance.Start\n\n        controls.minAzimuthAngle = THREE.MathUtils.degToRad(-cfg.AzimuthAngleLimit)\n        controls.maxAzimuthAngle = THREE.MathUtils.degToRad(cfg.AzimuthAngleLimit)\n\n        controls.minPolarAngle = THREE.MathUtils.degToRad(-cfg.PolarAngleLimit + 90)\n        controls.maxPolarAngle = THREE.MathUtils.degToRad(cfg.PolarAngleLimit + 90)\n\n        controls.update(0)\n    }\n\n    update(delta) {\n        if (this.controlsEnabled && !this._animating && !this.cameraInspectsObject) {\n            this.controls.update(delta);\n        }\n        // todo: if we look at the object, keep tracking it while it moves around\n    }\n\n    onResize() {\n        const canvas = this.domElement;\n        const width = canvas.clientWidth;\n        const height = canvas.clientHeight;\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n\n    _getEndQuaternion(target, lookAtThis) {\n        const currPos = this.camera.position.clone()\n        const currQ = this.camera.quaternion.clone()\n\n        this.camera.position.copy(target)\n        this.camera.lookAt(lookAtThis)\n\n        const endQuaternion = this.camera.quaternion.clone()\n\n        this.camera.position.copy(currPos)\n        this.camera.quaternion.copy(currQ)\n\n        return endQuaternion\n    }\n\n    cameraLookAtNode(nodeObj, flat) {\n        if (!this.cameraInspectsObject) {\n            this.oldCameraPos = this.camera.position.clone()\n            this.oldCameraQuaternion = this.camera.quaternion.clone()\n            this.cameraInspectsObject = true\n        }\n\n        this._animating = true\n\n        const cfg = Config.Controls.Camera.Animation\n\n        const that = this\n\n        let target\n        let targetLookAt\n\n        if(flat) {\n            target = nodeObj.o.position.clone().add(new THREE.Vector3(0, 0, cfg.DistanceWhenZoomed))\n            targetLookAt = nodeObj.o.position.clone()\n        } else {\n            const deltaVector = nodeObj.o.position.clone().normalize().multiplyScalar(cfg.DistanceWhenZoomed)\n            target = nodeObj.o.position.clone().add(deltaVector)\n            targetLookAt = nodeObj.o.position.clone()\n        }\n\n        new TWEEN.Tween(this.camera.position)\n            .to(target, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                that._animating = false\n            })\n            .start();\n\n        const endQuaternion = this._getEndQuaternion(target, targetLookAt)\n        new TWEEN.Tween(this.camera.quaternion)\n            .to(endQuaternion, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    restoreCamera() {\n        if (this.cameraInspectsObject) {\n            this.cameraInspectsObject = false\n            this._animating = true\n\n            const that = this\n            const animTime = Config.Controls.Camera.Animation.Duration\n            new TWEEN.Tween(this.camera.position)\n                .to(this.oldCameraPos, Config.Controls.Camera.Animation.Duration)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .onUpdate(function () {\n                    // that.camera.position.copy(this);\n                    // that.camera.lookAt(that.center)\n                })\n                .onComplete(() => {\n                    that._animating = false\n                })\n                .start();\n\n            const endQuaternion = this._getEndQuaternion(this.oldCameraPos, this.center)\n            new TWEEN.Tween(this.camera.quaternion)\n                .to(endQuaternion, animTime)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .start()\n        }\n    }\n\n    dispose() {\n        this.controls.dispose()\n    }\n}\n","<template>\n    <div class=\"loading-indicator\">Loading.<span>{{ dots }}</span> </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'LoadingIndicator',\n    data() {\n        return {\n            dots: ''\n        }\n    },\n    methods: {\n        tick() {\n            this.dots += '.'\n            if(this.dots.length >= 3) {\n                this.dots = ''\n            }\n        }\n    },\n    mounted() {\n        this.timer = setInterval(this.tick, 200.0)\n    },\n    beforeUnmount() {\n        clearInterval(this.timer)\n    }\n}\n\n</script>\n\n<style scoped>\n    .loading-indicator {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 1.5rem;\n        color: white;\n    }\n</style>","import { render } from \"./LoadingIndicator.vue?vue&type=template&id=3618bf7b&scoped=true\"\nimport script from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingIndicator.vue?vue&type=style&index=0&id=3618bf7b&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3618bf7b\"]])\n\nexport default __exports__","/**\n * @author Mark Kellogg - http://www.github.com/mkkellogg\n */\n\n//=======================================\n// Trail Renderer\n//=======================================\nimport * as THREE from \"three\"\n\nexport class TrailRenderer extends THREE.Object3D {\n    constructor(scene, orientToMovement) {\n        super();\n\n        this.orientToMovement = !!orientToMovement;\n\n        this.scene = scene;\n\n        this.geometry = null;\n        this.mesh = null;\n        this.nodeCenters = null;\n\n        this.lastNodeCenter = null;\n        this.currentNodeCenter = null;\n        this.lastOrientationDir = null;\n        this.nodeIDs = null;\n        this.currentLength = 0;\n        this.currentEnd = 0;\n        this.currentNodeID = 0;\n\n    }\n}\n\nTrailRenderer.MaxHeadVertices = 128;\nTrailRenderer.LocalOrientationTangent = new THREE.Vector3(1, 0, 0);\nTrailRenderer.LocalOrientationDirection = new THREE.Vector3(0, 0, -1);\nTrailRenderer.LocalHeadOrigin = new THREE.Vector3(0, 0, 0);\nTrailRenderer.PositionComponentCount = 3;\nTrailRenderer.UVComponentCount = 2;\nTrailRenderer.IndicesPerFace = 3;\nTrailRenderer.FacesPerQuad = 2;\n\nTrailRenderer.Shader = {};\n\nTrailRenderer.Shader.BaseVertexVars = [\n\n    \"attribute float nodeID;\",\n    \"attribute float nodeVertexID;\",\n    \"attribute vec3 nodeCenter;\",\n\n    \"uniform float minID;\",\n    \"uniform float maxID;\",\n    \"uniform float trailLength;\",\n    \"uniform float maxTrailLength;\",\n    \"uniform float verticesPerNode;\",\n    \"uniform vec2 textureTileFactor;\",\n\n    \"uniform vec4 headColor;\",\n    \"uniform vec4 tailColor;\",\n\n    \"varying vec4 vColor;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedVertexVars = [\n\n    TrailRenderer.Shader.BaseVertexVars,\n    \"varying vec2 vUV;\",\n    \"uniform float dragTexture;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseFragmentVars = [\n\n    \"varying vec4 vColor;\",\n    \"uniform sampler2D texture;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedFragmentVars = [\n\n    TrailRenderer.Shader.BaseFragmentVars,\n    \"varying vec2 vUV;\"\n\n].join(\"\\n\");\n\n\nTrailRenderer.Shader.VertexShaderCore = [\n\n    \"float fraction = ( maxID - nodeID ) / ( maxID - minID );\",\n    \"vColor = ( 1.0 - fraction ) * headColor + fraction * tailColor;\",\n    \"vec4 realPosition = vec4( ( 1.0 - fraction ) * position.xyz + fraction * nodeCenter.xyz, 1.0 ); \",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseVertexShader = [\n\n    TrailRenderer.Shader.BaseVertexVars,\n\n    \"void main() { \",\n\n    TrailRenderer.Shader.VertexShaderCore,\n    \"gl_Position = projectionMatrix * viewMatrix * realPosition;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseFragmentShader = [\n\n    TrailRenderer.Shader.BaseFragmentVars,\n\n    \"void main() { \",\n\n    \"gl_FragColor = vColor;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedVertexShader = [\n\n    TrailRenderer.Shader.TexturedVertexVars,\n\n    \"void main() { \",\n\n    TrailRenderer.Shader.VertexShaderCore,\n    \"float s = 0.0;\",\n    \"float t = 0.0;\",\n    \"if ( dragTexture == 1.0 ) { \",\n    \"   s = fraction *  textureTileFactor.s; \",\n    \" \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;\",\n    \"} else { \",\n    \"\ts = nodeID / maxTrailLength * textureTileFactor.s;\",\n    \" \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;\",\n    \"}\",\n    \"vUV = vec2( s, t ); \",\n    \"gl_Position = projectionMatrix * viewMatrix * realPosition;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedFragmentShader = [\n\n    TrailRenderer.Shader.TexturedFragmentVars,\n\n    \"void main() { \",\n\n    \"vec4 textureColor = texture2D( texture, vUV );\",\n    \"gl_FragColor = vColor * textureColor;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.createMaterial = function (vertexShader, fragmentShader, customUniforms) {\n\n    customUniforms = customUniforms || {};\n\n    customUniforms.trailLength = {type: \"f\", value: null};\n    customUniforms.verticesPerNode = {type: \"f\", value: null};\n    customUniforms.minID = {type: \"f\", value: null};\n    customUniforms.maxID = {type: \"f\", value: null};\n    customUniforms.dragTexture = {type: \"f\", value: null};\n    customUniforms.maxTrailLength = {type: \"f\", value: null};\n    customUniforms.textureTileFactor = {type: \"v2\", value: null};\n\n    customUniforms.headColor = {type: \"v4\", value: new THREE.Vector4()};\n    customUniforms.tailColor = {type: \"v4\", value: new THREE.Vector4()};\n\n    vertexShader = vertexShader || TrailRenderer.Shader.BaseVertexShader;\n    fragmentShader = fragmentShader || TrailRenderer.Shader.BaseFragmentShader;\n\n    return new THREE.ShaderMaterial(\n        {\n            uniforms: customUniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n\n            transparent: true,\n            alphaTest: 0.5,\n\n            blending: THREE.CustomBlending,\n            blendSrc: THREE.SrcAlphaFactor,\n            blendDst: THREE.OneMinusSrcAlphaFactor,\n            blendEquation: THREE.AddEquation,\n\n            depthTest: true,\n            depthWrite: false,\n\n            side: THREE.DoubleSide\n        });\n\n}\n\nTrailRenderer.createBaseMaterial = function (customUniforms) {\n\n    return this.createMaterial(TrailRenderer.Shader.BaseVertexShader, TrailRenderer.Shader.BaseFragmentShader, customUniforms);\n\n}\n\nTrailRenderer.createTexturedMaterial = function (customUniforms) {\n\n    customUniforms = {};\n    customUniforms.texture = {type: \"t\", value: null};\n\n    return this.createMaterial(TrailRenderer.Shader.TexturedVertexShader, TrailRenderer.Shader.TexturedFragmentShader, customUniforms);\n\n}\n\nTrailRenderer.prototype.initialize = function (material, length, dragTexture, localHeadWidth, localHeadGeometry, targetObject) {\n\n    this.deactivate();\n    this.destroyMesh();\n\n    this.length = (length > 0) ? length + 1 : 0;\n    this.dragTexture = (!dragTexture) ? 0 : 1;\n    this.targetObject = targetObject;\n\n    this.initializeLocalHeadGeometry(localHeadWidth, localHeadGeometry);\n\n    this.nodeIDs = [];\n    this.nodeCenters = [];\n\n    for (var i = 0; i < this.length; i++) {\n\n        this.nodeIDs[i] = -1;\n        this.nodeCenters[i] = new THREE.Vector3();\n\n    }\n\n    this.material = material;\n\n    this.initializeGeometry();\n    this.initializeMesh();\n\n    this.material.uniforms.trailLength.value = 0;\n    this.material.uniforms.minID.value = 0;\n    this.material.uniforms.maxID.value = 0;\n    this.material.uniforms.dragTexture.value = this.dragTexture;\n    this.material.uniforms.maxTrailLength.value = this.length;\n    this.material.uniforms.verticesPerNode.value = this.VerticesPerNode;\n    this.material.uniforms.textureTileFactor.value = new THREE.Vector2(1.0, 1.0);\n\n    this.reset();\n\n}\n\nTrailRenderer.prototype.initializeLocalHeadGeometry = function (localHeadWidth, localHeadGeometry) {\n\n    this.localHeadGeometry = [];\n\n    if (!localHeadGeometry) {\n\n        var halfWidth = localHeadWidth || 1.0;\n        halfWidth = halfWidth / 2.0;\n\n        this.localHeadGeometry.push(new THREE.Vector3(-halfWidth, 0, 0));\n        this.localHeadGeometry.push(new THREE.Vector3(halfWidth, 0, 0));\n\n        this.VerticesPerNode = 2;\n\n    } else {\n\n        this.VerticesPerNode = 0;\n        for (var i = 0; i < localHeadGeometry.length && i < TrailRenderer.MaxHeadVertices; i++) {\n\n            var vertex = localHeadGeometry[i];\n\n            if (vertex && vertex instanceof THREE.Vector3) {\n\n                var vertexCopy = new THREE.Vector3();\n\n                vertexCopy.copy(vertex);\n\n                this.localHeadGeometry.push(vertexCopy);\n                this.VerticesPerNode++;\n\n            }\n\n        }\n\n    }\n\n    this.FacesPerNode = (this.VerticesPerNode - 1) * 2;\n    this.FaceIndicesPerNode = this.FacesPerNode * 3;\n\n}\n\nTrailRenderer.prototype.initializeGeometry = function () {\n\n    this.vertexCount = this.length * this.VerticesPerNode;\n    this.faceCount = this.length * this.FacesPerNode;\n\n    var geometry = new THREE.BufferGeometry();\n\n    var nodeIDs = new Float32Array(this.vertexCount);\n    var nodeVertexIDs = new Float32Array(this.vertexCount * this.VerticesPerNode);\n    var positions = new Float32Array(this.vertexCount * TrailRenderer.PositionComponentCount);\n    var nodeCenters = new Float32Array(this.vertexCount * TrailRenderer.PositionComponentCount);\n    var uvs = new Float32Array(this.vertexCount * TrailRenderer.UVComponentCount);\n    var indices = new Uint32Array(this.faceCount * TrailRenderer.IndicesPerFace);\n\n    var nodeIDAttribute = new THREE.BufferAttribute(nodeIDs, 1);\n    nodeIDAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeID', nodeIDAttribute);\n\n    var nodeVertexIDAttribute = new THREE.BufferAttribute(nodeVertexIDs, 1);\n    nodeVertexIDAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeVertexID', nodeVertexIDAttribute);\n\n    var nodeCenterAttribute = new THREE.BufferAttribute(nodeCenters, TrailRenderer.PositionComponentCount);\n    nodeCenterAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeCenter', nodeCenterAttribute);\n\n    var positionAttribute = new THREE.BufferAttribute(positions, TrailRenderer.PositionComponentCount);\n    positionAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('position', positionAttribute);\n\n    var uvAttribute = new THREE.BufferAttribute(uvs, TrailRenderer.UVComponentCount);\n    uvAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('uv', uvAttribute);\n\n    var indexAttribute = new THREE.BufferAttribute(indices, 1);\n    indexAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setIndex(indexAttribute);\n\n    this.geometry = geometry;\n\n}\n\nTrailRenderer.prototype.zeroVertices = function () {\n\n    var positions = this.geometry.getAttribute('position');\n\n    for (var i = 0; i < this.vertexCount; i++) {\n\n        var index = i * 3;\n\n        positions.array[index] = 0;\n        positions.array[index + 1] = 0;\n        positions.array[index + 2] = 0;\n\n    }\n\n    positions.needsUpdate = true;\n    positions.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.zeroIndices = function () {\n\n    var indices = this.geometry.getIndex();\n\n    for (var i = 0; i < this.faceCount; i++) {\n\n        var index = i * 3;\n\n        indices.array[index] = 0;\n        indices.array[index + 1] = 0;\n        indices.array[index + 2] = 0;\n\n    }\n\n    indices.needsUpdate = true;\n    indices.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.formInitialFaces = function () {\n\n    this.zeroIndices();\n\n    var indices = this.geometry.getIndex();\n\n    for (var i = 0; i < this.length - 1; i++) {\n\n        this.connectNodes(i, i + 1);\n\n    }\n\n    indices.needsUpdate = true;\n    indices.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.initializeMesh = function () {\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.dynamic = true;\n    this.mesh.matrixAutoUpdate = false;\n\n}\n\nTrailRenderer.prototype.destroyMesh = function () {\n\n    if (this.mesh) {\n\n        this.scene.remove(this.mesh);\n        this.mesh = null;\n\n    }\n\n}\n\nTrailRenderer.prototype.reset = function () {\n\n    this.currentLength = 0;\n    this.currentEnd = -1;\n\n    this.lastNodeCenter = null;\n    this.currentNodeCenter = null;\n    this.lastOrientationDir = null;\n\n    this.currentNodeID = 0;\n\n    this.formInitialFaces();\n    this.zeroVertices();\n\n    this.geometry.setDrawRange(0, 0);\n\n}\n\nTrailRenderer.prototype.updateUniforms = function () {\n\n    if (this.currentLength < this.length) {\n\n        this.material.uniforms.minID.value = 0;\n\n    } else {\n\n        this.material.uniforms.minID.value = this.currentNodeID - this.length;\n\n    }\n    this.material.uniforms.maxID.value = this.currentNodeID;\n    this.material.uniforms.trailLength.value = this.currentLength;\n    this.material.uniforms.maxTrailLength.value = this.length;\n    this.material.uniforms.verticesPerNode.value = this.VerticesPerNode;\n\n}\n\nTrailRenderer.prototype.advance = function () {\n    var tempMatrix4 = new THREE.Matrix4();\n\n    return function advance() {\n\n        this.targetObject.updateMatrixWorld();\n        tempMatrix4.copy(this.targetObject.matrixWorld);\n\n        this.advanceWithTransform(tempMatrix4);\n\n        this.updateUniforms();\n    }\n\n}();\n\nTrailRenderer.prototype.advanceWithPositionAndOrientation = function (nextPosition, orientationTangent) {\n\n    this.advanceGeometry({position: nextPosition, tangent: orientationTangent}, null);\n\n}\n\nTrailRenderer.prototype.advanceWithTransform = function (transformMatrix) {\n\n    this.advanceGeometry(null, transformMatrix);\n\n}\n\nTrailRenderer.prototype.advanceGeometry = function () {\n\n    return function advanceGeometry(positionAndOrientation, transformMatrix) {\n\n        var nextIndex = this.currentEnd + 1 >= this.length ? 0 : this.currentEnd + 1;\n\n        if (transformMatrix) {\n\n            this.updateNodePositionsFromTransformMatrix(nextIndex, transformMatrix);\n\n        } else {\n\n            this.updateNodePositionsFromOrientationTangent(nextIndex, positionAndOrientation.position, positionAndOrientation.tangent);\n        }\n\n        if (this.currentLength >= 1) {\n\n            this.connectNodes(this.currentEnd, nextIndex);\n\n            if (this.currentLength >= this.length) {\n\n                var disconnectIndex = this.currentEnd + 1 >= this.length ? 0 : this.currentEnd + 1;\n                this.disconnectNodes(disconnectIndex);\n\n            }\n\n        }\n\n        if (this.currentLength < this.length) {\n\n            this.currentLength++;\n\n        }\n\n        this.currentEnd++;\n        if (this.currentEnd >= this.length) {\n\n            this.currentEnd = 0;\n\n        }\n\n        if (this.currentLength >= 1) {\n\n            if (this.currentLength < this.length) {\n\n                this.geometry.setDrawRange(0, (this.currentLength - 1) * this.FaceIndicesPerNode);\n\n            } else {\n\n                this.geometry.setDrawRange(0, this.currentLength * this.FaceIndicesPerNode);\n\n            }\n\n        }\n\n        this.updateNodeID(this.currentEnd, this.currentNodeID);\n        this.currentNodeID++;\n    }\n\n}();\n\nTrailRenderer.prototype.updateHead = function () {\n\n    var tempMatrix4 = new THREE.Matrix4();\n\n    return function advance() {\n\n        if (this.currentEnd < 0) return;\n\n        this.targetObject.updateMatrixWorld();\n        tempMatrix4.copy(this.targetObject.matrixWorld);\n\n        this.updateNodePositionsFromTransformMatrix(this.currentEnd, tempMatrix4);\n    }\n\n}();\n\nTrailRenderer.prototype.updateNodeID = function (nodeIndex, id) {\n\n    this.nodeIDs[nodeIndex] = id;\n\n    var nodeIDs = this.geometry.getAttribute('nodeID');\n    var nodeVertexIDs = this.geometry.getAttribute('nodeVertexID');\n\n    for (var i = 0; i < this.VerticesPerNode; i++) {\n\n        var baseIndex = nodeIndex * this.VerticesPerNode + i;\n        nodeIDs.array[baseIndex] = id;\n        nodeVertexIDs.array[baseIndex] = i;\n\n    }\n\n    nodeIDs.needsUpdate = true;\n    nodeVertexIDs.needsUpdate = true;\n\n    nodeIDs.updateRange.offset = nodeIndex * this.VerticesPerNode;\n    nodeIDs.updateRange.count = this.VerticesPerNode;\n\n    nodeVertexIDs.updateRange.offset = nodeIndex * this.VerticesPerNode;\n    nodeVertexIDs.updateRange.count = this.VerticesPerNode;\n\n}\n\nTrailRenderer.prototype.updateNodeCenter = function (nodeIndex, nodeCenter) {\n\n    this.lastNodeCenter = this.currentNodeCenter;\n\n    this.currentNodeCenter = this.nodeCenters[nodeIndex];\n    this.currentNodeCenter.copy(nodeCenter);\n\n    var nodeCenters = this.geometry.getAttribute('nodeCenter');\n\n    for (var i = 0; i < this.VerticesPerNode; i++) {\n\n        var baseIndex = (nodeIndex * this.VerticesPerNode + i) * 3;\n        nodeCenters.array[baseIndex] = nodeCenter.x;\n        nodeCenters.array[baseIndex + 1] = nodeCenter.y;\n        nodeCenters.array[baseIndex + 2] = nodeCenter.z;\n\n    }\n\n    nodeCenters.needsUpdate = true;\n\n    nodeCenters.updateRange.offset = nodeIndex * this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n    nodeCenters.updateRange.count = this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n\n}\n\nTrailRenderer.prototype.updateNodePositionsFromOrientationTangent = function () {\n\n    var tempQuaternion = new THREE.Quaternion();\n    var tempOffset = new THREE.Vector3();\n    var tempLocalHeadGeometry = [];\n\n    for (var i = 0; i < TrailRenderer.MaxHeadVertices; i++) {\n\n        var vertex = new THREE.Vector3();\n        tempLocalHeadGeometry.push(vertex);\n\n    }\n\n    return function updateNodePositionsFromOrientationTangent(nodeIndex, nodeCenter, orientationTangent) {\n\n        var positions = this.geometry.getAttribute('position');\n\n        this.updateNodeCenter(nodeIndex, nodeCenter);\n\n        tempOffset.copy(nodeCenter);\n        tempOffset.sub(TrailRenderer.LocalHeadOrigin);\n        tempQuaternion.setFromUnitVectors(TrailRenderer.LocalOrientationTangent, orientationTangent);\n\n        for (var i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var vertex = tempLocalHeadGeometry[i];\n            vertex.copy(this.localHeadGeometry[i]);\n            vertex.applyQuaternion(tempQuaternion);\n            vertex.add(tempOffset);\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var positionIndex = ((this.VerticesPerNode * nodeIndex) + i) * TrailRenderer.PositionComponentCount;\n            var transformedHeadVertex = tempLocalHeadGeometry[i];\n\n            positions.array[positionIndex] = transformedHeadVertex.x;\n            positions.array[positionIndex + 1] = transformedHeadVertex.y;\n            positions.array[positionIndex + 2] = transformedHeadVertex.z;\n\n        }\n\n        positions.needsUpdate = true;\n\n    }\n\n}();\n\nTrailRenderer.prototype.updateNodePositionsFromTransformMatrix = function () {\n    var tempMatrix3 = new THREE.Matrix3();\n    var tempQuaternion = new THREE.Quaternion();\n    var tempPosition = new THREE.Vector3();\n    var tempOffset = new THREE.Vector3();\n    var worldOrientation = new THREE.Vector3();\n    var tempDirection = new THREE.Vector3();\n\n    var tempLocalHeadGeometry = [];\n    for (var i = 0; i < TrailRenderer.MaxHeadVertices; i++) {\n\n        var vertex = new THREE.Vector3();\n        tempLocalHeadGeometry.push(vertex);\n\n    }\n\n    function getMatrix3FromMatrix4(matrix3, matrix4) {\n\n        var e = matrix4.elements;\n        matrix3.set(e[0], e[1], e[2],\n            e[4], e[5], e[6],\n            e[8], e[9], e[10]);\n\n    }\n\n    return function updateNodePositionsFromTransformMatrix(nodeIndex, transformMatrix) {\n\n        var positions = this.geometry.getAttribute('position');\n\n        tempPosition.set(0, 0, 0);\n        tempPosition.applyMatrix4(transformMatrix);\n        this.updateNodeCenter(nodeIndex, tempPosition);\n\n        var vertex\n        for (var i = 0; i < this.localHeadGeometry.length; i++) {\n\n             vertex = tempLocalHeadGeometry[i];\n            vertex.copy(this.localHeadGeometry[i]);\n\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n             vertex = tempLocalHeadGeometry[i];\n            vertex.applyMatrix4(transformMatrix);\n\n        }\n\n        if (this.lastNodeCenter && this.orientToMovement) {\n\n            getMatrix3FromMatrix4(tempMatrix3, transformMatrix);\n            worldOrientation.set(0, 0, -1);\n            worldOrientation.applyMatrix3(tempMatrix3);\n\n            tempDirection.copy(this.currentNodeCenter);\n            tempDirection.sub(this.lastNodeCenter);\n            tempDirection.normalize();\n\n            if (tempDirection.lengthSq() <= .0001 && this.lastOrientationDir) {\n\n                tempDirection.copy(this.lastOrientationDir);\n            }\n\n            if (tempDirection.lengthSq() > .0001) {\n\n                if (!this.lastOrientationDir) this.lastOrientationDir = new THREE.Vector3();\n\n                tempQuaternion.setFromUnitVectors(worldOrientation, tempDirection);\n\n                tempOffset.copy(this.currentNodeCenter);\n\n                for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n                     vertex = tempLocalHeadGeometry[i];\n                    vertex.sub(tempOffset);\n                    vertex.applyQuaternion(tempQuaternion);\n                    vertex.add(tempOffset);\n\n                }\n            }\n\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var positionIndex = ((this.VerticesPerNode * nodeIndex) + i) * TrailRenderer.PositionComponentCount;\n            var transformedHeadVertex = tempLocalHeadGeometry[i];\n\n            positions.array[positionIndex] = transformedHeadVertex.x;\n            positions.array[positionIndex + 1] = transformedHeadVertex.y;\n            positions.array[positionIndex + 2] = transformedHeadVertex.z;\n\n        }\n\n        positions.needsUpdate = true;\n\n        positions.updateRange.offset = nodeIndex * this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n        positions.updateRange.count = this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n    }\n\n}();\n\nTrailRenderer.prototype.connectNodes = function () {\n\n    var returnObj = {\n\n        \"attribute\": null,\n        \"offset\": 0,\n        \"count\": -1\n\n    };\n\n    return function connectNodes(srcNodeIndex, destNodeIndex) {\n\n        var indices = this.geometry.getIndex();\n\n        for (var i = 0; i < this.localHeadGeometry.length - 1; i++) {\n\n            var srcVertexIndex = (this.VerticesPerNode * srcNodeIndex) + i;\n            var destVertexIndex = (this.VerticesPerNode * destNodeIndex) + i;\n\n            var faceIndex = ((srcNodeIndex * this.FacesPerNode) + (i * TrailRenderer.FacesPerQuad)) * TrailRenderer.IndicesPerFace;\n\n            indices.array[faceIndex] = srcVertexIndex;\n            indices.array[faceIndex + 1] = destVertexIndex;\n            indices.array[faceIndex + 2] = srcVertexIndex + 1;\n\n            indices.array[faceIndex + 3] = destVertexIndex;\n            indices.array[faceIndex + 4] = destVertexIndex + 1;\n            indices.array[faceIndex + 5] = srcVertexIndex + 1;\n\n        }\n\n        indices.needsUpdate = true;\n        indices.updateRange.count = -1;\n\n        returnObj.attribute = indices;\n        returnObj.offset = srcNodeIndex * this.FacesPerNode * TrailRenderer.IndicesPerFace;\n        returnObj.count = this.FacesPerNode * TrailRenderer.IndicesPerFace;\n\n        return returnObj;\n\n    }\n}();\n\nTrailRenderer.prototype.disconnectNodes = function () {\n\n    var returnObj = {\n\n        \"attribute\": null,\n        \"offset\": 0,\n        \"count\": -1\n\n    };\n\n    return function disconnectNodes(srcNodeIndex) {\n\n        var indices = this.geometry.getIndex();\n\n        for (var i = 0; i < this.localHeadGeometry.length - 1; i++) {\n\n            // var srcVertexIndex = (this.VerticesPerNode * srcNodeIndex) + i;\n\n            var faceIndex = ((srcNodeIndex * this.FacesPerNode) + (i * TrailRenderer.FacesPerQuad)) * TrailRenderer.IndicesPerFace;\n\n            indices.array[faceIndex] = 0;\n            indices.array[faceIndex + 1] = 0;\n            indices.array[faceIndex + 2] = 0;\n\n            indices.array[faceIndex + 3] = 0;\n            indices.array[faceIndex + 4] = 0;\n            indices.array[faceIndex + 5] = 0;\n\n        }\n\n        indices.needsUpdate = true;\n        indices.updateRange.count = -1;\n\n        returnObj.attribute = indices;\n        returnObj.offset = srcNodeIndex * this.FacesPerNode * TrailRenderer.IndicesPerFace;\n        returnObj.count = this.FacesPerNode * TrailRenderer.IndicesPerFace;\n\n        return returnObj;\n\n    }\n\n}();\n\nTrailRenderer.prototype.deactivate = function () {\n\n    if (this.isActive) {\n\n        this.scene.remove(this.mesh);\n        this.isActive = false;\n\n    }\n\n}\n\nTrailRenderer.prototype.activate = function () {\n\n    if (!this.isActive) {\n\n        this.scene.add(this.mesh);\n        this.isActive = true;\n\n    }\n\n}\n\n\n","import * as THREE from \"three\";\nimport {TrailRenderer} from \"@/visual/helpers/TrailRenderer\";\nimport {Colors} from \"@/config\";\n\nexport class TrailTesting {\n    constructor(scene) {\n        this.scene = scene\n\n        this.baseTrailMaterial = TrailRenderer.createBaseMaterial();\n\n        this.material = this.baseTrailMaterial\n        this.material.depthWrite = false\n\n        this.circlePoints = this.makeCircle()\n        this.makeTrailTarget(this.circlePoints)\n        this.makeTrail()\n        this._makeFlyState()\n    }\n\n    makeTrail() {\n        const trailLength = 300.0\n        this.trail = new TrailRenderer(this.scene, false);\n        this.trail.initialize(\n            this.material,\n            Math.floor(trailLength),\n            0.0, 0,\n            this.circlePoints,\n            this.trailTarget);\n\n        this.updateColors(\n            new THREE.Color(Colors.LightningBlue),\n            new THREE.Color(Colors.YggdrasilGreen)\n        )\n        this.trail.activate();\n    }\n\n    updateColors(headColor, trialColor) {\n        this.material.uniforms.headColor.value.copy(headColor);\n        this.material.uniforms.tailColor.value.copy(trialColor);\n    }\n\n    _makeFlyState() {\n        this.lastTrailUpdateTime = 0.0\n        this._t = 0.0\n\n        this.lastDirection = new THREE.Vector3();\n        this.lastTargetPosition = new THREE.Vector3();\n        this.lastRotationMatrix = new THREE.Matrix4();\n        this.currentTargetPosition = new THREE.Vector3();\n        this.currentDirection = new THREE.Vector3();\n\n        this.tempQuaternion = new THREE.Quaternion();\n\n        this.baseForward = new THREE.Vector3(0, 0, -1);\n        this.tempUp = new THREE.Vector3();\n\n        this.tempRotationMatrix = new THREE.Matrix4();\n        this.tempTranslationMatrix = new THREE.Matrix4();\n\n    }\n\n    update(dt) {\n        if(dt <= 0) {\n            return\n        }\n\n        this._t += dt\n\n        const areaScale = 100;\n        const trailGrowTime = 10.0 * 1000.0\n\n        if (this._t - this.lastTrailUpdateTime > trailGrowTime) {\n            this.trail.advance();\n            this.lastTrailUpdateTime = this._t;\n        } else {\n            this.trail.updateHead();\n        }\n\n        const scaledTime = this._t;\n\n        this.lastTargetPosition.copy(this.currentTargetPosition);\n\n        this.currentTargetPosition.x = Math.sin(scaledTime) * areaScale;\n        this.currentTargetPosition.y = Math.sin(scaledTime * 1.1) * areaScale;\n        this.currentTargetPosition.z = Math.sin(scaledTime * 1.6) * areaScale;\n\n        // console.log(this.currentTargetPosition)\n\n        this.lastDirection.copy(this.currentDirection);\n\n        this.currentDirection.copy(this.currentTargetPosition);\n        this.currentDirection.sub(this.lastTargetPosition);\n        this.currentDirection.normalize();\n\n        this.tempUp.crossVectors(this.currentDirection, this.baseForward);\n\n        this.tempRotationMatrix.identity();\n\n        const angle = this.baseForward.angleTo(this.currentDirection);\n        if (Math.abs(angle) > .01 && this.tempUp.lengthSq() > .001) {\n            this.tempQuaternion.setFromUnitVectors(this.baseForward, this.currentDirection);\n            this.tempQuaternion.normalize();\n            this.tempRotationMatrix.makeRotationFromQuaternion(this.tempQuaternion);\n            this.lastRotationMatrix.copy(this.tempRotationMatrix);\n        }\n\n        this.tempTranslationMatrix.identity();\n        this.tempTranslationMatrix.makeTranslation(\n            this.currentTargetPosition.x,\n            this.currentTargetPosition.y,\n            this.currentTargetPosition.z\n        );\n\n        // this.tempTranslationMatrix.multiply(this.tempRotationMatrix);\n        this.tempRotationMatrix.multiply(this.tempTranslationMatrix);\n\n        this.trailTarget.matrix.identity();\n        // this.trailTarget.applyMatrix4(this.tempTranslationMatrix);\n        this.trailTarget.applyMatrix4(this.tempRotationMatrix);\n        this.trailTarget.updateMatrixWorld();\n    }\n\n    makeCircle() {\n        let circlePoints = [];\n        const twoPI = Math.PI * 2;\n        let index = 0;\n        const scale = 10.0;\n        const inc = twoPI / 32.0;\n\n        for (let i = 0; i <= twoPI + inc; i += inc) {\n            circlePoints[index] = new THREE.Vector3(Math.cos(i) * scale, Math.sin(i) * scale, 0);\n            index++;\n        }\n        return circlePoints\n    }\n\n    makeTrailTarget(points) {\n        const starShape = new THREE.Shape(points);\n\n        const extrusionSettings = {\n            depth: 2, size: 2, height: 1, curveSegments: 3,\n            bevelThickness: 1, bevelSize: 2, bevelEnabled: false,\n            material: 0, extrudeMaterial: 1\n        };\n\n        const starGeometry = new THREE.ExtrudeGeometry(starShape, extrusionSettings);\n\n        const trailTargetMaterial = new THREE.MeshPhongMaterial({\n            color: 0xa0adaf,\n            shininess: 10,\n            specular: 0x111111,\n            flatShading: false,\n        });\n\n        const trailTarget = this.trailTarget = new THREE.Mesh(starGeometry, trailTargetMaterial);\n        trailTarget.receiveShadow = false;\n\n        this.scene.add(trailTarget);\n    }\n}","import * as THREE from \"three\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {TrailTesting} from \"@/visual/helpers/TrailTesting\";\nimport {dbgSimulateLoaded} from \"@/helpers/EventTypes\";\n\nexport class TrailTestScene {\n    constructor(scene, cameraController) {\n        this.scene = scene\n        this.cameraController = cameraController\n\n        this._makeSomeLight()\n\n        this.trailTester = new TrailTesting(this.scene)\n\n        dbgSimulateLoaded()\n    }\n\n    _makeSomeLight() {\n        // const light = new THREE.DirectionalLight('hsl(0, 100%, 100%)')\n        // light.position.set(0, 10, 1000)\n        // this.scene.add(light)\n\n        const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n        this.scene.add(ambientLight);\n    }\n\n    update(delta) {\n        this.trailTester.update(delta)\n    }\n\n    dispose() {\n        clearObject(this.scene)\n    }\n}\n","import * as THREE from \"three\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {dbgSimulateLoaded} from \"@/helpers/EventTypes\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport TWEEN from \"tween.js\";\n\nexport class NodeObjTestScene {\n    constructor(scene, camera) {\n        this.scene = scene\n        this.camera = camera\n\n        this._makeSomeLight()\n\n        dbgSimulateLoaded()\n\n        this.nodeObj = new NodeObject(new NodeInfo({\n            node_address: 'thor123',\n            status: 'Active',\n            bond: 100000000000000000,\n            version: '1.96.2',\n        }))\n\n        this.nodeObj.labelObj.visible = false\n\n        this.nodeObj.material.uniforms.rust.value = -1.0\n\n        new TWEEN.Tween(this.nodeObj.material.uniforms.rust)\n            .to({value: 1.0}, 2000)\n            .repeat(Infinity)\n            .yoyo(true)\n            .start()\n\n        this.nodeObj.o.position.set(0, 0, 1500)\n        scene.add(this.nodeObj.o)\n\n        this.camera.zoom = 100\n    }\n\n    _makeSomeLight() {\n        // const light = new THREE.DirectionalLight('hsl(0, 100%, 100%)')\n        // light.position.set(0, 10, 1000)\n        // this.scene.add(light)\n\n        const ambientLight = new THREE.AmbientLight(0xffffff); // soft white light\n        this.scene.add(ambientLight);\n    }\n\n    update(delta) {\n        this.nodeObj.update(delta * 0.1)\n    }\n\n    dispose() {\n        clearObject(this.scene)\n    }\n}\n","import {EventTypes} from \"@/helpers/EventTypes\";\nimport axios from \"axios\";\n\nexport class SoftwareVersionTracker {\n    constructor(bus, checkInterval = 60 * 1000, url='/version.txt') {\n        this.bus = bus\n        this._timer = 0\n        this._checkInterval = checkInterval\n        this._url = url\n        this._version = ''\n    }\n\n    get isRunning() {\n        return this._timer !== 0\n    }\n\n    run() {\n        if(this.isRunning) {\n            return\n        }\n        this._tick().then()\n        this._timer = setInterval(this._tick.bind(this), this._checkInterval)\n    }\n\n    stop() {\n        if(!this.isRunning) {\n            return\n        }\n        clearInterval(this._timer)\n        this._timer = 0\n    }\n\n    async _tick() {\n        const r = await axios.get(this._url)\n        if(r.status === 200) {\n            const newVersion = r.data.trim()\n            if(this._version === '') {\n                this._version = newVersion\n                console.log(`Set current version: ${this._version}`)\n            } else if(this._version !== newVersion) {\n                const oldVersion = this._version\n                this._version = newVersion\n                this._notify(this._version, oldVersion)\n            }\n        } else {\n            console.error(`Failed to fetch version file. Status: ${r.status}.`)\n        }\n    }\n\n    _notify(newVersion, oldVersion) {\n        console.info(`New software version detected: ${oldVersion} => ${newVersion}`)\n        this.bus.emit(EventTypes.NewViewerVersion, {newVersion, oldVersion})\n    }\n}","<template>\n    <div class=\"panel\">\n        <div>New version is available</div>\n        <div class=\"details\">\n            <span class=\"old-version\">{{ oldVersion }}</span>\n            <font-awesome-icon icon=\"fa-solid fa-arrow-right\" />\n            <span class=\"new-version\">{{ newVersion }}</span>\n            <button @click=\"reload\" class=\"reload-button\">\n                Reload the page\n                <font-awesome-icon icon=\"fa-solid fa-rotate-right\" />\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'NewVersionPanel',\n    props: [\n        'newVersion', 'oldVersion'\n    ],\n    data() {\n        return {\n        }\n    },\n    methods: {\n        reload() {\n            document.location.reload(true)\n        }\n    },\n    mounted() {\n    },\n    beforeUnmount() {\n    }\n}\n\n</script>\n\n<style scoped>\n.panel {\n    border-radius: 5px;\n    border: 1px solid #097a7b;\n    background: black;\n    color: turquoise;\n    padding: 10px;\n    font-size: 16pt;\n    position: absolute;\n    top: 10px;\n    left: 10px;\n}\n\n.details {\n    font-size: 13pt;\n}\n\n.reload-button {\n    border-color: #ffd278;\n    color: #ffd278;\n}\n\n.old-version {\n    margin-right: 5pt;\n    color: #aaa;\n}\n\n.new-version {\n    margin-left: 5pt;\n}\n\n</style>","import { render } from \"./NewVersionPanel.vue?vue&type=template&id=2a579dc4&scoped=true\"\nimport script from \"./NewVersionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./NewVersionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./NewVersionPanel.vue?vue&type=style&index=0&id=2a579dc4&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2a579dc4\"]])\n\nexport default __exports__","import { render } from \"./MainScreen.vue?vue&type=template&id=2465a482\"\nimport script from \"./MainScreen.vue?vue&type=script&lang=js\"\nexport * from \"./MainScreen.vue?vue&type=script&lang=js\"\n\nimport \"./MainScreen.vue?vue&type=style&index=0&id=2465a482&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4e003472\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4e003472&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue'\nimport App from './App.vue'\nimport CameraControls from \"camera-controls\";\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\n\n/* import specific icons */\nimport {\n    faCopy, faArrowDownUpLock, faArrowRight,\n    faRotateRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport * as THREE from 'three';\nimport {emitter} from \"@/helpers/EventTypes\";\n\nimport { plugin as VueTippy } from 'vue-tippy'\nimport 'tippy.js/dist/tippy.css' // optional for styling\nimport 'tippy.js/themes/translucent.css'\nimport {isWebGL2Supported} from \"webgl-detector\";\n\nif(!isWebGL2Supported()) {\n    alert('WebGL is not supported!')\n}\n\nCameraControls.install({THREE});\n\n/* add icons to the library */\nlibrary.add(\n    faCopy,\n    faArrowRight,\n    faArrowDownUpLock,\n    faRotateRight\n)\n\nconst app = createApp(App);\napp.component('font-awesome-icon', FontAwesomeIcon)\napp.use(VueTippy, {\n    directive: \"tippy\", // => v-tippy\n    component: 'tippy', // => <tippy/>\n    flipDuration: 0,\n    defaultProps: {\n        placement: 'top'\n    },\n    popperOptions: {\n        modifiers: {\n            preventOverflow: {\n                enabled: false\n            }\n        }\n    }\n})\napp.config.globalProperties.emitter = emitter;\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthorviz\"] = self[\"webpackChunkthorviz\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8763); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_MainScreen","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","ref","tabindex","onKeypress","$options","onMousemove","onMouseenter","onMouseleave","onClick","_createVNode","_component_FPSCounter","$data","_component_LoadingIndicator","key","_component_ControlPanel","onModeSelected","newDetected","_component_NewVersionPanel","oldVersion","newVersion","_hoisted_3","_KeepAlive","_component_NodeDetailsWindow","node","onClose","IsProduction","process","console","log","Config","DataSource","THORNodeURL","MidgardURL","Nodes","PollPeriod","LastBlock","Network","ReactRandomDelay","NodeJuggler","Enabled","Font","Main","Effects","Bloom","Strength","Threshold","Radius","Controls","Camera","Distance","Min","Max","Start","AzimuthAngleLimit","PolarAngleLimit","MouseMoveStrength","Animation","Duration","DistanceWhenZoomed","Shift","X","Scene","DebugMode","Background","Sky","SkyBox","SkyBoxExt","NodeObject","Simple","PlaneScale","MinRadius","MaxScale","MinScale","ScaleFactor","RadiusFactor","ReactStatus","DurationIn","DurationOut","BloatScale","ReactSlash","Force","RedDuration","Rust","MaxLagToFullRust","MaxStrength","Globe","Details","NodeElevation","TextureMap","Clouds","ElevationScale","Opacity","Texture","Atmosphere","InnerAtmosphere","Physics","BaseForce","RepelForce","Startup","SimulationSteps","DeltaTime","BaseFriction","HoverFriction","MaxSpeedSq","Math","pow","Attractor","Flat","DeltaZ","Debug","ShowFPS","Renderer","LogZBuffer","SoftwareVersion","Interval","Colors","LightningBlue","YggdrasilGreen","MidgardTurqoise","NightBlack","Number","toFixed","countObjects","parent","numOfMeshes","traverse","clearObject","obj","remove","apply","children","longLatTo3D","long","lat","r","phi","PI","theta","spherical","THREE","setFromSpherical","distanceXY","v1","v2","dx","x","dy","y","sqrt","EventTypes","FullyLoaded","DataSourceTick","Activity","NewViewerVersion","NodeChurnUpdate","emitter","mitt","dbgEmmitAfter","name","after_ms","setTimeout","emit","dbgSimulateLoaded","props","updatePeriod","type","default","data","fps","objCount","activityIndicator","lastUpdateTime","methods","pokeActivity","this","update","delta","scene","Date","now","unmounted","off","mounted","on","__exports__","defaultValue","undefined","dec2hex","dec","toString","padStart","Random","static","max","floor","random","min","array","index","getRandomInt","length","splice","xMin","xMax","yMin","yMax","zMin","zMax","Vector3","getRandomFloat","cx","cy","phase","cos","sin","ceil","len","arr","Uint8Array","window","crypto","getRandomValues","Array","from","join","Section","constructor","p1","p2","whichSide","A","B","C","D","sign","center","nearestPoint","dot","len_sq","param","pDistance","xo","yo","nearestPoint1","Util","group","sumX","_","item","sumY","p3","pt","threePts","v3","d1","_signHelper","d2","d3","hasNeg","hasPos","shortNumber","mantissa","postFix","numbro","format","average","RUNE","shortRune","smoothStep","value","PhysicalObject","mass","force","velocity","friction","attractors","dt","forEach","attr","applyForce","acceleration","multiplyScalar","copy","clone","add","clamp","lengthSq","setLength","realObject","position","nullifyForce","set","radius","applyForceTo","direction","repel","physObj","forceMult","thisPos","otherPos","d","distanceTo","minDistance","lineDir","sub","normalize","negate","boundingBox","minX","minY","maxX","maxY","shootOut","o","createBillboardMaterial","baseMaterial","opts","createDerivedMaterial","Object","assign","vertexMainOutro","EVENT_TYPE","freeze","CREATE","DESTROY","SLASH","IP_ADDRESS","STATUS","VERSION","FORCED_LEAVE","REQUESTED_LEAVE","AWARD","BOND_CHANGE","OBSERVE_CHAIN","ACTIVE_BLOCK_HEIGHT","NodeEvent","prevNode","currValue","prevValue","nodeSet","isTramp","address","addr","SEC_PER_BLOCK","THOR_DECIMAL","THOR_DECIMAL_INV","thorToFloat","parseFloat","NodeInfo","status","jail","bond_providers","preflight_status","node_address","bond","total_bond","activeBlockHeight","active_block_height","bondAddress","node_operator_address","statusSince","status_since","requestedToLeave","requested_to_leave","forcedToLeave","forced_to_leave","leaveHeight","leave_height","IPAddress","ip_address","version","slashPoints","slash_points","releaseHeight","release_height","reason","currentAward","current_award","observeChains","chain","height","preflightStatus","code","bondProviders","fee","providers","bond_address","push","shortAddress","substring","IPInfo","flag","isActive","NodeStatus","Active","isStandby","Standby","Ready","Whitelisted","Disabled","Unknown","noCfg","geomSize","geometry","simpleGeometry","SlashColor","NormalLabelZ","CirclePackFactor","super","normalizedBond","_makeSphere","_makeLabel","_reactingToSlash","_elevated","elevated","v","Boolean","material","uniforms","saturation","uniformsNeedUpdate","_getSphereColor","color","st","getRandomSample","mesh","_makeSimpleSphere","_makeCoolSphere","renderOrder","scale","calculateScale","setScalar","z","randFloat","currentColor","_makeMaterial","initRust","vertexShader","StdVertexShader","fragmentShader","FragShader1","transparent","depthTest","depthWrite","nameTextObj","Text","text","slice","font","fontWeight","fontSize","anchorX","anchorY","outlineWidth","sync","MeshBasicMaterial","labelObj","dispose","nodeObjList","sum_r2","nodeObj","time","updateFromCamera","camera","dir","react","event","reactChain","reactSlash","reactStatusChange","reactVersion","_updateRust","chainReactionVelocity","pos","perp","cross","_animateTransitionShininess","slashForce","_animateScale","savedColor","newStatus","rust","_getRust","rustCfg","getChainHeightLagAllSeconds","maxRustLag","a","targetScaleOfNormal","durationIn","durationOut","easing","TWEEN","normalScale","targetScale","to","start","transitionShininess","onComplete","Simulation","_objects","repelForce","rBush","RBush","repelEnabled","getByName","addObject","existing","warn","removeObject","error","_repelForceCalculation","vicinity","search","rBushLeaf","_updateObject","isNaN","load","doNSteps","n","step","physicalObjects","objectPositions","allNames","clear","size","entries","TitleLabel3D","rotAngle","billboard","t","label","textAlign","rotateX","animDuration","animDistance","easeType","updateText","newText","c","opacity","fillOpacity","animateIn","animateOut","kill","expandedDuration","ModeBase","active","isFlat","_labelsHash","handleObject","reactEvent","nodes","makeLabel","rotation","bb","moveIfExists","generateId","findLabelByKey","titleLabel","onEnter","_triggerOnEnter","b","onLeave","_triggerOnLeave","clearLabels","killLabelByKey","constCoeff","linearCoeff","quadraticCoeff","relaxRadius","applyForceToDistance","distance","toPosition","fromPosition","f","getForce","magnitude","objPosition","infiniteRadius","INFINITE","AttractorFlat","squishZ","phyObj","zDist","fZ","abs","AttractorShape","triangles","centerOf","allSectors","sectors","triangle","p","relaxed","tri","pointInTriangle","nearestSector","sector","THORChainLogoShape","transformed","original","pts","ModeNormal","_circleRadius","tcAttractor","NodeChurnTimer","ANY_STATUS","ModeStatus","_sideDistance","_standbyAttractors","nodeChurnTimer","visible","bestAttractors","statusesCounted","standbyCount","activeCount","otherCount","VirtualObject","attractor","_radius","fric","CirclePack","boundRadius","iterSteps","simulation","metaAttractor","addCircle","arrangeAroundCenter","deltaAngle","angle","pack","steps","getResults","results","IPAddressInfo","j","ipAddress","countryCode","country","city","latitude","longitude","providerName","getFlagEmoji","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","UNKNOWN","IPAddressInfoLoader","expireMinutes","_key","url","ip","async","ips","axios","info","loadFromCache","lscache","saveToCache","ipAddresses","requestList","addressChunks","ipListChunk","chunkInfoDic","loadFromService","replace","component","ModeProvider","_attractorBanish","circlePacker","_transferAttractorsPositionFromPacker","groupName","refineProviderName","objList","_createProviderAttractors","mostPopularProvider","mostPopularCount","nativeName","provider","list","sortedEntries","pair","items","_makeAttractor","_makeLabels","circleRadius","estimateRadiusOfGroup","_makeLabelForGroup","countNodes","mostPopularName","packedPositions","isGarbage","Version","components","parseInt","isInvalid","greater","less","equal","inc","xLimit","yLimit","asInt","rawVersions","fromString","versions","loadVersions","nodeObjects","path","activePath","activeNodes","no","activeVersions","getVersionSet","maxActiveVersion","maximumVersion","minActiveVersion","minimumVersion","otherActiveVersions","otherActiveVersionsStr","nodeObject","versionStr","target","comment","isLatest","objects","mostPopular","maxVersion","ModeVersion","_attractorsByKey","_attractorsByVersion","_previousKeys","_versionDist","_packAttractorPositions","getSemanticVersionsDistribution","gap","radAttr","nGroups","radSum","versionDesc","e","affectedKeys","desc","_putLabel","keysToRemove","tag","ModeBond","nameToAttractor","_noBondAttractor","_positionateOnSpiral","xScale","deltaRadius","deltaDeltaRadius","deltaDeltaAngle","i","_addAttractor","_positionateOnGrid","columns","rows","gapSize","width","halfWidth","halfHeight","col","row","ModeGeo","_banishAttractor","_nameToAttractor","_coordToAttractor","_createAttractorsStacked","_makeGlobe","_putInGlobe","_destroyGlobe","globeMesh","textureLoader","globeConfig","AtmosphereFragmentShader","globeTexture","materialClouds","side","blending","cloudMesh","cloudMesh2","g","_createAttractors","attractorHere","position3d","_coordToStack","stackObj","stack","basicRadius","sortedStack","NodeGroupModes","Normal","Status","Provider","Bond","Geo","NodeGroup","holder","_currentIdent","_modeNormal","_modeStatus","_modeProvider","_modeVersion","_modeBond","_modeGeo","_selector","_selectedModeHandler","mode","genIdent","_placeNodeObject","randomOnCircle","createNewNode","ident","destroyNode","nodeAddress","newMode","_mode","delay","otherObj","values","setElevatedNode","isCurrentModeFlat","NodeTracker","prevNodeSet","currNodeSet","prev","curr","extractEvents","events","addEvent","k","addedNodeAddresses","nameSet","byAddress","removeNodeAddresses","EVENT_TYPES","keyTypeTable","commonNodes","currNode","keys","keysChanged","eventType","DebugNodeJuggler","period","tick","enabled","juggleStatus","juggleVersion","memorizeVersions","handleNodes","_juggleNodes","_juggleNodesStatus","_juggleNodesVersion","nodesIn","getRandomIntRange","nodesOut","filteredByStatus","sampleRandomly","setStatusAll","_nextVersion","vString","nUpgrade","that","TYPICAL_BLOCK_TIME","ETH","BTC","BCH","LTC","BNB","THOR","DOGE","TERRA","GAIA","AVAX","NodeSet","calculate","total","_nodesWithNames","totalBond","maxSlashNode","trampCount","maxAgeNode","ranks","_makeRanking","slash","age","award","topHeights","calculateTopBlockHeight","topVersion","calculateTopVersion","criteria","order","sortedArr","names","fromEntries","findByAddress","sortedNodes","attribute","asc","sortedByBond","sortedByAge","bondPercentOfTotal","_calculateTopBlockOneChain","nMin","heights","heightSorted","h","sort","reverse","occurrences","allChains","Set","counters","currentVersion","estimateTimestampAtBlock","topThorHeight","blockDiff","getChainHeightLagBlocks","getChainHeightLagSeconds","mult","sum","lag","avg","URLDataSource","baseUrl","_isRunning","_timer","callback","ipAddressLoader","run","_tick","then","setInterval","stop","clearInterval","isRunning","rawData","headers","dataProcess","_load","result","NodeDataSource","json","ipInfoDic","loadBunch","LastBlockDataSource","chainHeights","chainItem","NetworkDataSource","nextChurnHeight","DataStorage","lastBlock","lastNodes","MainScene","prevNodes","nodeGroup","_firstTime","_runDataSource","_fullyLoaded","_nodeJuggler","_dataSources","cfg","nodeDataSource","handleData","bind","lastBlockSource","networkSource","networkInfo","tracker","source","findNodeByAddress","pick","defaultQuad","defaultVertexShader","defaultFragmentShader","ScreenQuad","top","left","texture","uTexture","uSize","frustumCulled","_pixels","_componentSetters","setWidth","setHeight","setTop","setLeft","_components","screenSize","setSize","setOffset","setScreenSize","pi","call","w","BackgroundBase","install","quad","BgShader","_Fragment","capitalizeFirstLetter","string","charAt","emits","selectedMode","activeOnly","computed","modes","isButtonSelectedClass","modeName","setSceneMode","$emit","location","hash","setModeFromHash","content","_hoisted_25","_Transition","$props","onKeyup","_component_font_awesome_icon","icon","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","href","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","title","STATUS_PROPS","emoji","chainEntries","hasIP","statusEmoji","nodeStatusClass","timestamp","toISOString","isOldest","ageRank","round","nodeBond","nodeBondRank","nodeBondPercent","ipAddressInfoLink","slashPointsRank","chainLag","isUpToDataVersion","copyNodeAddress","close","$refs","modal","focus","CameraController","domElement","_createCamera","_createCameraControl","_animating","controlsEnabled","reset","controls","projectToScreen","worldVector","updateProjectionMatrix","project","innerWidth","innerHeight","CameraControls","dragToOffset","maxDistance","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","cameraInspectsObject","onResize","canvas","clientWidth","clientHeight","aspect","_getEndQuaternion","lookAtThis","currPos","currQ","quaternion","lookAt","endQuaternion","cameraLookAtNode","flat","oldCameraPos","oldCameraQuaternion","targetLookAt","deltaVector","restoreCamera","animTime","onUpdate","dots","timer","beforeUnmount","TrailRenderer","orientToMovement","nodeCenters","lastNodeCenter","currentNodeCenter","lastOrientationDir","nodeIDs","currentLength","currentEnd","currentNodeID","MaxHeadVertices","LocalOrientationTangent","LocalOrientationDirection","LocalHeadOrigin","PositionComponentCount","UVComponentCount","IndicesPerFace","FacesPerQuad","Shader","BaseVertexVars","TexturedVertexVars","BaseFragmentVars","TexturedFragmentVars","VertexShaderCore","BaseVertexShader","BaseFragmentShader","TexturedVertexShader","TexturedFragmentShader","createMaterial","customUniforms","trailLength","verticesPerNode","minID","maxID","dragTexture","maxTrailLength","textureTileFactor","headColor","tailColor","alphaTest","blendSrc","blendDst","blendEquation","createBaseMaterial","createTexturedMaterial","prototype","initialize","localHeadWidth","localHeadGeometry","targetObject","deactivate","destroyMesh","initializeLocalHeadGeometry","initializeGeometry","initializeMesh","VerticesPerNode","vertex","vertexCopy","FacesPerNode","FaceIndicesPerNode","vertexCount","faceCount","Float32Array","nodeVertexIDs","positions","uvs","indices","Uint32Array","nodeIDAttribute","setUsage","setAttribute","nodeVertexIDAttribute","nodeCenterAttribute","positionAttribute","uvAttribute","indexAttribute","setIndex","zeroVertices","getAttribute","needsUpdate","updateRange","count","zeroIndices","getIndex","formInitialFaces","connectNodes","dynamic","matrixAutoUpdate","setDrawRange","updateUniforms","advance","tempMatrix4","updateMatrixWorld","matrixWorld","advanceWithTransform","advanceWithPositionAndOrientation","nextPosition","orientationTangent","advanceGeometry","tangent","transformMatrix","positionAndOrientation","nextIndex","updateNodePositionsFromTransformMatrix","updateNodePositionsFromOrientationTangent","disconnectIndex","disconnectNodes","updateNodeID","updateHead","nodeIndex","id","baseIndex","offset","updateNodeCenter","nodeCenter","tempQuaternion","tempOffset","tempLocalHeadGeometry","setFromUnitVectors","applyQuaternion","positionIndex","transformedHeadVertex","tempMatrix3","tempPosition","worldOrientation","tempDirection","getMatrix3FromMatrix4","matrix3","matrix4","elements","applyMatrix4","applyMatrix3","returnObj","srcNodeIndex","destNodeIndex","srcVertexIndex","destVertexIndex","faceIndex","activate","TrailTesting","baseTrailMaterial","circlePoints","makeCircle","makeTrailTarget","makeTrail","_makeFlyState","trail","trailTarget","updateColors","trialColor","lastTrailUpdateTime","_t","lastDirection","lastTargetPosition","lastRotationMatrix","currentTargetPosition","currentDirection","baseForward","tempUp","tempRotationMatrix","tempTranslationMatrix","areaScale","trailGrowTime","scaledTime","crossVectors","identity","angleTo","makeRotationFromQuaternion","makeTranslation","multiply","matrix","twoPI","points","starShape","extrusionSettings","depth","curveSegments","bevelThickness","bevelSize","bevelEnabled","extrudeMaterial","starGeometry","trailTargetMaterial","shininess","specular","flatShading","receiveShadow","TrailTestScene","cameraController","_makeSomeLight","trailTester","ambientLight","NodeObjTestScene","repeat","Infinity","yoyo","zoom","SoftwareVersionTracker","bus","checkInterval","_checkInterval","_url","_version","trim","_notify","reload","document","NewVersionPanel","LoadingIndicator","NodeDetailsWindow","ControlPanel","FPSCounter","isLoading","showFps","mouseEnterX","mouseEnterY","tickCounter","sceneMode","fullyLoaded","nodeDetailsVisible","nodeDetailsIsLeft","nodeToViewDetails","zoomedToNode","shallowRef","onKeyDown","choseWindowSide","mouseEvent","clientX","onMouseMove","clientY","rotate","pickIntersection","_pickObject","pickedName","object","onMouseEnter","onMouseLeave","thoughtful","raycaster","pickPosition","getCanvasRelativePosition","setFromCamera","intersectedObjects","intersectObjects","namedObjects","pickedObject","startsWith","_onPickNodeObject","rect","getBoundingClientRect","resizeRendererToDisplaySize","renderer","needResize","composer","_width","_height","bloomPass","bg","render","clock","getDelta","visibilityState","requestAnimationFrame","makeSkybox","makeRenderer","antialias","logarithmicDepthBuffer","devicePixelRatio","setPixelRatio","renderScene","RenderPass","EffectComposer","addPass","bloomCfg","UnrealBloomPass","buildScene","onFullyLoaded","onDataArrived","onCloseDetails","onNewVersion","versionTracker","MainScreen","created","preloading","preloadFont","characters","isWebGL2Supported","alert","library","faCopy","faArrowRight","faArrowDownUpLock","faRotateRight","app","createApp","App","FontAwesomeIcon","use","VueTippy","directive","flipDuration","defaultProps","placement","popperOptions","modifiers","preventOverflow","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","getter","__esModule","definition","defineProperty","enumerable","get","globalThis","Function","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}