{"version":3,"file":"js/app.a2aeb794.js","mappings":"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","sources":["webpack://thorviz/./src/App.vue","webpack://thorviz/./src/components/MainScreen.vue","webpack://thorviz/./src/config.js","webpack://thorviz/./src/components/parts/FPSCounter.vue","webpack://thorviz/./src/helpers/3D.js","webpack://thorviz/./src/components/parts/FPSCounter.vue?9287","webpack://thorviz/./src/helpers/MathUtil.js","webpack://thorviz/./src/helpers/physics/PhysicalObject.js","webpack://thorviz/./src/visual/shader/standard.vert","webpack://thorviz/./src/visual/shader/node_obj_2.frag","webpack://thorviz/./src/helpers/NodeEvent.js","webpack://thorviz/./src/helpers/NodeTracker.js","webpack://thorviz/./src/visual/NodeObject.js","webpack://thorviz/./src/helpers/physics/Simulation.js","webpack://thorviz/./src/visual/TitleLabel3D.js","webpack://thorviz/./src/visual/modes/ModeBase.js","webpack://thorviz/./src/helpers/physics/Attractor.js","webpack://thorviz/./src/helpers/physics/AttractorShape.js","webpack://thorviz/./src/helpers/physics/TCLogoShape.js","webpack://thorviz/./src/visual/modes/ModeNormal.js","webpack://thorviz/./src/visual/modes/ModeStatus.js","webpack://thorviz/./src/helpers/physics/CirclePack.js","webpack://thorviz/./src/helpers/data/IPAddressInfo.js","webpack://thorviz/./src/visual/modes/ModeProvider.js","webpack://thorviz/./src/visual/modes/ModeVersion.js","webpack://thorviz/./src/visual/NodeGroup.js","webpack://thorviz/./src/helpers/data/URLDataSource.js","webpack://thorviz/./src/visual/MainScene.js","webpack://thorviz/./src/visual/shader/bg_1.frag","webpack://thorviz/./src/visual/ScreenQuad.js","webpack://thorviz/./src/visual/Background.js","webpack://thorviz/./src/components/MainScreen.vue?8f35","webpack://thorviz/./src/App.vue?7ccd","webpack://thorviz/./src/main.js","webpack://thorviz/webpack/bootstrap","webpack://thorviz/webpack/runtime/chunk loaded","webpack://thorviz/webpack/runtime/compat get default export","webpack://thorviz/webpack/runtime/define property getters","webpack://thorviz/webpack/runtime/global","webpack://thorviz/webpack/runtime/hasOwnProperty shorthand","webpack://thorviz/webpack/runtime/make namespace object","webpack://thorviz/webpack/runtime/node module decorator","webpack://thorviz/webpack/runtime/jsonp chunk loading","webpack://thorviz/webpack/startup"],"sourcesContent":["<template>\n    <!--    <THORWorld msg=\"Hello\"/>-->\n    <MainScreen></MainScreen>\n</template>\n\n<script>\n// import THORWorld from \"@/components/THORWorld\";\nimport MainScreen from \"@/components/MainScreen\";\nimport {preloadFont} from \"troika-three-text\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'App',\n    components: {\n        MainScreen,\n        // THORWorld\n    },\n    data() {\n        return {}\n    },\n    computed: {},\n    created() {\n        document.title = 'THORViz'\n        this.preloading()\n    },\n    methods: {\n        preloading() {\n            preloadFont(\n                {\n                    font: Config.Font.Main,\n                    characters: 'abcdefghijklmnopqrstuvwxyz1234567890'\n                },\n                () => {\n                    console.log('font loading done')\n                }\n            )\n        }\n    }\n}\n</script>\n\n<style>\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: normal;\n    src: local('Norse'), url('../public/fonts/Norse-KaWl.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: bold;\n    src: local('Norse-Bold'), url('../public/fonts/NorseBold-2Kge.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'EXO2';\n    src: url('../public/fonts/Exo2-VariableFont_wght.ttf') format('truetype');\n}\n\nhtml, body {\n    margin: 0;\n    height: 100%;\n    font-family: 'EXO2', monospace;\n}\n\ncanvas {\n    display: block;\n}\n\n</style>\n","<template>\n    <div class=\"canvas-holder\">\n        <canvas\n            class=\"canvas-full\"\n            ref=\"canvas\"\n            tabindex=\"1\"\n            @keydown=\"onKeyDown\"\n            @mousemove=\"onMouseMove\"\n            @mouseenter=\"onMouseEnter\"\n            @mouseleave=\"onMouseLeave\">\n        </canvas>\n        <FPSCounter\n            v-show=\"showFps\"\n            ref=\"fps\"\n        >\n        </FPSCounter>\n        <div class=\"control-panel\">\n            <button @click=\"setSceneMode('normal')\" :class=\"isButtonSelectedClass('normal')\">NORMAL</button>\n            <button @click=\"setSceneMode('status')\" :class=\"isButtonSelectedClass('status')\">STATUS</button>\n            <button @click=\"setSceneMode('provider')\" :class=\"isButtonSelectedClass('provider')\">PROVIDER</button>\n            <button @click=\"setSceneMode('version')\" :class=\"isButtonSelectedClass('version')\">VERSION</button>\n            <!--            <button @click=\"setSceneMode('bond')\">BOND</button>-->\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport \"@/css/common.css\"\nimport * as THREE from \"three\"\nimport {Config} from \"@/config\";\nimport CameraControls from \"camera-controls\";\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport {UnrealBloomPass} from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport FPSCounter from \"@/components/parts/FPSCounter\";\nimport {MainScene} from \"@/visual/MainScene\";\nimport TWEEN from \"tween\";\nimport {Background} from \"@/visual/Background\";\n// import {TrailTestScene} from \"@/visual/TrailTestScene\";\n\nexport default {\n    name: 'MainScreen',\n    components: {FPSCounter},\n    props: {},\n\n    data() {\n        return {\n            showFps: true,\n\n            nodes: [],\n            prevNodes: [],\n\n            mouseEnterX: 0,\n            mouseEnterY: 0,\n\n            sceneMode: 'normal',\n        }\n    },\n\n    methods: {\n        onKeyDown(event) {\n            if (event.code === 'KeyR') {\n                this.resetCamera()\n            } else if (event.code === 'KeyD') {\n                this.showFps = !this.showFps\n            } else if (event.code === 'KeyH') {\n                console.log('help?')\n            }\n        },\n\n        onMouseMove(event) {\n            const x = event.clientX\n            const y = event.clientY\n            if (!this.mouseEnterX) {\n                this.mouseEnterX = x\n                this.mouseEnterY = y\n                return\n            }\n            const scale = Config.Controls.Camera.MouseMoveStrength\n            const dx = this.mouseEnterX - x\n            const dy = this.mouseEnterY - y\n            this.mouseEnterX = x\n            this.mouseEnterY = y\n            this.controls.rotate(dx * scale, dy * scale)\n        },\n\n        onMouseEnter(event) {\n            this.mouseEnterX = event.clientX\n            this.mouseEnterY = event.clientY\n        },\n\n        onMouseLeave() {\n        },\n\n        resetCamera() {\n            this.controls.reset()\n        },\n\n        resizeRendererToDisplaySize() {\n            const renderer = this.renderer\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n\n            this.camera.aspect = width / height;\n            this.camera.updateProjectionMatrix();\n\n            const needResize = this.composer._width !== width || this.composer._height !== height;\n            if (needResize) {\n                renderer.setSize(width, height, false);\n                if (this.bloomPass) {\n                    this.bloomPass.setSize(width, height);\n                }\n                this.composer.setSize(width, height);\n                if(this.bg) {\n                    this.bg.setSize(width, height)\n                }\n            }\n\n            return needResize;\n        },\n\n        render() {\n            this.resizeRendererToDisplaySize(this.renderer)\n\n            const delta = this.clock.getDelta();\n            this.$refs.fps.update(delta, this.scene)\n            this.controls.update(delta);\n            this.content.update(delta)\n\n            this.bg.update(delta);\n\n            TWEEN.update()\n\n            this.composer.render(delta)\n\n            requestAnimationFrame(this.render);\n        },\n\n        createCamera() {\n            this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight,\n                0.001, Config.Controls.Camera.Distance.Max * 2);\n            // this.camera = new THREE.OrthographicCamera()\n            this.camera.position.z = Config.Controls.Camera.Distance.Start\n        },\n\n        createCameraControl() {\n            const controls = this.controls = new CameraControls(this.camera, this.renderer.domElement);\n            const cfg = Config.Controls.Camera\n\n            controls.dragToOffset = true\n            controls.minDistance = cfg.Distance.Min\n            controls.maxDistance = cfg.Distance.Max\n            this.camera.position.z = cfg.Distance.Start\n\n            controls.minAzimuthAngle = THREE.MathUtils.degToRad(-cfg.AzimuthAngleLimit)\n            controls.maxAzimuthAngle = THREE.MathUtils.degToRad(cfg.AzimuthAngleLimit)\n\n            controls.minPolarAngle = THREE.MathUtils.degToRad(-cfg.PolarAngleLimit + 90)\n            controls.maxPolarAngle = THREE.MathUtils.degToRad(cfg.PolarAngleLimit + 90)\n\n            controls.update(0)\n        },\n\n        makeSkybox() {\n            // const baseURL = Config.Scene.Sky.SkyBox\n            // const ext = Config.Scene.Sky.SkyBoxExt\n            //\n            // const urls = _.map([\n            //     `right.${ext}`, `left.${ext}`,\n            //     `top.${ext}`, `bottom.${ext}`,\n            //     `front.${ext}`, `back.${ext}`\n            // ], (name) => `${baseURL}/${name}`);\n            //\n            // this.scene.background = new THREE.CubeTextureLoader().load(urls)\n            this.bg = new Background(this.scene)\n            this.bg.install()\n        },\n\n        makeRenderer(canvas) {\n            let renderer = this.renderer = new THREE.WebGLRenderer({\n                canvas,\n                antialias: false,\n                logarithmicDepthBuffer: true,\n            });\n\n            if (devicePixelRatio) {\n                console.log(`Renderer: Setting devicePixelRatio = ${devicePixelRatio}.`)\n                renderer.setPixelRatio(devicePixelRatio)\n            }\n\n            const renderScene = new RenderPass(this.scene, this.camera);\n\n            this.composer = new EffectComposer(renderer);\n            this.composer.addPass(renderScene);\n\n            const bloomCfg = Config.Effects.Bloom\n            if (bloomCfg.Enabled) {\n                this.bloomPass = new UnrealBloomPass(\n                    new THREE.Vector2(window.innerWidth, window.innerHeight),\n                    bloomCfg.Strength,\n                    bloomCfg.Radius,\n                    bloomCfg.Threshold)\n                this.composer.addPass(this.bloomPass);\n            }\n        },\n\n        buildScene() {\n            this.scene.add(this.camera)\n            this.makeSkybox()\n\n            this.content = new MainScene(this.scene, this)\n            // this.content = new TrailTestScene(this.scene, this)\n        },\n\n        setSceneMode(mode) {\n            this.sceneMode = mode\n            if (this.content.nodeGroup) {\n                this.content.nodeGroup.mode = mode\n            }\n        },\n\n        isButtonSelectedClass(modeName) {\n            return {\n                'button-selected': this.sceneMode === modeName\n            }\n        },\n\n        pokeActivity() {\n            this.$refs.fps.pokeActivity()\n        }\n    },\n\n    mounted() {\n        this.canvas = this.$refs.canvas\n\n        this.clock = new THREE.Clock()\n        this.scene = new THREE.Scene()\n\n        this.createCamera(this.canvas)\n        this.makeRenderer(this.canvas)\n        this.createCameraControl()\n        this.resizeRendererToDisplaySize()\n        this.buildScene()\n\n        requestAnimationFrame(this.render);\n    },\n\n    unmounted() {\n        this.content.dispose()\n        this.controls.dispose()\n    }\n}\n\n</script>\n\n<style>\n\n.canvas-full {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    outline: none;\n}\n\n.canvas-holder {\n    width: 100%;\n    height: 100%;\n}\n\n.control-panel {\n    position: absolute;\n    bottom: 4px;\n    right: 4px;\n}\n\n.button-selected {\n    border-width: 2px;\n    opacity: 1.0;\n}\n\n</style>\n","const Live = process.env.NODE_ENV !== 'development'\n\nexport const Config = {\n    DataSource: {\n        NodesURL: (Live ?\n                'https://thornode.ninerealms.com/thorchain/nodes' :\n                'http://localhost:8080/data/samplenodes.json'),\n\n        PollPeriod: 3, // sec\n        ReactRandomDelay: 2.5, // sec\n    },\n    Font: {\n        // Main: 'fonts/NorseBold-2Kge.otf'\n        Main: 'fonts/Exo2-VariableFont_wght.ttf'\n    },\n    Effects: {\n        Bloom: {\n            Enabled: true,\n            Strength: 0.62,\n            Threshold: 0.1,\n            Radius: 0.5,\n        }\n    },\n    Controls: {\n        Camera: {\n            Distance: {\n                Min: 800,\n                Max: 2500,\n                Start: 1800,\n            },\n            AzimuthAngleLimit: 30,\n            PolarAngleLimit: 30,\n            MouseMoveStrength: 0.0002\n        },\n    },\n    Scene: {\n        Sky: {\n            SkyBox: '/texture/skybox/star',\n            SkyBoxExt: 'jpg',\n        },\n        NodeObject: {\n            PlaceScale: 1.2,\n            MaxScale: 84.0,\n            MinScale: 20.0,\n        }\n    },\n    Physics: {\n        BaseForce: 1500.0,\n        RepelForce: 200.0,\n        Startup: {\n            SimulationSteps: 400,\n            DeltaTime: 0.1\n        },\n    },\n}\n\nexport const Colors = {\n    LightningBlue: 0x00CCFF,\n    YggdrasilGreen: 0x33FF99,\n    MidgardTurqoise: 0x23DCC8,\n    NightBlack: 0x101921\n}\n","<template>\n    <div class=\"fps-counter\">\n        <span><strong>{{ Number(fps).toFixed(2) }}</strong> FPS, {{ objCount }} objects</span>\n        <span class=\"activity\" v-show=\"activityIndicator\">•</span>\n    </div>\n</template>\n\n<script>\n\nimport {countObjects} from \"@/helpers/3D\";\n\nexport default {\n    name: 'FPSCounter',\n    props: {\n        updatePeriod: {\n            type: Number,\n            default: 1.0\n        }\n    },\n    data() {\n        return {\n            fps: 0.0,\n            objCount: 0,\n            activityIndicator: false,\n            lastUpdateTime: 0.0\n        }\n    },\n    methods: {\n        pokeActivity() {\n            this.activityIndicator = true\n            setTimeout(() => {\n                this.activityIndicator = false\n            }, 100)\n        },\n\n        update(delta, scene) {\n            if (delta > 0 && +Date.now() - this.updatePeriod * 1000 > this.lastUpdateTime) {\n                this.fps = 1.0 / delta\n                this.objCount = countObjects(scene)\n                this.lastUpdateTime = +Date.now()\n            }\n        },\n    }\n}\n\n</script>\n\n<style scoped>\n\n.fps-counter {\n    text-align: left;\n    font-size: 14pt;\n    color: whitesmoke;\n    position: absolute;\n    margin: 10px;\n    left: 0;\n    top: 0;\n}\n</style>","export function countObjects(parent) {\n    let numOfMeshes = 0;\n    parent.traverse(function () {\n        numOfMeshes++;\n    });\n    return numOfMeshes\n}\n\nexport function clearObject(obj) {\n    if(obj) {\n        obj.remove.apply(obj, obj.children);\n    }\n}\n","import { render } from \"./FPSCounter.vue?vue&type=template&id=590dbc21&scoped=true\"\nimport script from \"./FPSCounter.vue?vue&type=script&lang=js\"\nexport * from \"./FPSCounter.vue?vue&type=script&lang=js\"\n\nimport \"./FPSCounter.vue?vue&type=style&index=0&id=590dbc21&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-590dbc21\"]])\n\nexport default __exports__","import {Vector3} from \"three\";\nimport _ from \"lodash\";\n\nexport function defaultValue(x, defaultValue) {\n    return x === undefined ? defaultValue : x\n}\n\n\nexport class Random {\n    static getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    static getRandomFloat(min, max) {\n        return Math.random() * (max - min) + min\n    }\n\n    static getRandomSample(array) {\n        if (!array) {\n            return null\n        }\n        const index = Random.getRandomInt(array.length)\n        return array[index]\n    }\n\n    static removeRandomItem(array) {\n        if (Math.random() > 0.5) {\n            const index = Random.getRandomInt(array.length)\n            array.splice(index, 1)\n        }\n        return array\n    }\n\n    static randomVector({xMin, xMax, yMin, yMax, zMin, zMax}) {\n        xMin = defaultValue(xMin, -10)\n        xMax = defaultValue(xMax, 10)\n        yMin = defaultValue(yMin, -10)\n        yMax = defaultValue(yMax, 10)\n        zMin = defaultValue(zMin, -10)\n        zMax = defaultValue(zMax, 10)\n\n        return new Vector3(\n            Random.getRandomFloat(xMin, xMax),\n            Random.getRandomFloat(yMin, yMax),\n            Random.getRandomFloat(zMin, zMax),\n        )\n    }\n\n    static randomOnCircle(r = 100, cx = 0, cy = 0) {\n        const phase = Random.getRandomFloat(0, 2 * Math.PI)\n        return new Vector3(\n            cx + r * Math.cos(phase),\n            cy + r * Math.sin(phase)\n        )\n    }\n}\n\nexport class Section {\n    constructor(p1, p2) {\n        this.p1 = p1\n        this.p2 = p2\n    }\n\n    get dx() {\n        return this.p2.x - this.p1.x\n    }\n\n    get dy() {\n        return this.p2.y - this.p1.y\n    }\n\n    whichSide(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n        return Math.sign(A * C - B * D);\n    }\n\n    get center() {\n        return {\n            x: 0.5 * (this.p1.x + this.p2.x),\n            y: 0.5 * (this.p1.y + this.p2.y)\n        }\n    }\n\n    nearestPoint(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n\n        const dot = A * C + B * D;\n        const len_sq = C * C + D * D;\n        let param = -1;\n        if (len_sq !== 0) {\n            param = dot / len_sq;\n        }\n\n        if (param < 0) {\n            x = this.p1.x\n            y = this.p1.y\n        } else if (param > 1) {\n            x = this.p2.x\n            y = this.p2.y\n        } else {\n            x = this.p1.x + param * C;\n            y = this.p1.y + param * D;\n        }\n        return {x, y}\n    }\n\n    pDistance(xo, yo) {\n        const nearestPoint1 = this.nearestPoint(xo, yo)\n        return new Section(nearestPoint1, {x: xo, y: yo}).length\n    }\n\n    get length() {\n        const dx = this.dx\n        const dy = this.dy\n        return Math.sqrt(dx * dx + dy * dy)\n    }\n}\n\nexport class Util {\n    static clamp(x, xMin, xMax) {\n        return Math.min(+xMax, Math.max(+xMin, +x))\n    }\n\n    static centerOf(group) {\n        if (!group || !group.length) {\n            return\n        }\n        let sumX = _.sumBy(group, item => item.x)\n        let sumY = _.sumBy(group, item => item.y)\n        return {\n            x: sumX / group.length,\n            y: sumY / group.length\n        }\n    }\n\n    static _signHelper(p1, p2, p3) {\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n    }\n\n    static pointInTriangle(pt, threePts) {\n        const [v1, v2, v3] = threePts\n        const d1 = Util._signHelper(pt, v1, v2);\n        const d2 = Util._signHelper(pt, v2, v3);\n        const d3 = Util._signHelper(pt, v3, v1);\n\n        const hasNeg = (d1 < 0) || (d2 < 0) || (d3 < 0);\n        const hasPos = (d1 > 0) || (d2 > 0) || (d3 > 0);\n\n        return !(hasNeg && hasPos);\n    }\n}\n\n\n","import {Vector3} from \"three\";\nimport {Util} from \"@/helpers/MathUtil\";\n\nexport class PhysicalObject {\n    constructor() {\n        this.mass = 1.0\n        this.force = new Vector3()\n        this.velocity = new Vector3()\n        this.friction = 0.0\n        this.attractors = []\n    }\n\n    update(dt) {\n        if(this.attractors.forEach) {\n            this.attractors.forEach(attr => attr.applyForce(this))\n        }\n\n        const acceleration = this.force.multiplyScalar(this.mass)\n        this.velocity.copy(this.velocity.clone().add(acceleration.multiplyScalar(dt)))\n        this.velocity.multiplyScalar(Util.clamp(1.0 - this.friction, 0.0, 1.0))\n        this.realObject.position.add(this.velocity.clone().multiplyScalar(dt))\n    }\n\n    nullifyForce() {\n        this.force.set(0.0, 0.0, 0.0)\n    }\n\n    get radius() {\n        return 1.0\n    }\n\n    applyForceTo(direction, force) {\n        this.force.add(direction.copy().multiplyScalar(force))\n    }\n\n    get realObject() {\n        return this\n    }\n\n    repel(physObj, forceMult = 100.0) {\n        if (physObj === this) {\n            return\n        }\n\n        const thisPos = this.realObject.position\n        const otherPos = physObj.realObject.position\n\n        const d = thisPos.distanceTo(otherPos)\n        const minDistance = (this.radius + physObj.radius)\n        if (d < minDistance) {\n            const lineDir = thisPos\n                .clone()\n                .sub(otherPos)\n                .normalize()\n                .multiplyScalar(forceMult)\n            this.force.add(lineDir)\n            physObj.force.add(lineDir.negate())\n        }\n    }\n}","export default \"varying vec2 vUv;\\n\\nvoid main()\\n{\\n    vUv = uv;\\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","export default \"// port from http://glslsandbox.com/e#8625.0 by Duke\\n// Fireball\\n// Awd\\n// @AlexWDunn\\n\\nuniform float time;\\nuniform float saturation;\\nuniform vec3 color;\\n\\nvarying vec2 vUv;\\n\\n#define saturate(oo) clamp(oo, 0.0, 1.0)\\n\\n// Quality Settings\\n#define MarchSteps 6\\n// Scene Settings\\n#define ExpPosition vec3(0.0)\\n#define Radius 2.0\\n#define Background vec4(0.0, 0.0, 0.0, 0.0)\\n// Noise Settings\\n#define NoiseSteps 1\\n#define NoiseAmplitude 0.06\\n//#define NoiseFrequency 4.0\\n#define NoiseFrequency 2.0\\n#define Animation vec3(0.0, -3.0, 0.5)\\n\\n// Colour Gradient\\n#define Color1 vec4(1.0, 1.0, 1.0, 1.0)\\n#define Color2 vec4(0.2, 0.8, 1.0, 1.0)\\n#define Color3 vec4(0.2, 0.03, 1.0, 1.0)\\n#define Color4 vec4(0.05, 0.02, 0.02, 0.3)\\n\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 permute(vec4 x) { return mod289(((x*34.0)+1.0)*x); }\\nvec4 taylorInvSqrt(vec4 r){ return 1.79284291400159 - 0.85373472095314 * r; }\\n\\nfloat snoise(vec3 v)\\n{\\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0);\\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n    // First corner\\n    vec3 i  = floor(v + dot(v, C.yyy));\\n    vec3 x0 = v - i + dot(i, C.xxx);\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min(g.xyz, l.zxy);\\n    vec3 i2 = max(g.xyz, l.zxy);\\n    vec3 x1 = x0 - i1 + C.xxx;\\n    vec3 x2 = x0 - i2 + C.yyy;// 2.0*C.x = 1/3 = C.y\\n    vec3 x3 = x0 - D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\\n    // Permutations\\n    i = mod289(i);\\n    vec4 p = permute(permute(permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n    float n_ = 0.142857142857;// 1.0/7.0\\n    vec3  ns = n_ * D.wyz - D.xzx;\\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);//  mod(p,7*7)\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_);// mod(j,N)\\n    vec4 x = x_ *ns.x + ns.yyyy;\\n    vec4 y = y_ *ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n    vec4 b0 = vec4(x.xy, y.xy);\\n    vec4 b1 = vec4(x.zw, y.zw);\\n    vec4 s0 = floor(b0) * 2.0 + 1.0;\\n    vec4 s1 = floor(b1) * 2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n    vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\\n    vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\\n    vec3 p0 = vec3(a0.xy, h.x);\\n    vec3 p1 = vec3(a0.zw, h.y);\\n    vec3 p2 = vec3(a1.xy, h.z);\\n    vec3 p3 = vec3(a1.zw, h.w);\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot(m*m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\\n}\\n\\nfloat Turbulence(vec3 position, float minFreq, float maxFreq, float qWidth)\\n{\\n    float value = 0.0;\\n    float cutoff = clamp(0.5/qWidth, 0.0, maxFreq);\\n    float fade;\\n    float fOut = minFreq;\\n    for (int i=NoiseSteps; i>=0; i--)\\n    {\\n        if (fOut >= 0.5 * cutoff) break;\\n        fOut *= 2.0;\\n        value += abs(snoise(position * fOut))/fOut;\\n    }\\n    fade = clamp(2.0 * (cutoff-fOut)/cutoff, 0.0, 1.0);\\n    value += fade * abs(snoise(position * fOut))/fOut;\\n    return 1.0-value;\\n}\\n\\nfloat SphereDist(vec3 position)\\n{\\n    return length(position - ExpPosition) - Radius;\\n}\\n\\nvec4 Shade(float distance)\\n{\\n    float c1 = clamp(distance*5.0 + 0.5, 0.0, 1.0);\\n    float c2 = clamp(distance*5.0, 0.0, 1.0);\\n    float c3 = clamp(distance*3.4 - 0.5, 0.0, 1.0);\\n\\n//    #define Color1 vec4(1.0, 1.0, 1.0, 1.0)   -- white\\n//    #define Color2 vec4(0.2, 0.8, 1.0, 1.0) --- green\\n//    #define Color3 vec4(0.2, 0.03, 1.0, 1.0)  -- blue\\n//    #define Color4 vec4(0.05, 0.02, 0.02, 0.3) -- black transparent\\n\\n    vec4 original = vec4(color, 1.0);\\n    vec4 a = mix(Color1, Color3, c1);\\n    vec4 b = mix(a, Color4, c2);\\n    return mix(original, b, c3);\\n}\\n\\n// Draws the scene\\nfloat RenderScene(vec3 position, out float distance)\\n{\\n    float noise = Turbulence(position * NoiseFrequency + Animation*time, 0.1, 1.5, 0.03) * NoiseAmplitude;\\n    noise = saturate(abs(noise));\\n    distance = SphereDist(position) - noise;\\n    return noise;\\n}\\n\\n// Basic ray marching method.\\nvec4 March(vec3 rayOrigin, vec3 rayStep)\\n{\\n    vec3 position = rayOrigin;\\n    float distance;\\n    float displacement;\\n    for (int step = MarchSteps; step >=0; --step)\\n    {\\n        displacement = RenderScene(position, distance);\\n        if (distance < 0.05) break;\\n        position += rayStep * distance;\\n    }\\n    return mix(Shade(displacement), Background, float(distance >= 0.5));\\n}\\n\\nbool IntersectSphere(vec3 ro, vec3 rd, vec3 pos, float radius, out vec3 intersectPoint)\\n{\\n    vec3 relDistance = (ro - pos);\\n    float b = dot(relDistance, rd);\\n    float c = dot(relDistance, relDistance) - radius*radius;\\n    float d = b*b - c;\\n    intersectPoint = ro + rd*(-b - sqrt(d));\\n    return d >= 0.0;\\n}\\n\\nvoid main()\\n{\\n    vec2 p = vUv * 2.0 - 1.0;\\n\\n    float rotx = 0.0;\\n    float roty = 0.0;\\n    float zoom = 4.2;\\n\\n    // camera\\n    vec3 ro = zoom * normalize(vec3(cos(roty), cos(rotx), sin(roty)));\\n    vec3 ww = normalize(vec3(0.0, 0.0, 0.0) - ro);\\n    vec3 uu = normalize(cross(vec3(0.0, 1.0, 0.0), ww));\\n    vec3 vv = normalize(cross(ww, uu));\\n    vec3 rd = normalize(p.x*uu + p.y*vv + 1.5*ww);\\n    vec4 col = Background;\\n    vec3 origin;\\n    if (IntersectSphere(ro, rd, ExpPosition, Radius + NoiseAmplitude*6.0, origin))\\n    {\\n        col = March(origin, rd);\\n    }\\n    gl_FragColor = col;\\n}\\n\";","const EVENT_TYPE = Object.freeze({\n    CREATE: 'create',\n    DESTROY: 'destroy',\n\n    SLASH: 'slash',\n    IP_ADDRESS: 'ip_address',\n    STATUS: 'status',\n    VERSION: 'version',\n    FORCED_LEAVE: 'forced_to_leave',\n    REQUESTED_LEAVE: 'requested_to_leave',\n    AWARD: 'current_award',\n    BOND_CHANGE: 'bond',\n    OBSERVE_CHAIN: 'observe_chains',\n    ACTIVE_BLOCK_HEIGHT: 'active_block_height',\n})\n\nexport class NodeEvent {\n    constructor(type, node, prevNode, currValue, prevValue) {\n        this.type = type\n        this.node = node\n        this.prevNode = prevNode\n        this.currValue = currValue\n        this.prevValue = prevValue\n        this.isTramp = node ? node.node_address === '' : false\n    }\n\n    toString() {\n        const addr = this.node ? this.node.node_address : '?'\n        return `NodeEvent(${this.type}, ${addr}, ${this.currValue} => ${this.prevValue})`\n    }\n}\n\nNodeEvent.EVENT_TYPE = EVENT_TYPE\n","import _ from \"lodash\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\n\nexport const NodeStatus = {\n    Standby: 'Standby',\n    Whitelisted: 'Whitelisted',\n    Disabled: 'Disabled',\n    Active: 'Active',\n    Unknown: 'Unknown',\n}\n\nexport class NodeTracker {\n    constructor(prevNodeList, currNodeList) {\n        this.prev = NodeTracker.prepareNodeList(prevNodeList)\n        this.curr = NodeTracker.prepareNodeList(currNodeList)\n    }\n\n    static convertNode(n) {\n        return {\n            node_address: n.node_address,\n            status: n.status,\n            active_block_height: BigInt(n.active_block_height),\n            bond: BigInt(n.bond),\n            ip_address: n.ip_address,\n            current_award: BigInt(n.current_award),\n            slash_points: n.slash_points,\n            observe_chains: _.sortBy(n.observe_chains, ['chain']),\n            requested_to_leave: Boolean(n.requested_to_leave),\n            forced_to_leave: Boolean(n.forced_to_leave),\n            version: n.version,\n            bond_providers: {\n                node_address: n.bond_providers.node_address,\n                node_operator_fee: BigInt(n.bond_providers.node_operator_fee),\n                providers: _.sortBy(n.bond_providers.providers || [], ['bond', 'bond_address']),\n            },\n            jail: {\n                node_address: n.jail.node_address,\n                release_height: n.jail.release_height,\n                reason: n.jail.reason || \"\"\n            },\n        }\n    }\n\n    static prepareNodeList(nodeList) {\n        nodeList = _.map(nodeList, NodeTracker.convertNode)\n        const nodeListWitNames = _.filter(nodeList, (item) => item.node_address)\n        const trampCount = nodeList.length - nodeListWitNames.length\n        const nodeMap = _.keyBy(nodeListWitNames, 'node_address')\n        const nameSet = _.keys(nodeMap)\n        return {\n            trampCount,\n            nodeMap,\n            nameSet\n        }\n    }\n\n    extractEvents() {\n        const events = []\n        const addEvent = (t, node, prevNode, k) => {\n            k = k || 'node_address'\n            events.push(new NodeEvent(t, node, prevNode, node ? node[k] : '',\n                prevNode ? prevNode[k] : ''))\n        }\n\n        const addedNodeAddresses = _.difference(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of addedNodeAddresses) {\n            const node = this.curr.nodeMap[addr]\n            addEvent(NodeEvent.EVENT_TYPE.CREATE, node, node)\n        }\n\n        const removeNodeAddresses = _.difference(this.prev.nameSet, this.curr.nameSet)\n        for (const addr of removeNodeAddresses) {\n            const node = this.prev.nodeMap[addr]\n            addEvent(NodeEvent.EVENT_TYPE.DESTROY, node, node)\n        }\n\n        const EVENT_TYPES = NodeEvent.EVENT_TYPE\n\n        const keyTypeTable = {\n            'slash_points': EVENT_TYPES.SLASH,\n            'bond': EVENT_TYPES.BOND_CHANGE,\n            'ip_address': EVENT_TYPES.IP_ADDRESS,\n            'status': EVENT_TYPES.STATUS,\n            'active_block_height': EVENT_TYPES.ACTIVE_BLOCK_HEIGHT,\n            'current_award': EVENT_TYPES.AWARD,\n            'observe_chains': EVENT_TYPES.OBSERVE_CHAIN,\n        }\n\n        const commonNodes = _.intersection(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of commonNodes) {\n            const prevNode = this.prev.nodeMap[addr]\n            const currNode = this.curr.nodeMap[addr]\n            const keys = _.union(_.keys(prevNode), _.keys(currNode));\n            const keysChanged = _.filter(keys, (key) => {\n                return !_.isEqual(prevNode[key], currNode[key]);\n            });\n            for (const key of keysChanged) {\n                const eventType = keyTypeTable[key]\n                if (eventType) {\n                    addEvent(eventType, currNode, prevNode, key)\n                }\n                // const oldV = prevNode[key]\n                // const newV = currNode[key]\n                // console.log(addr, key, oldV, newV)\n                // addEvent(`change:${key}`, currNode, prevNode)\n            }\n        }\n\n        return events\n    }\n}\n","import * as THREE from \"three\";\nimport {Vector3} from \"three\";\nimport {Random, Util} from \"@/helpers/MathUtil\";\nimport {Text} from 'troika-three-text'\nimport {Colors, Config} from \"@/config\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport StdVertexShader from '@/visual/shader/standard.vert?raw'\nimport FragShader1 from '@/visual/shader/node_obj_2.frag?raw'\nimport {NodeStatus} from \"@/helpers/NodeTracker\";\n\n\n// const geometry = new THREE.SphereGeometry(1, 32, 32)\n// const geometry = new THREE.IcosahedronGeometry(1, 1)\nconst planeScale = Config.Scene.NodeObject.PlaceScale\nconst geometry = new THREE.PlaneGeometry(planeScale, planeScale)\n\n\nexport class NodeObject extends PhysicalObject {\n    constructor(node) {\n        super()\n\n        this.node = node\n        this.normalizedBond = (Number(this.node.bond / 10_000_000n)) * 0.0000001\n\n        this.o = new THREE.Group()\n\n        this.attractors = []\n        // this.mass = this.normalizedBond * 2.0\n        this.friction = 0.025\n\n        this._makeSphere()\n        this._makeLabel()\n    }\n\n    _makeSphere() {\n        // color\n        let color = 0x111111;\n        const st = this.node.status\n        if (st === NodeStatus.Standby) {\n            color = 0x167a56\n        } else if (st === NodeStatus.Active) {\n            color = Random.getRandomSample([\n                Colors.LightningBlue,\n                Colors.YggdrasilGreen\n            ])\n        } else if (st === NodeStatus.Disabled) {\n            color = 0xee0000\n        } else if (st === NodeStatus.Whitelisted) {\n            color = 0x444444\n        } else if (st === NodeStatus.Unknown) {\n            color = 0x111144\n        }\n        const colorObj = new THREE.Color(color)\n\n        // material\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                \"time\": {value: Random.getRandomFloat(0.0, 100.0)},\n                \"saturation\": {value: 1.0},\n                \"color\": {value: colorObj},\n            },\n            vertexShader: StdVertexShader,\n            fragmentShader: FragShader1,\n            transparent: true,\n        })\n\n        // Size (scale): 1 = 1 million Rune\n        const noCfg = Config.Scene.NodeObject\n        const scale = Util.clamp(\n            this.normalizedBond * noCfg.MaxScale * 0.8,\n            noCfg.MinScale, noCfg.MaxScale)\n\n        // this.material = new THREE.MeshStandardMaterial({color, flatShading: true});\n        // this.material = NodeObject.material\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        this.mesh.scale.setScalar(scale)\n        this.o.add(this.mesh)\n    }\n\n    get realObject() {\n        return this.o\n    }\n\n    _makeLabel() {\n        const address = this.node.node_address\n        if (address && address.length >= 4) {\n            const nameTextObj = this.nameTextObj = new Text()\n\n            nameTextObj.text = address.slice(-4)\n            nameTextObj.font = Config.Font.Main\n            nameTextObj.fontWeight = 900\n            nameTextObj.fontSize = 15\n            nameTextObj.position.z = 2.42\n            nameTextObj.color = 0xFFFFFF\n            nameTextObj.anchorX = 'center'\n            nameTextObj.anchorY = 'middle'\n            nameTextObj.outlineWidth = 2.0\n            nameTextObj.sync()\n            this.o.add(nameTextObj)\n        }\n    }\n\n    dispose() {\n        if (this.nameTextObj) {\n            this.nameTextObj.dispose()\n        }\n        this.material.dispose()\n    }\n\n    get radius() {\n        // return this.mesh.scale.x\n        return Math.max(this.mesh.scale.x * 0.5, 12.0)\n    }\n\n    reactChain() {\n        // this.mesh.rotateZ(1.0)\n        const pos = this.o.position.clone().normalize()\n        const perp = pos.cross(new Vector3(0, 0, 1)).multiplyScalar(100.0)\n        this.velocity.add(perp)\n    }\n\n    reactSlash() {\n        // const velocity = obj.o.position.clone().normalize().multiplyScalar(100)\n        // obj.velocity.copy(velocity)\n        //\n        // const savedColor = this.material.color.clone()\n        // this.velocity.set(Random.getRandomFloat(-100, 100), Random.getRandomFloat(-100, 100), 0.0)\n        // this.material.color.set(0xff0000)\n        // setTimeout(() => {\n        //     this.material.color.set(savedColor)\n        // }, 100)\n    }\n\n    static estimateRadiusOfGroup(nodeObjList) {\n        let r = 0.0\n        for (const nodeObj of nodeObjList) {\n            r += nodeObj.radius\n        }\n        const n = nodeObjList.length\n        const avgRadius = r > 0 ? r / n : 0.0\n        const fitRadius = avgRadius * Math.sqrt(n)\n        return Math.max(0.1, fitRadius)\n    }\n\n    update(dt) {\n        super.update(dt);\n\n        this.material.uniforms.time.value += dt\n    }\n}\n","import _ from \"lodash\";\n\nexport class Simulation {\n    constructor() {\n        this.objects = {}\n        this.repelForce = 501.0\n    }\n\n    getByName(name) {\n        return this.objects[name]\n    }\n\n    addObject(name, physObj) {\n        const existing = this.getByName(name)\n        if (existing) {\n            console.warn('PhysObj already exists. No nothing')\n            return existing\n        }\n        this.objects[name] = physObj\n    }\n\n    removeObject(name) {\n        const physObj = this.getByName(name)\n        if (!physObj) {\n            console.error('PhysObj not found!')\n            return\n        }\n\n        physObj.dispose()\n        delete this.objects[name]\n    }\n\n    _repelForceCalculation(obj) {\n        for (const otherObj of this.nodeObjList) {\n            if (otherObj !== obj) {\n                obj.repel(otherObj, this.repelForce)\n            }\n        }\n    }\n\n    _updateObject(obj, delta) {\n        obj.nullifyForce()\n        this._repelForceCalculation(obj)\n        obj.update(delta)\n    }\n\n    update(dt) {\n        if (isNaN(dt)) {\n            return\n        }\n        _.forEach(this.nodeObjList, obj => this._updateObject(obj, dt))\n    }\n\n    doNSteps(n, dt = 0.016) {\n        for (let step = 0; step < n; ++step) {\n            this.update(dt)\n        }\n    }\n\n    get nodeObjList() {\n        return _.values(this.objects)\n    }\n\n    dispose() {\n        // for (const otherObj of this.nodeObjList) {\n        //     otherObj.dispose()\n        //     // this.parent.remove(otherObj.realObject)\n        // }\n        this.objects = {}\n    }\n\n    get size() {\n        return _.size(this.objects)\n    }\n}\n","import * as THREE from \"three\";\nimport {Text} from 'troika-three-text'\nimport {Config} from \"@/config\";\nimport TWEEN from \"tween\";\n\nexport class TitleLabel3D extends THREE.Object3D {\n    constructor(text, scale = 20, rotAngle = -45) {\n        super();\n        this.text = text\n        const t = this.label = new Text()\n        t.font = Config.Font.Main\n        t.fontSize = 10\n        t.scale.set(scale, scale, scale)\n        t.color = 0xFFFFFF\n        t.fillOpacity = 0.5\n        t.anchorX = 'center'\n        t.anchorY = 'middle'\n        t.text = text\n        t.sync()\n        t.rotateX(THREE.MathUtils.degToRad(rotAngle))\n        this.t = t\n        this.add(t)\n        this.animDuration = 500\n        this.animDistance = 1500\n        this.easeType = TWEEN.Easing.Back.Out\n    }\n\n    animateIn() {\n        this.t.position.z = this.animDistance\n        this.t.material.opacity = 0.0\n\n        new TWEEN.Tween(this.t.position)\n            .to({z: 0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 1.0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n    }\n\n    animateOut(kill=false) {\n        const expandedDuration = this.animDuration * 5\n        new TWEEN.Tween(this.t.position)\n            .to({z: -this.animDistance * 5}, expandedDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 0.0}, expandedDuration)\n            .easing(this.easeType)\n            .start().onComplete(() => {\n            if(kill) {\n                this.parent.remove(this)\n            }\n        })\n    }\n}","import {TitleLabel3D} from \"@/visual/TitleLabel3D\";\n\nexport class ModeBase {\n    constructor(scene) {\n        this.scene = scene\n        this.labels = []\n    }\n\n    handleObject(physObj) {\n        +physObj // do nothing\n    }\n\n    makeLabel(text, position, scale = 20, rotation=-45.0) {\n        if (!text) {\n            return\n        }\n\n        const titleLabel = new TitleLabel3D(text, scale, rotation)\n        titleLabel.position.copy(position)\n        this.scene.add(titleLabel)\n        this.labels.push(titleLabel)\n        return titleLabel\n    }\n\n    onEnter() {\n        this.labels.forEach(label => label.animateIn())\n    }\n\n    onLeave() {\n        this.labels.forEach(label => label.animateOut(true))\n        this.labels = []\n    }\n\n    update(dt) {\n        +dt\n    }\n}","export class Attractor {\n    constructor(position,\n                constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0,\n                radius = -1.0,\n                relaxRadius = 0.0) {\n        this.position = position\n        this.constCoeff = constCoeff\n        this.linearCoeff = linearCoeff\n        this.quadraticCoeff = quadraticCoeff\n        this.radius = radius\n        this.relaxRadius = relaxRadius\n    }\n\n    applyForceToDistance(physObj, distance, toPosition) {\n        const objPosition = physObj.realObject.position\n        const magnitude = this.constCoeff + distance * this.linearCoeff + distance * distance * this.quadraticCoeff\n        physObj.force.add(toPosition.clone().sub(objPosition).normalize().multiplyScalar(magnitude))\n    }\n\n    applyForce(physObj) {\n        const objPosition = physObj.realObject.position\n        const distance = this.position.distanceTo(objPosition)\n        const infiniteRadius = this.radius <= 0.0\n        if ((infiniteRadius || distance <= this.radius) && distance > this.relaxRadius) {\n            this.applyForceToDistance(physObj, distance, this.position)\n        }\n    }\n}","import _ from \"lodash\";\nimport {Section, Util} from \"@/helpers/MathUtil\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\n\n\nexport class AttractorShape extends Attractor {\n    constructor(triangles, constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0) {\n        const center = Util.centerOf(_.flatten(triangles))\n        super(new THREE.Vector3(center.x, center.y, 0.0),\n            constCoeff, linearCoeff, quadraticCoeff, 0, 0)\n        this.triangles = triangles\n        this.center = center\n    }\n\n    get allSectors() {\n        const sectors = []\n        for(const triangle of this.triangles) {\n            sectors.push(new Section(triangle[0], triangle[1]))\n            sectors.push(new Section(triangle[1], triangle[2]))\n            sectors.push(new Section(triangle[2], triangle[0]))\n        }\n        return sectors\n    }\n\n    applyForce(physObj) {\n        if (!this.triangles || !this.triangles.length) {\n            return\n        }\n        const objPosition = physObj.realObject.position\n        const p = {x: objPosition.x, y: objPosition.y}\n        const relaxed = _.some(this.triangles, tri => Util.pointInTriangle(p, tri))\n        if (relaxed) {\n            return\n        }\n\n        const neartestSector = _.minBy(this.allSectors, sector => sector.pDistance(p.x, p.y))\n        const neartestPoint = neartestSector.nearestPoint(p.x, p.y)\n        const distance = new Section(neartestPoint, p).length\n        this.applyForceToDistance(physObj, distance, new THREE.Vector3(neartestPoint.x, neartestPoint.y, 0.0))\n    }\n}","export class THORChainLogoShape {\n    static original() {\n        return [\n            [\n                {x: 0, y: 0},\n                {x: 133, y: -133},\n                {x: -238, y: -291},\n            ],\n            [\n                {x: 0, y: 0},\n                {x: -133, y: 135},\n                {x: 291, y: 311},\n            ]\n        ]\n    }\n\n    static triangles(dx = 0, dy = 0, scale = 1.0) {\n        const transformed = []\n        for(const triangle of this.original()) {\n            const pts = []\n            for(const {x, y} of triangle) {\n                pts.push({\n                    x: x * scale + dx,\n                    y: y * scale + dy\n                })\n            }\n            transformed.push(pts)\n        }\n        return transformed\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {Random} from \"@/helpers/MathUtil\";\n\nexport class ModeNormal extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        const force = Config.Physics.BaseForce\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.8), force)\n    }\n\n    handleObject(physObj) {\n        super.handleObject(physObj);\n        physObj.attractors = [this.tcAttractor]\n    }\n\n    onEnter(nodeObjList) {\n        this.makeLabel('THORChain', new THREE.Vector3(0, -580, -10), 18)\n        super.onEnter();\n\n        nodeObjList.forEach(o => {\n            o.velocity.add(new THREE.Vector3(0, Random.getRandomFloat(100, 1000), 0))\n        })\n    }\n}","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {NodeStatus} from \"@/helpers/NodeTracker\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport _ from \"lodash\";\n\nconst ANY_STATUS = '*'\n\nexport class ModeStatus extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        const force = Config.Physics.BaseForce\n        this.attractors = {\n            [NodeStatus.Active]: [\n                new Attractor(new THREE.Vector3(0.0, 0, 0), force, 0, 0, 0, this._circleRadius),\n            ],\n            [NodeStatus.Standby]: [\n                new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force * 0.02),\n            ],\n            [ANY_STATUS]: [\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force * 0.02),\n            ],\n        }\n    }\n\n    handleObject(physObj) {\n        super.handleObject(physObj);\n\n        physObj.attractors = []\n\n        const bestAttractors = this.attractors[physObj.node.status]\n        if (bestAttractors) {\n            physObj.attractors = bestAttractors\n        } else {\n            physObj.attractors = this.attractors[ANY_STATUS]\n        }\n    }\n\n    onEnter(nodeObj) {\n        const statusesCounted = _.countBy(nodeObj, 'node.status')\n        const standbyCount = statusesCounted[NodeStatus.Standby]\n        const activeCount = statusesCounted[NodeStatus.Active]\n        const otherCount = nodeObj.length - (standbyCount + activeCount)\n\n        this.makeLabel('Active', new THREE.Vector3(0, -500, 0), 20)\n        this.makeLabel('Standby', new THREE.Vector3(-this._sideDistance, -400, 0), 12)\n        this.makeLabel('Other', new THREE.Vector3(this._sideDistance, -400, 0), 12)\n\n        this.makeLabel(activeCount, new THREE.Vector3(0, -650, 0), 10, -45)\n        this.makeLabel(standbyCount, new THREE.Vector3(-this._sideDistance, -480, 0), 6, -45)\n        this.makeLabel(otherCount, new THREE.Vector3(this._sideDistance, -480, 0), 6, -45)\n\n        super.onEnter();\n    }\n}\n","import * as THREE from \"three\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport _ from \"lodash\";\n\n\nclass VirtualObject extends PhysicalObject {\n    constructor(x, y, r, name, attractor, friction) {\n        super();\n        this.name = name\n        this.position = new THREE.Vector3(x, y, 0)\n        this._radius = r\n        this.attractors = [attractor]\n        this.friction = friction\n    }\n\n    get radius() {\n        return this._radius\n    }\n}\n\nexport class CirclePack {\n    constructor(force, boundRadius, repelForce = 600, friction = 0.02, iterSteps = 1) {\n        this.force = force\n        this.boundRadius = boundRadius\n        this.iterSteps = iterSteps\n        this.dt = 0.05\n        this.simulation = new Simulation()\n        this.simulation.repelForce = repelForce\n        this.friction = friction\n\n        this.metaAttractor = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, -1, 0)\n    }\n\n    addCircle(name, radius) {\n        this.simulation.addObject(\n            name,\n            new VirtualObject(\n                0,\n                0,\n                radius,\n                name,\n                this.metaAttractor,\n                this.friction,\n            )\n        )\n    }\n\n    arrangeAroundCenter() {\n        if (!this.simulation.size) {\n            return this\n        }\n\n        const deltaAngle = Math.PI * 2 / this.simulation.size\n        const r = this.boundRadius * 0.5 * 0.8\n        let angle = Math.PI * 0.5\n\n        for (const name of _.keys(this.simulation.objects)) {\n            const obj = this.simulation.getByName(name)\n            if (obj) {\n                obj.position.x = r * Math.cos(angle)\n                obj.position.y = r * Math.sin(angle)\n            }\n\n            angle -= deltaAngle\n        }\n        return this\n    }\n\n    clear() {\n        this.simulation.dispose()\n    }\n\n    pack(dt, steps) {\n        if (!this.simulation.size) {\n            return this\n        }\n        dt = dt || this.dt\n        steps = steps || this.iterSteps\n        this.simulation.doNSteps(steps, dt)\n        return this\n    }\n\n    getResults() {\n        const results = {}\n        for (const [name, obj] of _.entries(this.simulation.objects)) {\n            results[name] = {\n                position: obj.position,\n                radius: obj.radius\n            }\n        }\n        return results\n    }\n}","import axios from \"axios\";\nimport lscache from \"lscache\";\n\nexport class IPAddressInfo {\n    constructor(j) {\n        this.ipAddress = j['ip']\n        this.countryCode = j['country_code']\n        this.country = j['country']\n        this.latitude = j['latitude']\n        this.longitude = j['longitude']\n        this.providerName = j['org']\n    }\n}\n\n\nexport const UNKNOWN = 'UNKNOWN'\n\n\nexport class IPAddressInfoLoader {\n    constructor(expireMinutes = 24 * 60) {\n        this.expireMinutes = expireMinutes\n        this._key = 'IPInfo2'\n    }\n\n    url(ip) {\n        // return `http://ip-api.com/json/${ip}?fields=status,message,countryCode,region,regionName,city,lat,lon,isp,org,asname,query`\n        return `https://settings.thornode.org/api/node/ip/${ip}`\n    }\n\n    async loadFromService(ip) {\n        const r = await axios.get(this.url(ip))\n        console.info(`Loaded IP info for (${ip}) => ${r.status}`)\n        return new IPAddressInfo(r.data)\n    }\n\n    loadFromCache(ip) {\n        return lscache.get(`${this._key}:${ip}`)\n    }\n\n    saveToCache(data) {\n        if (!data || !data.ipAddress) {\n            console.warn('no data to save!')\n            return\n        }\n        const ip = data.ipAddress\n        lscache.set(`${this._key}:${ip}`, data, this.expireMinutes)\n    }\n\n    async load(ip) {\n        let data = this.loadFromCache(ip)\n        if (data) {\n            return data\n        }\n        data = await this.loadFromService(ip)\n        this.saveToCache(data)\n        return data\n    }\n\n    static refineProviderName(name) {\n        if(name === undefined) {\n            return UNKNOWN\n        }\n\n        name = name.toUpperCase()\n        name = name.replace('ONLINE GMBH', '')\n        for(const component of name.split('-')) {\n            if(component !== 'AS') {\n                return component\n            }\n        }\n\n        return name\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {NodeObject} from \"@/visual/NodeObject\";\n\n\nexport class ModeProvider extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n        this.attractors = {}\n        this.force = Config.Physics.BaseForce\n        this.circlePacker = new CirclePack(this.force, 1200, 300, 0.02, 1)\n    }\n\n    update() {\n        // this.circlePacker.pack(dt)\n        this._transferAttractorsPositionFromPacker()\n    }\n\n    handleObject(physObj) {\n        super.handleObject(physObj);\n\n        if (physObj) {\n            let groupName = IPAddressInfoLoader.refineProviderName(\n                (physObj.ipInfo && physObj.ipInfo.providerName) ? physObj.ipInfo.providerName : UNKNOWN\n            )\n            physObj.attractors = [(this.attractors[groupName] ?? this._attractorBanish)]\n        }\n    }\n\n    onEnter(objList) {\n        this._createProviderAttractors(objList)\n        super.onEnter();\n    }\n\n    _createProviderAttractors(objList) {\n        const providers = {}\n\n        for (const nodeObj of objList) {\n            const ipInfo = nodeObj.ipInfo\n            const nativeName = ipInfo ? ipInfo.providerName : UNKNOWN\n            const provider = IPAddressInfoLoader.refineProviderName(nativeName)\n\n            if(!providers[provider]) {\n                providers[provider] = [nodeObj]\n            } else {\n                providers[provider].push(nodeObj)\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        const sortedEntries = _.sortBy(_.entries(providers), [(pair) => pair[1].length])\n        // const sortedEntries = _.entries(providers)\n        for (const [name, items] of sortedEntries) {\n            const circleRadius = NodeObject.estimateRadiusOfGroup(items) * 0.9\n            // console.log('prov', name, circleRadius)\n\n            this.circlePacker.addCircle(name, circleRadius)\n            this.attractors[name] = new Attractor(new THREE.Vector3(),\n                this.force, 0, 0, 0, circleRadius)\n        }\n        this.circlePacker.arrangeAroundCenter()\n        this._transferAttractorsPositionFromPacker()\n        this._makeLabels(providers)\n    }\n\n    _makeLabels(providers) {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const countNodes = providers[name].length\n            const title = `${name} (${countNodes})`\n            this.makeLabel(title, new THREE.Vector3(position.x, position.y - 150.0, 60.0), 5)\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport {Config} from \"@/config\";\nimport {NodeObject} from \"@/visual/NodeObject\";\n\nexport class ModeVersion extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        this.force = Config.Physics.BaseForce\n        this.attractors = {}\n        this.circlePacker = new CirclePack(this.force, 1200, 300, 0.02, 1)\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n    }\n\n    // update() {\n    //     // this.circlePacker.pack(dt)\n    //     this._transferAttractorsPositionFromPacker()\n    // }\n\n    handleObject(physObj) {\n        super.handleObject(physObj);\n\n        if (physObj) {\n            let groupName = physObj.node.version\n            physObj.attractors = [(this.attractors[groupName] ?? this._attractorBanish)]\n        }\n    }\n\n    onEnter(objList) {\n        this._createVersionAttractors(objList)\n        super.onEnter();\n    }\n\n    _createVersionAttractors(objList) {\n        const versions = {}\n        let mostPopularVersion = '', mostPopularList = []\n        for (const nodeObj of objList) {\n            const version = nodeObj.node.version\n            if (version === '') {\n                continue\n            }\n\n            if(!versions[version]) {\n                versions[version] = []\n            }\n\n            const currentList = versions[version]\n            currentList.push(nodeObj)\n\n            if (currentList.length > mostPopularList.length) {\n                mostPopularList = currentList\n                mostPopularVersion = version\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        for (const [version, items] of _.sortBy(_.entries(versions), [(o) => o[0]])) {\n            const circleRadius = NodeObject.estimateRadiusOfGroup(items)\n\n            this.attractors[version] = new Attractor(new THREE.Vector3(),\n                this.force, 0, 0, 0, circleRadius)\n\n            if(version !== mostPopularVersion) {\n                this.circlePacker.addCircle(version, circleRadius)\n            }\n        }\n        this.circlePacker.arrangeAroundCenter()\n\n        const popularRadius = NodeObject.estimateRadiusOfGroup(mostPopularList)\n        this.circlePacker.addCircle(mostPopularVersion, popularRadius)\n\n        this._transferAttractorsPositionFromPacker()\n        this._makeLabels()\n    }\n\n    _makeLabels() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [version, {position}] of _.entries(packedPositions)) {\n            const text = `v. ${version}`\n            const attr = this.attractors[version]\n            if(attr) {\n                this.makeLabel(text,\n                    new THREE.Vector3(position.x, position.y + attr.relaxRadius * 1.1 + 20.0, 50.0),\n                    2.5)\n            }\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}\n","import {Random} from \"@/helpers/MathUtil\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {Config} from \"@/config\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {ModeNormal} from \"@/visual/modes/ModeNormal\";\nimport {ModeStatus} from \"@/visual/modes/ModeStatus\";\nimport {ModeProvider} from \"@/visual/modes/ModeProvider\";\nimport {ModeVersion} from \"@/visual/modes/ModeVersion\";\n\nexport const NodeGroupModes = Object.freeze({\n    Normal: 'normal',\n    Status: 'status',\n    Provider: 'provider',\n    Version: 'version',\n})\n\nexport class NodeGroup extends Simulation {\n    constructor(parent) {\n        super()\n\n        this._currentIdent = 0\n        this.parent = parent\n\n        this._modeNormal = new ModeNormal(this.parent)\n        this._modeStatus = new ModeStatus(this.parent)\n        this._modeProvider = new ModeProvider(this.parent)\n        this._modeVersion = new ModeVersion(this.parent)\n\n        this._selectedModeHandler = this._modeNormal\n        this.mode = NodeGroupModes.Normal\n\n        this._startPositionBounds = {\n            xMin: -60, xMax: 60,\n            yMin: -40, yMax: 40,\n            zMin: 0, zMax: 0,\n        }\n        this.repelForce = Config.Physics.RepelForce\n    }\n\n    genIdent(node) {\n        return node.node_address ?? String(this._currentIdent++)\n    }\n\n    _placeNodeObject(nodeObject) {\n        // const pos = Random.randomVector(this._startPositionBounds)\n        const pos = Random.randomOnCircle(2000.0)\n        nodeObject.o.position.copy(pos)\n        this.parent.add(nodeObject.o)\n    }\n\n    createNewNode(node) {\n        const ident = this.genIdent(node)\n        const existing = this.getByName(ident)\n        if (existing) {\n            console.warn('NodeObject already exists. No nothing')\n            return existing\n        }\n\n        console.info(`Create node ${ident}.`)\n\n        const nodeObject = new NodeObject(node)\n        this.parent.add(nodeObject.o)\n        this._placeNodeObject(nodeObject)\n        this.addObject(ident, nodeObject)\n        return nodeObject\n    }\n\n    destroyNode(node) {\n        const nodeAddress = node.node_address ?? node\n        const nodeObject = this.getByName(nodeAddress)\n        if (!nodeObject) {\n            console.error('node not found!')\n            return\n        }\n\n        console.info(`Destroy node ${nodeAddress}.`)\n        nodeObject.dispose()\n        this.parent.remove(nodeObject.o)\n        super.removeObject(nodeAddress)\n    }\n\n    set mode(newMode) {\n        this._mode = newMode\n\n        this._selectedModeHandler.onLeave(this.nodeObjList)\n\n        if (this._mode === NodeGroupModes.Normal) {\n            this._selectedModeHandler = this._modeNormal\n        } else if (this._mode === NodeGroupModes.Status) {\n            this._selectedModeHandler = this._modeStatus\n        } else if (this._mode === NodeGroupModes.Provider) {\n            this._selectedModeHandler = this._modeProvider\n        } else if(this._mode === NodeGroupModes.Version) {\n            this._selectedModeHandler = this._modeVersion\n        }\n\n        this._selectedModeHandler.onEnter(this.nodeObjList)\n\n        console.log(`Set Mode: ${newMode}`)\n    }\n\n    _updateObject(obj, delta) {\n        this._selectedModeHandler.handleObject(obj)\n        super._updateObject(obj, delta)\n    }\n\n    reactEvent(event) {\n        const delay = Random.getRandomFloat(0, Config.DataSource.ReactRandomDelay * 1000.0)\n        setTimeout(() => {\n            const obj = this.getByName(event.node.node_address)\n            if (obj) {\n                if (event.type === NodeEvent.EVENT_TYPE.OBSERVE_CHAIN) {\n                    obj.reactChain()\n                } else if (event.type === NodeEvent.EVENT_TYPE.SLASH) {\n                    obj.reactSlash()\n                }\n            }\n        }, delay)\n    }\n\n    update(dt) {\n        this._selectedModeHandler.update(dt)\n        return super.update(dt);\n    }\n\n    dispose() {\n        super.dispose()\n        clearObject(this.parent)\n        for (const otherObj of this.nodeObjList) {\n            otherObj.dispose()\n        }\n    }\n}","import axios from \"axios\";\n\nexport class URLDataSource {\n    constructor(url, period) {\n        this.period = period\n        this.url = url\n        this._isRunning = false\n        this._timer = 0\n        this.callback = () => 0\n    }\n\n    run() {\n        if (this._isRunning) {\n            console.warn(`${this.toString()} is already running`)\n            return\n        }\n        this._isRunning = true\n\n        console.info(`${this.toString()} started!`)\n\n        this._tick().then()\n\n        this._timer = setInterval(() => {\n            this._tick().then()\n        }, this.period * 1000)\n    }\n\n    stop() {\n        if (this._isRunning) {\n            clearInterval(this._timer)\n            this._timer = 0\n            this._isRunning = false\n            console.info(`${this.toString()} stopped.`)\n        }\n    }\n\n    toString() {\n        return `URLDataSource(${this.url}, ${this.period} sec)`\n    }\n\n    get isRunning() {\n        return this._isRunning\n    }\n\n    async _tick() {\n        try {\n            const data = await axios.get(this.url, {\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            })\n            if (this.callback) {\n                this.callback(data.data)\n            }\n        } catch (e) {\n            console.error(`${this.toString()} tick failed: ${e}`)\n            throw e\n        }\n    }\n}","import * as THREE from \"three\";\nimport {NodeGroup} from \"@/visual/NodeGroup\";\nimport {NodeTracker} from \"@/helpers/NodeTracker\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {URLDataSource} from \"@/helpers/data/URLDataSource\";\nimport {Config} from \"@/config\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {IPAddressInfoLoader} from \"@/helpers/data/IPAddressInfo\";\n\nexport class MainScene {\n    constructor(scene, vueComp) {\n        this.scene = scene\n        this.vueComp = vueComp\n        this.prevNodes = []\n        this.nodes = []\n\n        this._makeSomeLight()\n        this.nodeGroup = new NodeGroup(this.scene)\n\n        this._firstTime = true\n        this._runDataSource()\n    }\n\n    _runDataSource() {\n        this.dataSource = new URLDataSource(Config.DataSource.NodesURL, Config.DataSource.PollPeriod)\n        this.dataSource.callback = (data) => {\n            this.handleData(data)\n        }\n\n        this.dataSource.run()\n\n        this.ipAddressLoader = new IPAddressInfoLoader()\n    }\n\n    _makeSomeLight() {\n        const light = new THREE.DirectionalLight('hsl(0, 100%, 100%)')\n        light.position.set(0, 10, 1000)\n        this.scene.add(light)\n\n        const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n        this.scene.add(ambientLight);\n    }\n\n    async _loadAdditionalInfoAbout(obj) {\n        const ipAddress = obj.node.ip_address\n        if(ipAddress) {\n            obj.ipInfo = await this.ipAddressLoader.load(ipAddress)\n        }\n    }\n\n    handleData(nodes) {\n        console.info('Handle Data tick!')\n\n        // Random.removeRandomItem(nodes)\n\n        this.prevNodes = this.nodes\n        this.nodes = nodes\n        const tracker = new NodeTracker(this.prevNodes, this.nodes)\n        const events = tracker.extractEvents()\n\n        for (const event of events) {\n            const node = event.node\n            if (node.node_address) {\n                if (event.type === NodeEvent.EVENT_TYPE.CREATE) {\n                    const obj = this.nodeGroup.createNewNode(node)\n                    this._loadAdditionalInfoAbout(obj).then()\n                } else if (event.type === NodeEvent.EVENT_TYPE.DESTROY) {\n                    this.nodeGroup.destroyNode(node)\n                } else {\n                    this.nodeGroup.reactEvent(event)\n                }\n            }\n        }\n\n        if(this._firstTime) {\n            for(let i = 0; i < Config.Physics.Startup.SimulationSteps; ++i) {\n                this.nodeGroup.update(Config.Physics.Startup.DeltaTime)\n            }\n            this._firstTime = false\n        }\n\n        if (events.length && this.vueComp) {\n            this.vueComp.pokeActivity()\n        }\n    }\n\n    update(delta) {\n        this.nodeGroup.update(delta)\n    }\n\n    dispose() {\n        this.dataSource.stop()\n        this.nodeGroup.dispose()\n        clearObject(this.scene)\n    }\n}","export default \"varying vec2 vUv;\\nuniform float time;\\n\\nfloat hash(float x) {\\n    return fract(21654.6512 * sin(385.51 * x));\\n}\\n\\nfloat hash(vec2 p) {\\n    return fract(21654.65155 * sin(35.51 * p.x + 45.51 * p.y));\\n}\\n\\nfloat lhash(float x, float y) {\\n    float h = 0.0;\\n\\n    for (int i = 0; i < 5; i++) {\\n        h += (fract(21654.65155 * float(i) * sin(35.51 * x + 45.51 * float(i) * y * (5.0 / float(i)))) * 2.0 - 1.0) / 10.0;\\n    }\\n    return h / 5.0 + 0.02;\\n    return (fract(21654.65155 * sin(35.51 * x + 45.51 * y)) * 2.0 - 1.0) / 20.0;\\n}\\n\\nfloat noise(vec2 p) {\\n    vec2 fl = floor(p);\\n    vec2 fr = fract(p);\\n\\n    fr.x = smoothstep(0.0, 1.0, fr.x);\\n    fr.y = smoothstep(0.0, 1.0, fr.y);\\n\\n    float a = mix(hash(fl + vec2(0.0, 0.0)), hash(fl + vec2(1.0, 0.0)), fr.x);\\n    float b = mix(hash(fl + vec2(0.0, 1.0)), hash(fl + vec2(1.0, 1.0)), fr.x);\\n\\n    return mix(a, b, fr.y);\\n}\\n\\n//Fractal Brownian Motion\\nfloat fbm(vec2 p) {\\n    float v = 0.0, f = 1.0, a = 0.5;\\n    for (int i = 0; i < 6; i++) {\\n        v += noise(p * f) * a;\\n        f *= 2.0;\\n        a *= 0.5;\\n    }\\n    return v;\\n}\\n\\n//Fun start here\\nvoid main() {\\n    //change the animation speed\\n\\n    vec2 uv = vUv;\\n    uv = uv * 3.0 - 51.0;\\n\\n    float p = fbm(vec2(noise(uv + time / 2.5), noise(uv * 2. + cos(time / 2.) / 2.)));\\n    //uncomment for more plasma/lighting/plastic effect..\\n//    p = (1. - abs(p * 2.0 - 1.0))*.8;\\n\\n    vec3 col = pow(vec3(p), vec3(0.3)) - 0.4;\\n    col = mix(col, vec3(1.0), 1.0 - smoothstep(0.0, 0.2, pow(1.0 / 2.0, 0.5) - uv.y / 40.0));\\n    float s = smoothstep(.35, .6, col.x);\\n    float s2 = smoothstep(.47, .6, col.x);\\n    float s3 = smoothstep(.51, .6, col.x);\\n    //multiply by the inverse to get the \\\"smoky\\\" effect, first attempt\\n    col *= vec3(0.1, .1, 1.9) * s;\\n    col += vec3(0.1, 1.3, .1) * s2;\\n    col += vec3(0.1, 1.4, .1) * s3;\\n    //made it more bright\\n    col *= 0.2;\\n    gl_FragColor = vec4(col, 1.0);\\n    gl_FragColor.rgb += 0.05;\\n}\";","import * as THREE from \"three\";\n\nconst defaultQuad = new THREE.PlaneBufferGeometry(2, 2, 1, 1);\nconst defaultVertexShader = `\t\nuniform vec4 uSize; \t\t//w h t l \nvarying vec2 vUv;\n\nvoid main(){\n\tvUv = uv;\n\tvec2 transformed = \n\t    position.xy * uSize.xy \n\t    - vec2(1.,-1.) + vec2( uSize.x ,  -uSize.y ) \n\t    + vec2( uSize.w , - uSize.z ) * 2.;\n\tgl_Position = vec4( transformed , 1. , 1. );\n}\n`;\n\nconst defaultFragmentShader = `\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n// uniform float time;\n\nvoid main(){\n\tgl_FragColor = texture2D( uTexture , vUv );\n}\t\n`;\n\nexport default class ScreenQuad extends THREE.Mesh {\n    constructor({\n                    width = 1,        \t//100%\n                    height = 1,\t\t\t//100%\n                    top = 0,\n                    left = 0,\n                    texture = null,\n                    fragmentShader = false\n                } = {}) {\n        super(defaultQuad, new THREE.ShaderMaterial({\n            uniforms: {\n                uTexture: {\n                    type: 't',\n                    value: texture\n                },\n                uSize: {\n                    type: 'v4',\n                    value: new THREE.Vector4(1, 1, 0, 0)\n                },\n                time: {value: 0.0},\n            },\n            vertexShader: defaultVertexShader,\n            fragmentShader: fragmentShader ? fragmentShader : defaultFragmentShader,\n            depthWrite: false\n        }));\n        this.frustumCulled = false;\n        this.renderOrder = -1;\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n\n        //cleanup\n        this._pixels = [false, false, false, false]; //w h t l\n        this._componentSetters = [\n            this.setWidth,\n            this.setHeight,\n            this.setTop,\n            this.setLeft\n        ];\n        this._components = [\n            'width',\n            'height',\n            'top',\n            'left'\n        ];\n        this.screenSize = new THREE.Vector2(1, 1);\n        this.setSize(width, height);\n        this.setOffset(top, left);\n    }\n\n    update(dt) {\n        this.material.uniforms.time.value += dt;\n    }\n\n    setScreenSize(width, height) {\n        // this.material.uniforms.uScreenSize.value.set( width , height , 1 / width , 1 / height );\n        this.screenSize.set(width, height);\n        this._pixels.forEach((p, pi) => {\n            //if a component is set in pixels, update the uniform\n            if (p) this._componentSetters[pi].call(this, this[this._components[pi]]);\n        });\n    }\n\n    setSize(width, height) {\n        this.setWidth(width);\n        this.setHeight(height);\n    }\n\n    setWidth(v) {\n        this.width = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.x = parseInt(v) / this.screenSize.x;\n            this._pixels[0] = true;\n        } else {\n            this.material.uniforms.uSize.value.x = v;\n            this._pixels[0] = false;\n        }\n    }\n\n    setHeight(v) {\n        this.height = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.y = parseInt(v) / this.screenSize.y;\n            this._pixels[1] = true;\n        } else {\n            this.material.uniforms.uSize.value.y = v;\n            this._pixels[1] = false;\n        }\n    }\n\n    setOffset(top, left) {\n        // this.material.uniforms.uSize.value.z = top;\n        // this.material.uniforms.uSize.value.w = left;\n        this.setLeft(left);\n        this.setTop(top);\n    }\n\n    setTop(v) {\n        this.top = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.z = parseInt(v) / this.screenSize.y;\n            this._pixels[2] = true;\n        } else {\n            this.material.uniforms.uSize.value.z = v;\n            this._pixels[2] = false;\n        }\n    }\n\n    setLeft(v) {\n        this.left = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.w = parseInt(v) / this.screenSize.x;\n            this._pixels[3] = true;\n        } else {\n            this.material.uniforms.uSize.value.w = v;\n            this._pixels[3] = false;\n        }\n    }\n}","\nimport BgShader from '@/visual/shader/bg_1.frag'\nimport ScreenQuad from \"@/visual/ScreenQuad\";\n\nexport class Background {\n    constructor(scene) {\n        this.scene = scene\n        this.quad = new ScreenQuad({\n            fragmentShader: BgShader\n        });\n    }\n\n    install() {\n        this.scene.add(this.quad)\n    }\n\n    update(dt) {\n        this.quad.update(dt)\n    }\n\n    setSize(w, h) {\n        if(this.quad) {\n            this.quad.setScreenSize(w, h)\n        }\n    }\n}","import { render } from \"./MainScreen.vue?vue&type=template&id=22ddec9a\"\nimport script from \"./MainScreen.vue?vue&type=script&lang=js\"\nexport * from \"./MainScreen.vue?vue&type=script&lang=js\"\n\nimport \"./MainScreen.vue?vue&type=style&index=0&id=22ddec9a&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=edc0535e\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=edc0535e&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue'\nimport App from './App.vue'\nimport mitt from 'mitt';\nimport CameraControls from \"camera-controls\";\n\nimport * as THREE from 'three';\n\nCameraControls.install({THREE});\n\nconst emitter = mitt();\nconst app = createApp(App);\napp.config.globalProperties.emitter = emitter;\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthorviz\"] = self[\"webpackChunkthorviz\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5584); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_MainScreen","class","_createElementBlock","_createElementVNode","ref","tabindex","onKeydown","$options","onMousemove","onMouseenter","onMouseleave","_createVNode","_component_FPSCounter","$data","onClick","Live","process","Config","DataSource","NodesURL","PollPeriod","ReactRandomDelay","Font","Main","Effects","Bloom","Enabled","Strength","Threshold","Radius","Controls","Camera","Distance","Min","Max","Start","AzimuthAngleLimit","PolarAngleLimit","MouseMoveStrength","Scene","Sky","SkyBox","SkyBoxExt","NodeObject","PlaceScale","MaxScale","MinScale","Physics","BaseForce","RepelForce","Startup","SimulationSteps","DeltaTime","Colors","LightningBlue","YggdrasilGreen","MidgardTurqoise","NightBlack","_toDisplayString","Number","toFixed","countObjects","parent","numOfMeshes","traverse","clearObject","obj","remove","apply","children","name","props","updatePeriod","type","default","data","fps","objCount","activityIndicator","lastUpdateTime","methods","pokeActivity","this","setTimeout","update","delta","scene","Date","now","__exports__","defaultValue","x","undefined","Random","max","Math","floor","random","min","array","index","getRandomInt","length","splice","xMin","xMax","yMin","yMax","zMin","zMax","Vector3","getRandomFloat","r","cx","cy","phase","PI","cos","sin","Section","constructor","p1","p2","dx","dy","y","whichSide","A","B","C","D","sign","center","nearestPoint","dot","len_sq","param","pDistance","xo","yo","nearestPoint1","sqrt","Util","group","sumX","_","item","sumY","p3","pt","threePts","v1","v2","v3","d1","_signHelper","d2","d3","hasNeg","hasPos","PhysicalObject","mass","force","velocity","friction","attractors","dt","forEach","attr","applyForce","acceleration","multiplyScalar","copy","clone","add","clamp","realObject","position","nullifyForce","set","radius","applyForceTo","direction","repel","physObj","forceMult","thisPos","otherPos","d","distanceTo","minDistance","lineDir","sub","normalize","negate","EVENT_TYPE","Object","freeze","CREATE","DESTROY","SLASH","IP_ADDRESS","STATUS","VERSION","FORCED_LEAVE","REQUESTED_LEAVE","AWARD","BOND_CHANGE","OBSERVE_CHAIN","ACTIVE_BLOCK_HEIGHT","NodeEvent","node","prevNode","currValue","prevValue","isTramp","node_address","toString","addr","NodeStatus","Standby","Whitelisted","Disabled","Active","Unknown","NodeTracker","prevNodeList","currNodeList","prev","prepareNodeList","curr","n","status","active_block_height","BigInt","bond","ip_address","current_award","slash_points","observe_chains","requested_to_leave","Boolean","forced_to_leave","version","bond_providers","node_operator_fee","providers","jail","release_height","reason","nodeList","convertNode","nodeListWitNames","trampCount","nodeMap","nameSet","extractEvents","events","addEvent","t","k","push","addedNodeAddresses","removeNodeAddresses","EVENT_TYPES","keyTypeTable","commonNodes","currNode","keys","keysChanged","key","eventType","planeScale","geometry","THREE","super","normalizedBond","o","_makeSphere","_makeLabel","color","st","getRandomSample","colorObj","material","uniforms","value","vertexShader","StdVertexShader","fragmentShader","FragShader1","transparent","noCfg","scale","mesh","setScalar","address","nameTextObj","Text","text","slice","font","fontWeight","fontSize","z","anchorX","anchorY","outlineWidth","sync","dispose","reactChain","pos","perp","cross","reactSlash","nodeObjList","nodeObj","avgRadius","fitRadius","time","Simulation","objects","repelForce","getByName","addObject","existing","console","warn","removeObject","error","_repelForceCalculation","otherObj","_updateObject","isNaN","doNSteps","step","size","TitleLabel3D","rotAngle","label","fillOpacity","rotateX","animDuration","animDistance","easeType","TWEEN","animateIn","opacity","to","easing","start","animateOut","kill","expandedDuration","onComplete","ModeBase","labels","handleObject","makeLabel","rotation","titleLabel","onEnter","onLeave","Attractor","constCoeff","linearCoeff","quadraticCoeff","relaxRadius","applyForceToDistance","distance","toPosition","objPosition","magnitude","infiniteRadius","AttractorShape","triangles","centerOf","allSectors","sectors","triangle","p","relaxed","tri","pointInTriangle","neartestSector","sector","neartestPoint","THORChainLogoShape","transformed","original","pts","ModeNormal","_circleRadius","tcAttractor","ANY_STATUS","ModeStatus","_sideDistance","bestAttractors","statusesCounted","standbyCount","activeCount","otherCount","VirtualObject","attractor","_radius","CirclePack","boundRadius","iterSteps","simulation","metaAttractor","addCircle","arrangeAroundCenter","deltaAngle","angle","clear","pack","steps","getResults","results","IPAddressInfo","j","ipAddress","countryCode","country","latitude","longitude","providerName","UNKNOWN","IPAddressInfoLoader","expireMinutes","_key","url","ip","axios","info","loadFromCache","lscache","saveToCache","loadFromService","toUpperCase","replace","component","split","ModeProvider","_attractorBanish","circlePacker","_transferAttractorsPositionFromPacker","groupName","refineProviderName","ipInfo","objList","_createProviderAttractors","nativeName","provider","sortedEntries","pair","items","circleRadius","estimateRadiusOfGroup","_makeLabels","packedPositions","countNodes","title","ModeVersion","_createVersionAttractors","versions","mostPopularVersion","mostPopularList","currentList","popularRadius","NodeGroupModes","Normal","Status","Provider","Version","NodeGroup","_currentIdent","_modeNormal","_modeStatus","_modeProvider","_modeVersion","_selectedModeHandler","mode","_startPositionBounds","genIdent","String","_placeNodeObject","nodeObject","randomOnCircle","createNewNode","ident","destroyNode","nodeAddress","newMode","_mode","log","reactEvent","event","delay","URLDataSource","period","_isRunning","_timer","callback","run","_tick","then","setInterval","stop","clearInterval","isRunning","headers","e","MainScene","vueComp","prevNodes","nodes","_makeSomeLight","nodeGroup","_firstTime","_runDataSource","dataSource","handleData","ipAddressLoader","light","ambientLight","load","tracker","_loadAdditionalInfoAbout","i","defaultQuad","defaultVertexShader","defaultFragmentShader","ScreenQuad","width","height","top","left","texture","uTexture","uSize","depthWrite","frustumCulled","renderOrder","_pixels","_componentSetters","setWidth","setHeight","setTop","setLeft","_components","screenSize","setSize","setOffset","setScreenSize","pi","call","v","parseInt","w","Background","quad","BgShader","install","h","components","FPSCounter","showFps","mouseEnterX","mouseEnterY","sceneMode","onKeyDown","code","resetCamera","onMouseMove","clientX","clientY","controls","rotate","onMouseEnter","onMouseLeave","reset","resizeRendererToDisplaySize","renderer","canvas","domElement","clientWidth","clientHeight","camera","aspect","updateProjectionMatrix","needResize","composer","_width","_height","bloomPass","bg","render","clock","getDelta","$refs","content","requestAnimationFrame","createCamera","window","innerWidth","innerHeight","createCameraControl","CameraControls","cfg","dragToOffset","maxDistance","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","makeSkybox","makeRenderer","antialias","logarithmicDepthBuffer","devicePixelRatio","setPixelRatio","renderScene","RenderPass","EffectComposer","addPass","bloomCfg","UnrealBloomPass","buildScene","setSceneMode","isButtonSelectedClass","modeName","mounted","unmounted","MainScreen","computed","created","document","preloading","preloadFont","characters","emitter","mitt","app","createApp","App","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","getter","__esModule","a","definition","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}