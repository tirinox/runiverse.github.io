{"version":3,"file":"js/app.2c144906.js","mappings":"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","sources":["webpack://thorviz/./src/App.vue","webpack://thorviz/./src/components/MainScreen.vue","webpack://thorviz/./src/config.js","webpack://thorviz/./src/components/parts/FPSCounter.vue","webpack://thorviz/./src/helpers/3D.js","webpack://thorviz/./src/helpers/EventTypes.js","webpack://thorviz/./src/components/parts/FPSCounter.vue?9287","webpack://thorviz/./src/helpers/MathUtil.js","webpack://thorviz/./src/helpers/physics/PhysicalObject.js","webpack://thorviz/./src/visual/shader/billboard.vert","webpack://thorviz/./src/visual/shader/node_obj_2.frag","webpack://thorviz/./src/helpers/TextBillboard.js","webpack://thorviz/./src/helpers/NodeEvent.js","webpack://thorviz/./src/helpers/THORUtil.js","webpack://thorviz/./src/helpers/data/NodeInfo.js","webpack://thorviz/./src/visual/NodeObject.js","webpack://thorviz/./src/helpers/physics/Simulation.js","webpack://thorviz/./src/visual/TitleLabel3D.js","webpack://thorviz/./src/visual/modes/ModeBase.js","webpack://thorviz/./src/helpers/physics/Attractor.js","webpack://thorviz/./src/helpers/physics/AttractorShape.js","webpack://thorviz/./src/helpers/physics/TCLogoShape.js","webpack://thorviz/./src/visual/modes/ModeNormal.js","webpack://thorviz/./src/visual/modes/ModeStatus.js","webpack://thorviz/./src/helpers/physics/CirclePack.js","webpack://thorviz/./src/helpers/data/IPAddressInfo.js","webpack://thorviz/./src/visual/modes/ModeProvider.js","webpack://thorviz/./src/helpers/data/Version.js","webpack://thorviz/./src/visual/modes/ModeVersion.js","webpack://thorviz/./src/visual/modes/ModeBond.js","webpack://thorviz/./src/visual/shader/globe_atmo_textured.frag","webpack://thorviz/./src/visual/shader/standard.vert","webpack://thorviz/./src/visual/modes/ModeGeo.js","webpack://thorviz/./src/visual/NodeGroup.js","webpack://thorviz/./src/helpers/data/NodeTracker.js","webpack://thorviz/./src/helpers/data/NodeSet.js","webpack://thorviz/./src/helpers/data/URLDataSource.js","webpack://thorviz/./src/helpers/data/Storage.js","webpack://thorviz/./src/visual/MainScene.js","webpack://thorviz/./src/visual/shader/bg_smoke.frag","webpack://thorviz/./src/visual/helpers/ScreenQuad.js","webpack://thorviz/./src/visual/helpers/Background.js","webpack://thorviz/./src/components/parts/ControlPanel.vue","webpack://thorviz/./src/components/parts/ControlPanel.vue?8974","webpack://thorviz/./src/components/NodeDetailsWindow.vue","webpack://thorviz/./src/components/NodeDetailsWindow.vue?1c42","webpack://thorviz/./src/visual/CameraController.js","webpack://thorviz/./src/components/parts/LoadingIndicator.vue","webpack://thorviz/./src/components/parts/LoadingIndicator.vue?a62b","webpack://thorviz/./src/visual/helpers/TrailRenderer.js","webpack://thorviz/./src/visual/helpers/TrailTesting.js","webpack://thorviz/./src/visual/TrailTestScene.js","webpack://thorviz/./src/visual/NodeObjTestScene.js","webpack://thorviz/./src/components/MainScreen.vue?8f35","webpack://thorviz/./src/App.vue?7ccd","webpack://thorviz/./src/main.js","webpack://thorviz/webpack/bootstrap","webpack://thorviz/webpack/runtime/chunk loaded","webpack://thorviz/webpack/runtime/compat get default export","webpack://thorviz/webpack/runtime/define property getters","webpack://thorviz/webpack/runtime/global","webpack://thorviz/webpack/runtime/hasOwnProperty shorthand","webpack://thorviz/webpack/runtime/make namespace object","webpack://thorviz/webpack/runtime/node module decorator","webpack://thorviz/webpack/runtime/jsonp chunk loading","webpack://thorviz/webpack/startup"],"sourcesContent":["<template>\n    <MainScreen></MainScreen>\n</template>\n\n<script>\nimport MainScreen from \"@/components/MainScreen\";\nimport {preloadFont} from \"troika-three-text\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'App',\n    components: {\n        MainScreen,\n    },\n    data() {\n        return {}\n    },\n    computed: {},\n    created() {\n        document.title = 'THORViz'\n        this.preloading()\n    },\n    methods: {\n        preloading() {\n            preloadFont(\n                {\n                    font: Config.Font.Main,\n                    characters: 'abcdefghijklmnopqrstuvwxyz1234567890'\n                },\n                () => {\n                    console.log('font loading done')\n                }\n            )\n        }\n    }\n}\n</script>\n\n<style>\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: normal;\n    src: local('Norse'), url('../public/fonts/Norse-KaWl.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: bold;\n    src: local('Norse-Bold'), url('../public/fonts/NorseBold-2Kge.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'EXO2';\n    src: url('../public/fonts/Exo2-VariableFont_wght.ttf') format('truetype');\n}\n\n@supports(padding:max(0px)) {\n    body, header, footer {\n        padding-left: min(0vmin, env(safe-area-inset-left));\n        padding-right: min(0vmin, env(safe-area-inset-right));\n    }\n}\n\nhtml, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: 'EXO2', monospace;\n    background: black;\n    color: turquoise;\n}\n\na {\n    color: turquoise;\n}\n\na:visited {\n    text-decoration: none;\n}\n\n</style>\n","<template>\n    <div class=\"container\">\n        <!-- 3D -->\n        <div class=\"canvas-container\">\n            <canvas\n                ref=\"canvas\"\n                class=\"canvas-full\"\n                tabindex=\"1\"\n                @keypress.prevent=\"onKeyDown\"\n                @mousemove=\"onMouseMove\"\n                @mouseenter=\"onMouseEnter\"\n                @mouseleave=\"onMouseLeave\"\n                @click.prevent=\"onClick\"\n            >\n            </canvas>\n            <FPSCounter\n                v-show=\"showFps\"\n                ref=\"fps\"\n            >\n            </FPSCounter>\n\n            <LoadingIndicator v-if=\"isLoading\"></LoadingIndicator>\n\n            <ControlPanel @mode-selected=\"setSceneMode\" v-if=\"fullyLoaded\"></ControlPanel>\n        </div>\n\n        <!-- UI -->\n        <div class=\"ui-container\">\n            <keep-alive>\n                <NodeDetailsWindow\n                    v-if=\"nodeDetailsVisible\"\n                    :node=\"nodeToViewDetails\"\n                    :node-set=\"nodeSet\"\n                    :is-left=\"nodeDetailsIsLeft\"\n                    @close=\"onCloseDetails\">\n                </NodeDetailsWindow>\n            </keep-alive>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\nimport \"@/css/common.css\"\nimport * as THREE from \"three\"\nimport {Config} from \"@/config\";\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport {UnrealBloomPass} from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport FPSCounter from \"@/components/parts/FPSCounter\";\nimport {MainScene} from \"@/visual/MainScene\";\nimport TWEEN from \"tween.js\";\nimport {Background} from \"@/visual/helpers/Background\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport ControlPanel from \"@/components/parts/ControlPanel\";\nimport NodeDetailsWindow from \"@/components/NodeDetailsWindow\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport {CameraController} from \"@/visual/CameraController\";\nimport LoadingIndicator from \"@/components/parts/LoadingIndicator\";\nimport _ from \"lodash\";\nimport {shallowRef} from \"vue\";\nimport {TrailTestScene} from \"@/visual/TrailTestScene\";\nimport {NodeObjTestScene} from \"@/visual/NodeObjTestScene\";\n\nexport default {\n    name: 'MainScreen',\n    components: {LoadingIndicator, NodeDetailsWindow, ControlPanel, FPSCounter},\n    props: {},\n\n    data() {\n        return {\n            isLoading: true,\n\n            showFps: Config.Debug.ShowFPS,\n\n            mouseEnterX: 0,\n            mouseEnterY: 0,\n\n            tickCounter: 0,\n\n            sceneMode: 'normal',\n\n            fullyLoaded: false,\n\n            nodeDetailsVisible: false,\n            nodeDetailsIsLeft: true,\n            nodeToViewDetails: new NodeInfo(),\n            zoomedToNode: false,\n\n            nodeSet: shallowRef(),\n        }\n    },\n\n    methods: {\n        onKeyDown(event) {\n            if (event.code === 'KeyR') {\n                this.cameraController.reset()\n            } else if (event.code === 'KeyF') {\n                this.showFps = !this.showFps\n            } else if (event.code === 'KeyH') {\n                console.log('help?')\n            }\n            // event.target.blur();\n        },\n\n        choseWindowSide(mouseEvent) {\n            this.nodeDetailsIsLeft = !(mouseEvent.clientX < window.innerWidth * 0.5)\n        },\n\n        onMouseMove(event) {\n            const x = event.clientX\n            const y = event.clientY\n            if (!this.mouseEnterX) {\n                this.mouseEnterX = x\n                this.mouseEnterY = y\n                return\n            }\n            const scale = Config.Controls.Camera.MouseMoveStrength\n            const dx = this.mouseEnterX - x\n            const dy = this.mouseEnterY - y\n            this.mouseEnterX = x\n            this.mouseEnterY = y\n            this.cameraController.controls.rotate(dx * scale, dy * scale)\n\n            const pickIntersection = this._pickObject(event)\n            if(pickIntersection) {\n                const pickedName = pickIntersection?.object?.name\n                this.content.nodeGroup.setElevatedNode(pickedName)\n\n                this.choseWindowSide(event)\n\n                if (!this.zoomedToNode) {\n                    this.nodeDetailsVisible = !!pickedName\n                    if (this.nodeDetailsVisible) {\n                        this.nodeToViewDetails = this.content.findNodeByAddress(pickedName)\n                    }\n                }\n            } else if(!this.zoomedToNode) {\n                this.nodeDetailsVisible = false\n                // this.nodeToViewDetails = this.content.findNodeByAddress(null)\n            }\n        },\n\n        onMouseEnter(event) {\n            this.mouseEnterX = event.clientX\n            this.mouseEnterY = event.clientY\n        },\n\n        onMouseLeave() {\n        },\n\n        _pickObject(event, thoughtful = false) {\n            if (!this.raycaster || !this.content.nodeGroup) {\n                return null\n            }\n\n            const pickPosition = this.getCanvasRelativePosition(event)\n\n            // cast a ray through the frustum\n            this.raycaster.setFromCamera(pickPosition, this.cameraController.camera);\n            // get the list of objects the ray intersected\n            const intersectedObjects = this.raycaster.intersectObjects(this.content.nodeGroup.holder.children, true);\n            if (thoughtful) {\n                console.log('Objects hit by the ray caster: ' + intersectedObjects.length)\n            }\n\n            const namedObjects = _.filter(intersectedObjects, o => o.object.name && o.object.name !== '')\n            return namedObjects.length ? namedObjects[0] : null\n        },\n\n        onClick(event) {\n            const pickedObject = this._pickObject(event, true)\n            if (pickedObject && pickedObject.object) {\n                const nodeAddress = pickedObject.object.name\n                if (nodeAddress && nodeAddress.startsWith('thor')) {\n                    this.choseWindowSide(event)\n                    this._onPickNodeObject(nodeAddress)\n                }\n            } else {\n                this.nodeDetailsVisible = false\n                this.zoomedToNode = false\n                this.cameraController.restoreCamera()\n            }\n        },\n\n        _onPickNodeObject(nodeAddress) {\n            console.log('Picked node:', nodeAddress)\n            this.content.pick(nodeAddress)\n\n            this.nodeToViewDetails = this.content.findNodeByAddress(nodeAddress)\n            this.nodeDetailsVisible = true\n\n            const nodeObj = this.content.nodeGroup.getByName(nodeAddress)\n            if (nodeObj) {\n                this.zoomedToNode = true\n                this.cameraController.cameraLookAtNode(nodeObj, this.content.nodeGroup.isCurrentModeFlat)\n            }\n        },\n\n        getCanvasRelativePosition(event) {\n            const rect = this.canvas.getBoundingClientRect()\n            const pos = {\n                x: event.clientX - rect.left,\n                y: event.clientY - rect.top,\n            }\n            return {\n                x: (pos.x / this.canvas.clientWidth) * 2 - 1,\n                y: -(pos.y / this.canvas.clientHeight) * 2 + 1\n            }\n        },\n\n        resizeRendererToDisplaySize() {\n            const renderer = this.renderer\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n\n            const needResize = this.composer._width !== width || this.composer._height !== height;\n            if (needResize) {\n                renderer.setSize(width, height, false);\n                if (this.bloomPass) {\n                    this.bloomPass.setSize(width, height);\n                }\n                this.composer.setSize(width, height);\n                if (this.bg) {\n                    this.bg.setSize(width, height)\n                }\n\n                this.cameraController.onResize()\n            }\n\n            return needResize;\n        },\n\n        render() {\n            // try {\n            let delta = this.clock.getDelta();\n\n            if (document.visibilityState === 'hidden') {\n                return\n            } else if (delta > 0.4) {\n                delta = 0.01\n            }\n\n            this.resizeRendererToDisplaySize(this.renderer)\n            TWEEN.update()\n            if(this.$refs.fps) {\n                this.$refs.fps.update(delta, this.scene)\n            }\n            this.cameraController.update(delta)\n            this.content.update(delta)\n            if (this.bg) {\n                this.bg.update(delta)\n            }\n            this.composer.render(delta)\n            // } catch (e) {\n            //     console.error('Render error! ' + e)\n            // }\n\n            requestAnimationFrame(this.render);\n        },\n\n        makeSkybox() {\n            if (Config.Scene.Background.Enabled) {\n                // this.bg = new Background(this.scene)\n                // this.bg = new BlackgroundStaticBox(this.scene, Config.Scene.Sky.SkyBox, Config.Scene.Sky.SkyBoxExt)\n                this.bg = new Background(this.scene)\n                this.bg.install()\n            }\n        },\n\n        makeRenderer(canvas) {\n            let renderer = this.renderer = new THREE.WebGLRenderer({\n                canvas,\n                antialias: false,\n                logarithmicDepthBuffer: Config.Renderer.LogZBuffer,\n            });\n\n            if (devicePixelRatio) {\n                console.log(`Renderer: Setting devicePixelRatio = ${devicePixelRatio}.`)\n                renderer.setPixelRatio(devicePixelRatio)\n            }\n\n            const renderScene = new RenderPass(this.scene, this.cameraController.camera);\n\n            this.composer = new EffectComposer(renderer);\n            this.composer.addPass(renderScene);\n\n            const bloomCfg = Config.Effects.Bloom\n            if (bloomCfg.Enabled) {\n                this.bloomPass = new UnrealBloomPass(\n                    new THREE.Vector2(window.innerWidth, window.innerHeight),\n                    bloomCfg.Strength,\n                    bloomCfg.Radius,\n                    bloomCfg.Threshold)\n                this.composer.addPass(this.bloomPass);\n            }\n        },\n\n        buildScene() {\n            this.scene.add(this.cameraController.camera)\n            this.makeSkybox()\n\n            const mode = Config.Scene.DebugMode\n            if(mode === 'nodeobj') {\n                this.content = new NodeObjTestScene(this.scene, this.cameraController.camera)\n            } else if(mode === 'trail') {\n                this.content = new TrailTestScene(this.scene, this.cameraController.camera)\n            } else {\n                this.content = new MainScene(this.scene, this.cameraController.camera)\n            }\n        },\n\n        setSceneMode(mode) {\n            this.sceneMode = mode\n            if (this.content.nodeGroup) {\n                this.content.nodeGroup.mode = mode\n            }\n        },\n\n        onFullyLoaded() {\n            console.log('fully loaded! removing loading screen...')\n            this.isLoading = false\n            this.fullyLoaded = true\n        },\n\n        onDataArrived(nodeSet) {\n            this.nodeSet = nodeSet\n        },\n\n        onCloseDetails() {\n            this.zoomedToNode = false\n            this.nodeDetailsVisible = false\n            this.nodeToViewDetails = new NodeInfo()\n            this.cameraController.restoreCamera()\n        },\n    },\n\n    mounted() {\n        this.canvas = this.$refs.canvas\n\n        this.clock = new THREE.Clock()\n        this.scene = new THREE.Scene()\n\n        this.cameraController = new CameraController(this.canvas)\n        this.makeRenderer(this.canvas)\n        this.resizeRendererToDisplaySize()\n        this.buildScene()\n\n        this.raycaster = new THREE.Raycaster()\n        emitter.on(EventTypes.FullyLoaded, this.onFullyLoaded)\n        emitter.on(EventTypes.DataSourceTick, this.onDataArrived)\n\n        requestAnimationFrame(this.render);\n    },\n\n    unmounted() {\n        this.content.dispose()\n        this.cameraController.dispose()\n        emitter.off(EventTypes.FullyLoaded)\n        emitter.off(EventTypes.DataSourceTick)\n    }\n}\n\n</script>\n\n<style>\n\n.container {\n    position: relative;\n}\n\n.canvas-container {\n    position: absolute;\n    z-index: 8;\n}\n\n.ui-container {\n    position: absolute;\n    z-index: 10;\n}\n\n.canvas-full {\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n}\n\ncanvas {\n}\n\n*:focus {\n    outline: none;\n}\n\n</style>\n","const IsProduction = process.env.NODE_ENV !== 'development'\nconsole.log('Env = ', process.env.NODE_ENV)\n\nconst Live = true\n\nexport const Config = {\n    DataSource: {\n        NodesURL: (Live ?\n            'https://thornode.ninerealms.com' :\n            'http://localhost:8080/data/samplenodes.json'),\n\n        Nodes: {\n            PollPeriod: 3000.0, // msec\n        },\n\n        LastBlock: {\n            PollPeriod: 10000.0, // msec\n        },\n\n        ReactRandomDelay: 500.0, // msec\n        NodeJuggler: {\n            // Enabled: !IsProduction\n            Enabled: false\n        }\n    },\n    Font: {\n        // Main: 'fonts/NorseBold-2Kge.otf'\n        Main: 'fonts/Exo2-VariableFont_wght.ttf'\n    },\n    Effects: {\n        Bloom: {\n            Enabled: true,\n            Strength: 0.65,\n            Threshold: 0.5,\n            Radius: 1.2,\n        }\n    },\n    Controls: {\n        Camera: {\n            Distance: {\n                Min: 800,\n                Max: 2900,\n                Start: 2000,\n            },\n            AzimuthAngleLimit: 180,\n            PolarAngleLimit: 180,\n            MouseMoveStrength: 0.0002,\n\n            Animation: {\n                Duration: 500.0,\n                DistanceWhenZoomed: 300.0,\n                Shift: {\n                    X: -200.0\n                }\n            }\n        },\n    },\n    Scene: {\n        DebugMode: false, // 'nodeobj',\n\n        InitialMode: IsProduction ? 'normal' : 'bond',\n\n        Background: {\n            Enabled: IsProduction,\n        },\n        Sky: {\n            SkyBox: 'texture/skybox/star',\n            SkyBoxExt: 'png',\n        },\n        NodeObject: {\n            Simple: false,\n            PlaneScale: 1.0,\n            MinRadius: 12.0,\n            MaxScale: 80.0,\n            MinScale: 10.0,\n            ScaleFactor: 1.0,\n            RadiusFactor: 0.3,\n            Animation: {\n                // todo use this configs!\n                ReactStatus: {\n                    DurationIn: 500, // ms\n                    DurationOut: 1250,\n                    BloatScale: 1.5,\n                },\n                ReactSlash: {\n                    Force: 100.0,\n                    RedDuration: 150.0, // ms\n                }\n            },\n            Rust: {\n                MaxLagToFullRust: 2 * 60 * 60 * 24, // sec,\n                MaxStrength: 0.85,\n            },\n\n        },\n        Globe: {\n            Enabled: true,\n            Details: 64,\n            Radius: 600.0,\n            NodeElevation: 20.0,\n            TextureMap: 'texture/globe/2k_earth_nightmap.jpeg',\n            // TextureMap: 'texture/globe/2k_earth_daymap.jpeg',\n            Clouds: {\n                ElevationScale: 1.005,\n                Opacity: 0.05,\n                Texture: 'texture/globe/earth_atmo.jpeg',\n            },\n            Atmosphere: {\n                ElevationScale: 1.15,\n            },\n            InnerAtmosphere: {\n                Enabled: true,\n            }\n        },\n    },\n    Physics: {\n        BaseForce: 3500.0,\n        RepelForce: 200.0, // 2000\n        Startup: {\n            SimulationSteps: 10,\n            DeltaTime: 0.1\n        },\n        BaseFriction: 0.07, //0.04\n        MaxSpeedSq: Math.pow(15000, 2),\n        Attractor: {\n            Flat: {\n                DeltaZ: 1.0,\n            }\n        },\n\n    },\n    Debug: {\n        ShowFPS: false,\n    },\n    Renderer: {\n        LogZBuffer: true,\n        // LogZBuffer: false,\n    },\n}\n\nexport const Colors = {\n    LightningBlue: 0x00CCFF,\n    YggdrasilGreen: 0x33FF99,\n    MidgardTurqoise: 0x23DCC8,\n    NightBlack: 0x101921\n}\n","<template>\n    <div class=\"fps-counter\">\n        <span><strong>{{ Number(fps).toFixed(2) }}</strong> FPS, {{ objCount }} objects</span>\n        <span class=\"activity\" v-show=\"activityIndicator\">•</span>\n    </div>\n</template>\n\n<script>\n\nimport {countObjects} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\n\nexport default {\n    name: 'FPSCounter',\n    props: {\n        updatePeriod: {\n            type: Number,\n            default: 1.0\n        }\n    },\n    data() {\n        return {\n            fps: 0.0,\n            objCount: 0,\n            activityIndicator: false,\n            lastUpdateTime: 0.0\n        }\n    },\n    methods: {\n        pokeActivity() {\n            this.activityIndicator = true\n            setTimeout(() => {\n                this.activityIndicator = false\n            }, 100)\n        },\n\n        update(delta, scene) {\n            if (delta > 0 && +Date.now() - this.updatePeriod * 1000 > this.lastUpdateTime) {\n                this.fps = 1.0 / delta\n                this.objCount = countObjects(scene)\n                this.lastUpdateTime = +Date.now()\n            }\n        },\n    },\n    unmounted() {\n        emitter.off(EventTypes.Activity, this.pokeActivity)\n    },\n    mounted() {\n        emitter.on(EventTypes.Activity, this.pokeActivity)\n    }\n}\n\n</script>\n\n<style scoped>\n\n.fps-counter {\n    text-align: left;\n    font-size: 14pt;\n    color: whitesmoke;\n    position: absolute;\n    margin: 10px;\n    left: 0;\n    top: 0;\n}\n</style>","import * as THREE from \"three\";\n\nexport function countObjects(parent) {\n    let numOfMeshes = 0;\n    parent.traverse(function () {\n        numOfMeshes++;\n    });\n    return numOfMeshes\n}\n\nexport function clearObject(obj) {\n    if (obj) {\n        obj.remove.apply(obj, obj.children);\n    }\n}\n\nexport function longLatTo3D(long, lat, r = 1) {\n    // const phi = (lat + 180.0) * PI180\n    // const theta = (long + 180.0) / PI180\n    // const x = -r * Math.cos(phi) * Math.cos(theta)\n    // const y = r * Math.cos(phi) * Math.sin(theta)\n    // const z = r * Math.sin(phi)\n\n    const phi = Math.PI * (0.5 - (lat / 180));\n    const theta = Math.PI * (0.5 + long / 180);\n    const spherical = new THREE.Spherical(r, phi, theta);\n    return new THREE.Vector3().setFromSpherical(spherical);\n}\n\nexport function distanceXY(v1, v2) {\n    const dx = v1.x - v2.x\n    const dy = v1.y - v2.y\n    return Math.sqrt(\n        dx * dx + dy * dy\n    )\n}\n","import mitt from \"mitt\";\n\nexport const EventTypes = {\n    FullyLoaded: 'fully_loaded',\n    DataSourceTick: 'data_source_tick',\n    Activity: 'activity',\n}\n\nexport const emitter = mitt();\n\nexport function dbgEmmitAfter(name, after_ms = 1000) {\n    setTimeout(() => {\n        emitter.emit(name)\n    }, after_ms)\n}\n\nexport function dbgSimulateLoaded() {\n    dbgEmmitAfter(EventTypes.FullyLoaded, 100)\n}\n","import { render } from \"./FPSCounter.vue?vue&type=template&id=27eb1626&scoped=true\"\nimport script from \"./FPSCounter.vue?vue&type=script&lang=js\"\nexport * from \"./FPSCounter.vue?vue&type=script&lang=js\"\n\nimport \"./FPSCounter.vue?vue&type=style&index=0&id=27eb1626&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27eb1626\"]])\n\nexport default __exports__","import {Vector3} from \"three\";\nimport _ from \"lodash\";\nimport numbro from 'numbro';\n\nexport function defaultValue(x, defaultValue) {\n    return x === undefined ? defaultValue : x\n}\n\nexport function dec2hex(dec) {\n    return dec.toString(16).padStart(2, \"0\")\n}\n\nexport class Random {\n    static getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    static getRandomFloat(min, max) {\n        return Math.random() * (max - min) + min\n    }\n\n    static getRandomSample(array) {\n        if (!array) {\n            return null\n        }\n        const index = Random.getRandomInt(array.length)\n        return array[index]\n    }\n\n    static removeRandomItem(array) {\n        if (Math.random() > 0.5) {\n            const index = Random.getRandomInt(array.length)\n            array.splice(index, 1)\n        }\n        return array\n    }\n\n    static randomVector({xMin, xMax, yMin, yMax, zMin, zMax}) {\n        xMin = defaultValue(+xMin, -10)\n        xMax = defaultValue(+xMax, 10)\n        yMin = defaultValue(+yMin, -10)\n        yMax = defaultValue(+yMax, 10)\n        zMin = defaultValue(+zMin, -10)\n        zMax = defaultValue(+zMax, 10)\n\n        return new Vector3(\n            Random.getRandomFloat(xMin, xMax),\n            Random.getRandomFloat(yMin, yMax),\n            Random.getRandomFloat(zMin, zMax),\n        )\n    }\n\n    static randomOnCircle(r = 100, cx = 0, cy = 0) {\n        const phase = Random.getRandomFloat(0, 2 * Math.PI)\n        return new Vector3(\n            cx + r * Math.cos(phase),\n            cy + r * Math.sin(phase)\n        )\n    }\n\n    static getRandomIntRange(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;  // [min, max)\n    }\n\n    // generateId :: Integer -> String\n    static generateId(len) {\n        const arr = new Uint8Array((len || 20) / 2)\n        window.crypto.getRandomValues(arr)\n        return Array.from(arr, dec2hex).join('')\n    }\n}\n\nexport class Section {\n    constructor(p1, p2) {\n        this.p1 = p1\n        this.p2 = p2\n    }\n\n    get dx() {\n        return this.p2.x - this.p1.x\n    }\n\n    get dy() {\n        return this.p2.y - this.p1.y\n    }\n\n    whichSide(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n        return Math.sign(A * C - B * D);\n    }\n\n    get center() {\n        return {\n            x: 0.5 * (this.p1.x + this.p2.x),\n            y: 0.5 * (this.p1.y + this.p2.y)\n        }\n    }\n\n    nearestPoint(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n\n        const dot = A * C + B * D;\n        const len_sq = C * C + D * D;\n        let param = -1;\n        if (len_sq !== 0) {\n            param = dot / len_sq;\n        }\n\n        if (param < 0) {\n            x = this.p1.x\n            y = this.p1.y\n        } else if (param > 1) {\n            x = this.p2.x\n            y = this.p2.y\n        } else {\n            x = this.p1.x + param * C;\n            y = this.p1.y + param * D;\n        }\n        return {x, y}\n    }\n\n    pDistance(xo, yo) {\n        const nearestPoint1 = this.nearestPoint(xo, yo)\n        return new Section(nearestPoint1, {x: xo, y: yo}).length\n    }\n\n    get length() {\n        const dx = this.dx\n        const dy = this.dy\n        return Math.sqrt(dx * dx + dy * dy)\n    }\n}\n\nexport class Util {\n    static clamp(x, xMin, xMax) {\n        return Math.min(+xMax, Math.max(+xMin, +x))\n    }\n\n    static centerOf(group) {\n        if (!group || !group.length) {\n            return\n        }\n        let sumX = _.sumBy(group, item => item.x)\n        let sumY = _.sumBy(group, item => item.y)\n        return {\n            x: sumX / group.length,\n            y: sumY / group.length\n        }\n    }\n\n    static _signHelper(p1, p2, p3) {\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n    }\n\n    static pointInTriangle(pt, threePts) {\n        const [v1, v2, v3] = threePts\n        const d1 = Util._signHelper(pt, v1, v2);\n        const d2 = Util._signHelper(pt, v2, v3);\n        const d3 = Util._signHelper(pt, v3, v1);\n\n        const hasNeg = (d1 < 0) || (d2 < 0) || (d3 < 0);\n        const hasPos = (d1 > 0) || (d2 > 0) || (d3 > 0);\n\n        return !(hasNeg && hasPos);\n    }\n}\n\nexport function shortNumber(x, mantissa = 2, postFix = '') {\n    return numbro(x).format({\n        average: true,\n        mantissa,\n    }) + postFix\n}\n\nexport function fullNumber(x, postFix) {\n    return numbro(x).format({\n        thousandSeparated: true\n    }) + postFix\n}\n\nexport const RUNE = 'Rune'\n\nexport function shortRune(x, mantissa = 2) {\n    return shortNumber(x, mantissa, ' ' + RUNE)\n}\n\nexport function fullRune(x) {\n    return fullNumber(x, ' ' + RUNE)\n}\n\nexport function smoothStep(min, max, value) {\n    var x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}","import {Vector3} from \"three\";\nimport {Util} from \"@/helpers/MathUtil\";\nimport {Config} from \"@/config\";\n\nexport class PhysicalObject {\n    constructor() {\n        this.mass = 1.0\n        this.force = new Vector3()\n        this.velocity = new Vector3()\n        this.friction = 0.0\n        this.attractors = []\n    }\n\n    update(dt) {\n        if (this.attractors.forEach) {\n            this.attractors.forEach(attr => attr.applyForce(this))\n        } else if (this.attractors.applyForce) {\n            this.attractors.applyForce(this)\n        }\n\n        const acceleration = this.force.multiplyScalar(this.mass)\n        this.velocity.copy(this.velocity.clone().add(acceleration.multiplyScalar(dt)))\n        this.velocity.multiplyScalar(Util.clamp(1.0 - this.friction, 0.0, 1.0))\n        if (this.velocity.lengthSq() > Config.Physics.MaxSpeedSq) {\n            this.velocity.setLength(Math.sqrt(Config.Physics.MaxSpeedSq))\n        }\n        this.realObject.position.add(this.velocity.clone().multiplyScalar(dt))\n    }\n\n    nullifyForce() {\n        this.force.set(0.0, 0.0, 0.0)\n    }\n\n    get radius() {\n        return 1.0\n    }\n\n    applyForceTo(direction, force) {\n        this.force.add(direction.copy().multiplyScalar(force))\n    }\n\n    get realObject() {\n        return this\n    }\n\n    repel(physObj, forceMult = 100.0) {\n        if (physObj === this) {\n            return\n        }\n\n        const thisPos = this.realObject.position\n        const otherPos = physObj.realObject.position\n\n        const d = thisPos.distanceTo(otherPos)\n        const minDistance = (this.radius + physObj.radius)\n        if (d < minDistance) {\n            const lineDir = thisPos\n                .clone()\n                .sub(otherPos)\n                .normalize()\n                .multiplyScalar(forceMult)\n            this.force.add(lineDir)\n            physObj.force.add(lineDir.negate())\n        }\n    }\n\n    get boundingBox() {\n        const x = this.realObject.position.x\n        const y = this.realObject.position.y\n        const r = this.radius\n        return {\n            minX: x - r,\n            minY: y - r,\n            maxX: x + r,\n            maxY: y + r,\n        }\n    }\n\n    shootOut(force = 1) {\n        const velocity = this.o.position.clone().normalize().multiplyScalar(force)\n        this.velocity.copy(velocity)\n    }\n}","export default \"#ifdef USE_LOGDEPTHBUF\\n#ifdef USE_LOGDEPTHBUF_EXT\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#else\\nuniform float logDepthBufFC;\\n#endif\\n#endif\\n\\n// optional: pass 2D rotation angle as an uniform\\nuniform float rotation;\\n// optional: pass 2D center point as an uniform\\nuniform vec2 center;\\n\\nvarying vec2 vUv;\\n\\n// optional: use this define to scale the model according to distance from the camera\\n#define USE_SIZEATTENUATION\\n\\n// [skipped includes]\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    // discard rotation and scale\\n    vec4 mvPosition = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);\\n\\n    // extract model's scale\\n    vec2 scale;\\n    scale.x = length(vec3(modelMatrix[0].x, modelMatrix[0].y, modelMatrix[0].z));\\n    scale.y = length(vec3(modelMatrix[1].x, modelMatrix[1].y, modelMatrix[1].z));\\n\\n    // if not defined, keep model the same size regardless of distance from the camera\\n    #ifndef USE_SIZEATTENUATION\\n    bool isPerspective = isPerspectiveMatrix(projectionMatrix);\\n    if (isPerspective) scale *= - mvPosition.z;\\n    #endif\\n\\n    // if center is not passed as uniform, create vec2 center = vec2(0.0);\\n\\n    // aligned with the camera [and scaled]\\n    vec2 alignedPosition = (position.xy - center) * scale;\\n\\n    // if rotation is not passed as uniform, skip the next block\\n\\n    // rotate 2D\\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y;\\n    rotatedPosition.y = sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y;\\n\\n    // billboard\\n    mvPosition.xy += rotatedPosition;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    // [skipped includes]\\n    #ifdef USE_LOGDEPTHBUF\\n        #ifdef USE_LOGDEPTHBUF_EXT\\n    vFragDepth = 1.0 + gl_Position.w;\\n//    vIsPerspective = float(isPerspectiveMatrix(projectionMatrix));\\n    vIsPerspective = 1.0;\\n        #else\\n//    if (isPerspectiveMatrix(projectionMatrix)) {\\n        gl_Position.z = log2(max(EPSILON, gl_Position.w + 1.0)) * logDepthBufFC - 1.0;\\n        gl_Position.z *= gl_Position.w;\\n//    }\\n        #endif\\n    #endif\\n}\";","export default \"// port from http://glslsandbox.com/e#8625.0 by Duke\\n// Fireball\\n// Awd\\n// @AlexWDunn\\n\\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\nuniform float logDepthBufFC;\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#endif\\n\\nuniform float time;\\n\\nuniform float saturation;\\nuniform float transitionShininess;\\nuniform float rust;\\n\\nuniform vec3 color;\\n\\nvarying vec2 vUv;\\n\\n#define saturate(oo) clamp(oo, 0.0, 1.0)\\n\\n// Quality Settings\\n#define MarchSteps 4\\n// Scene Settings\\n#define ExpPosition vec3(0.0)\\n#define Radius 1.0\\n#define Background vec4(0.0, 0.0, 0.0, 0.0)\\n// Noise Settings\\n#define NoiseSteps 1\\n#define NoiseAmplitude 0.06\\n//#define NoiseFrequency 4.0\\n#define NoiseFrequency 2.0\\n#define Animation vec3(0.0, -3.0, 0.5)\\n\\n// Colour Gradient\\n#define Color1 vec4(1.0, 1.0, 1.0, 1.0)\\n#define Color2 vec4(0.2, 0.8, 1.0, 1.0)\\n#define Color3 vec4(0.2, 0.03, 1.0, 1.0)\\n#define Color4 vec4(0.05, 0.02, 0.02, 0.3)\\n\\nconst float zoom = 2.8f;// 2.5 full\\n\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n//\\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 permute(vec4 x) { return mod289(((x * 34.0) + 1.0) * x); }\\nvec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\\n\\nfloat snoise(vec3 v)\\n{\\n    const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\\n    const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\\n    // First corner\\n    vec3 i = floor(v + dot(v, C.yyy));\\n    vec3 x0 = v - i + dot(i, C.xxx);\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min(g.xyz, l.zxy);\\n    vec3 i2 = max(g.xyz, l.zxy);\\n    vec3 x1 = x0 - i1 + C.xxx;\\n    vec3 x2 = x0 - i2 + C.yyy;// 2.0*C.x = 1/3 = C.y\\n    vec3 x3 = x0 - D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\\n    // Permutations\\n    i = mod289(i);\\n    vec4 p = permute(permute(permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n    float n_ = 0.142857142857;// 1.0/7.0\\n    vec3 ns = n_ * D.wyz - D.xzx;\\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);//  mod(p,7*7)\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_);// mod(j,N)\\n    vec4 x = x_ * ns.x + ns.yyyy;\\n    vec4 y = y_ * ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n    vec4 b0 = vec4(x.xy, y.xy);\\n    vec4 b1 = vec4(x.zw, y.zw);\\n    vec4 s0 = floor(b0) * 2.0 + 1.0;\\n    vec4 s1 = floor(b1) * 2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n    vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\\n    vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\\n    vec3 p0 = vec3(a0.xy, h.x);\\n    vec3 p1 = vec3(a0.zw, h.y);\\n    vec3 p2 = vec3(a1.xy, h.z);\\n    vec3 p3 = vec3(a1.zw, h.w);\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\\n}\\n\\n\\n\\nfloat Turbulence(vec3 position, float minFreq, float maxFreq, float qWidth)\\n{\\n    float value = 0.0;\\n    float cutoff = clamp(0.5 / qWidth, 0.0, maxFreq);\\n    float fade;\\n    float fOut = minFreq;\\n    for (int i = NoiseSteps; i >= 0; i--)\\n    {\\n        if (fOut >= 0.5 * cutoff) break;\\n        fOut *= 2.0;\\n        value += abs(snoise(position * fOut)) / fOut;\\n    }\\n    fade = clamp(2.0 * (cutoff - fOut) / cutoff, 0.0, 1.0);\\n    value += fade * abs(snoise(position * fOut)) / fOut;\\n    return 1.0 - value;\\n}\\n\\nfloat SphereDist(vec3 position)\\n{\\n    return length(position - ExpPosition) - Radius;\\n}\\n\\nvec4 Shade(float distance)\\n{\\n    float c1 = clamp(distance * 5.0 + 0.5, 0.0, 1.0);\\n    float c2 = clamp(distance * 5.0, 0.0, 1.0);\\n    float c3 = clamp(distance * 3.4 - 0.5, 0.0, 1.0);\\n\\n    //    #define Color1 vec4(1.0, 1.0, 1.0, 1.0)   -- white\\n    //    #define Color2 vec4(0.2, 0.8, 1.0, 1.0) --- green\\n    //    #define Color3 vec4(0.2, 0.03, 1.0, 1.0)  -- blue\\n    //    #define Color4 vec4(0.05, 0.02, 0.02, 0.3) -- black transparent\\n\\n    vec4 original = vec4(color, 1.0);\\n    vec4 a = mix(Color1, Color3, c1);\\n    vec4 b = mix(a, Color4, c2);\\n    return mix(original, b, c3);\\n}\\n\\n// Draws the scene\\nfloat RenderScene(vec3 position, out float distance)\\n{\\n    float noise = Turbulence(position * NoiseFrequency + Animation * time, 0.1, 1.5, 0.03) * NoiseAmplitude;\\n    noise = clamp(abs(noise), 0.0, 1.0);\\n    distance = SphereDist(position) - noise;\\n    return noise;\\n}\\n\\n// Basic ray marching method.\\nvec4 March(vec3 rayOrigin, vec3 rayStep)\\n{\\n    vec3 position = rayOrigin;\\n    float distance;\\n    float displacement;\\n    for (int step = MarchSteps; step >= 0; --step)\\n    {\\n        displacement = RenderScene(position, distance);\\n        if (distance < 0.05) break;\\n        position += rayStep * distance;\\n    }\\n    return mix(Shade(displacement), Background, float(distance >= 0.5));\\n}\\n\\nbool IntersectSphere(vec3 ro, vec3 rd, vec3 pos, float radius, out vec3 intersectPoint)\\n{\\n    vec3 relDistance = (ro - pos);\\n    float b = dot(relDistance, rd);\\n    float c = dot(relDistance, relDistance) - radius * radius;\\n    float d = b * b - c;\\n    intersectPoint = ro + rd * (-b - sqrt(d));\\n    return d >= 0.0;\\n}\\n\\nvec2 fade(vec2 t) {return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);}\\n\\nfloat cnoise(vec2 P) {\\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n    Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\\n    vec4 ix = Pi.xzxz;\\n    vec4 iy = Pi.yyww;\\n    vec4 fx = Pf.xzxz;\\n    vec4 fy = Pf.yyww;\\n    vec4 i = permute(permute(ix) + iy);\\n    vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\\n    vec4 gy = abs(gx) - 0.5;\\n    vec4 tx = floor(gx + 0.5);\\n    gx = gx - tx;\\n    vec2 g00 = vec2(gx.x, gy.x);\\n    vec2 g10 = vec2(gx.y, gy.y);\\n    vec2 g01 = vec2(gx.z, gy.z);\\n    vec2 g11 = vec2(gx.w, gy.w);\\n    vec4 norm = 1.79284291400159 - 0.85373472095314 *\\n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\\n    g00 *= norm.x;\\n    g01 *= norm.y;\\n    g10 *= norm.z;\\n    g11 *= norm.w;\\n    float n00 = dot(g00, vec2(fx.x, fy.x));\\n    float n10 = dot(g10, vec2(fx.y, fy.y));\\n    float n01 = dot(g01, vec2(fx.z, fy.z));\\n    float n11 = dot(g11, vec2(fx.w, fy.w));\\n    vec2 fade_xy = fade(Pf.xy);\\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n    return 2.3 * n_xy;\\n}\\n\\nvec4 doRust(vec4 col, float rust, vec2 uv) {\\n    float noise = cnoise(uv * 9.0 + time * 0.1);\\n    float step = smoothstep(rust - 0.05, rust + 0.05, noise);\\n    float n = cnoise(uv * 10.0 + cnoise(vec2(time, uv.x))) + 0.3;\\n    return col * step + vec4(n * 0.5, 0.1, 0.1, col.a) * (1. - step);\\n}\\n\\nconst float circleThickness = 0.15;\\nconst float circleRadius = 0.78;\\n\\nvoid main()\\n{\\n    vec2 p = vUv * 2.0 - 1.0;\\n\\n    // camera\\n    vec3 ro = zoom * vec3(.7, .7, 0.0);\\n    vec3 ww = normalize(vec3(0.0, 0.0, 0.0) - ro);\\n    vec3 uu = normalize(cross(vec3(0.0, 1.0, 0.0), ww));\\n    vec3 vv = normalize(cross(ww, uu));\\n    vec3 rd = normalize(p.x * uu + p.y * vv + 1.5 * ww);\\n    //    vec3 rd = normalize(p.x*uu + p.y*vv + zoom_f * ww);\\n    vec4 col = Background;\\n    vec3 origin;\\n    if (IntersectSphere(ro, rd, ExpPosition, Radius + NoiseAmplitude * 6.0, origin))\\n    {\\n        col = March(origin, rd);\\n    }\\n\\n    // After FX\\n\\n    float d = length(p);\\n    if (saturation > 1.0) {\\n        //  1.0 - smoothstep(radius-borderThickness, radius, d);\\n        float t = 1.0 - smoothstep(0.0, circleRadius, abs(circleThickness - d));\\n        col = mix(col * saturation, vec4(0.9, 0.9, 1.0, 0.5), clamp(t, 0.0, 0.5));\\n    }\\n\\n    if (transitionShininess > 0.0) {\\n        vec4 shineColor = vec4(0.8, 0.9, 1.0, 1.0);\\n        col += shineColor * transitionShininess * clamp(1.0 - d * 0.9, 0.0, col.a);\\n    }\\n//\\n//    if (rust > 0.0) {\\n//\\n//    }\\n\\n    col = doRust(col, rust, p);\\n\\n    gl_FragColor = col;\\n\\n    // Z buffer\\n    #if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n    // Doing a strict comparison with == 1.0 can cause noise artifacts\\n    // on some platforms. See issue #17623.\\n    gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2(vFragDepth) * logDepthBufFC * 0.5;\\n    #endif\\n}\\n\";","import { createDerivedMaterial } from 'troika-three-utils'\n\nexport function createBillboardMaterial(baseMaterial, opts) {\n    return createDerivedMaterial(\n        baseMaterial,\n        Object.assign(\n            {\n                vertexMainOutro: `\n                    vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n                    vec3 scale = vec3(\n                      length(modelViewMatrix[0].xyz),\n                      length(modelViewMatrix[1].xyz),\n                      length(modelViewMatrix[2].xyz)\n                      );\n                    // size attenuation: scale *= -mvPosition.z * 0.2;\n                    mvPosition.xyz += position * scale;\n                    gl_Position = projectionMatrix * mvPosition;\n                    `\n            },\n            opts\n        )\n    )\n}\n","const EVENT_TYPE = Object.freeze({\n    CREATE: 'create',\n    DESTROY: 'destroy',\n\n    SLASH: 'slash',\n    IP_ADDRESS: 'ip_address',\n    STATUS: 'status',\n    VERSION: 'version',\n    FORCED_LEAVE: 'forced_to_leave',\n    REQUESTED_LEAVE: 'requested_to_leave',\n    AWARD: 'current_award',\n    BOND_CHANGE: 'bond',\n    OBSERVE_CHAIN: 'observe_chains',\n    ACTIVE_BLOCK_HEIGHT: 'active_block_height',\n})\n\nexport class NodeEvent {\n    constructor(type, node, prevNode, currValue, prevValue, nodeSet) {\n        this.type = type\n        this.node = node\n        this.prevNode = prevNode\n        this.currValue = currValue\n        this.prevValue = prevValue\n        this.nodeSet = nodeSet\n        this.isTramp = node ? node.address === '' : false\n    }\n\n    toString() {\n        const addr = this.node ? this.node.address : '?'\n        return `NodeEvent(${this.type}, ${addr}, ${this.currValue} => ${this.prevValue})`\n    }\n}\n\nNodeEvent.EVENT_TYPE = EVENT_TYPE\n","export const SEC_PER_BLOCK = 6.0\n\nexport const THOR_DECIMAL = Math.pow(10, 8)\nexport const THOR_DECIMAL_INV = 1.0 / THOR_DECIMAL\n\nexport function thorToFloat(x) {\n    return parseFloat(x) * THOR_DECIMAL_INV\n}\n","import {thorToFloat} from \"@/helpers/THORUtil\";\n\nexport class NodeInfo {\n    constructor(node) {\n        if (!node) {\n            node = {\n                status: 'Unknown',\n                jail: {},\n                bond_providers: {},\n                preflight_status: {},\n            }\n        }\n\n        this.address = node.node_address\n        this.status = node.status\n        this.bond = thorToFloat(node.bond)\n        this.activeBlockHeight = +node.active_block_height\n        this.bondAddress = node.bond_address\n        this.statusSince = +node.status_since\n        this.requestedToLeave = !!node.requested_to_leave\n        this.forcedToLeave = !!node.forced_to_leave\n        this.leaveHeight = +node.leave_height\n        this.IPAddress = node.ip_address\n        this.version = node.version\n        this.slashPoints = +node.slash_points\n        if(node.jail) {\n            this.jail = {\n                address: node.jail.node_address,\n                releaseHeight: +node.jail.release_height,\n                reason: node.jail.reason,\n            }\n        }\n        this.currentAward = thorToFloat(node.current_award)\n\n        this.observeChains = {}\n\n        if (node['observe_chains']) {\n            for (let {chain, height} of node['observe_chains']) {\n                this.observeChains[chain] = +height\n            }\n            // no TERRA any more...\n            delete this.observeChains['TERRA']\n        }\n\n        if(node.preflight_status) {\n            this.preflightStatus = {\n                status: node.preflight_status.status,\n                reason: node.preflight_status.reason,\n                code: +node.preflight_status.code\n            }\n        }\n\n        if(node.bond_providers) {\n            this.bondProviders = {\n                address: node.bond_providers['node_address'],\n                fee: (+node.bond_providers['node_operator_fee']) / 10000.0,\n                providers: []\n            }\n\n            if (node.bond_providers.providers) {\n                for (let {bond_address, bond} of node.bond_providers.providers) {\n                    this.bondProviders.providers.push({\n                        bond_address,\n                        bond: thorToFloat(bond)\n                    })\n                }\n            }\n        }\n\n        // post init\n        this.shortAddress = this.address ? this.address.substring(this.address.length - 4) : '?'\n\n        this.IPInfo = {\n            flag: '🏳️'\n        }\n\n        // this.requestedToLeave = true\n        // this.forcedtoLeave = true\n    }\n\n    get isActive() {\n        return this.status === NodeStatus.Active\n    }\n\n    get isStandby() {\n        return this.status === NodeStatus.Standby || this.status === NodeStatus.Ready\n    }\n}\n\nexport const NodeStatus = {\n    Standby: 'Standby',\n    Ready: 'Ready',\n    Whitelisted: 'Whitelisted',\n    Disabled: 'Disabled',\n    Active: 'Active',\n    Unknown: 'Unknown',\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial, Vector3} from \"three\";\nimport {Random, smoothStep, Util} from \"@/helpers/MathUtil\";\nimport {Text} from 'troika-three-text'\nimport {Colors, Config} from \"@/config\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport StdVertexShader from '@/visual/shader/billboard.vert'\n// import StdVertexShader from '@/visual/shader/standard.vert'\n// import FragShader1 from '@/visual/shader/node_obj_3_rays.frag'\n// import FragShader1 from '@/visual/shader/node_obj_1.frag'\nimport FragShader1 from '@/visual/shader/node_obj_2.frag'\nimport {randFloat} from \"three/src/math/MathUtils\";\nimport {clamp} from \"lodash\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\nimport TWEEN from \"tween.js\";\n\n\nconst noCfg = Config.Scene.NodeObject\nconst geomSize = noCfg.PlaneScale\n\n// const geometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\nconst geometry = new THREE.BoxGeometry(geomSize, geomSize, geomSize)\n// const geometry = new THREE.IcosahedronGeometry(noCfg.PlaneScale, 1)\n// const geometry = new THREE.PlaneGeometry(noCfg.PlaneScale, noCfg.PlaneScale)\nconst simpleGeometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\n\nconst SlashColor = 0xff3300\n\nconst NormalLabelZ = 42.42\n\nconst CirclePackFactor = 1 / Math.sqrt(0.72)\n\nexport class NodeObject extends PhysicalObject {\n    constructor(node) {\n        super()\n\n        this.node = node\n        this.normalizedBond = this.node.bond / 1_000_000  // millions of Rune\n        this.mass = this.normalizedBond + 1.0\n\n        this.o = new THREE.Group()\n        this.o.name = this.name\n\n        this.attractors = []\n        this.mass = 1.0 + this.normalizedBond * 2.0\n        this.friction = Config.Physics.BaseFriction\n\n        this._makeSphere()\n        this._makeLabel()\n\n        this._reactingToSlash = false\n        this._elevated = false\n    }\n\n    get name() {\n        return this.node.address\n    }\n\n    set elevated(v) {\n        v = Boolean(v)\n        if (this._elevated !== v) {\n            this._elevated = v\n\n            this.material.uniforms.saturation.value = this._elevated ? 1.5 : 1.0\n            this.material.uniformsNeedUpdate = true\n        }\n    }\n\n    get elevated() {\n        return this._elevated\n    }\n\n    _getSphereColor() {\n        let color = 0x111111;\n        const st = this.node.status\n        if (st === NodeStatus.Standby) {\n            color = 0x167a56\n        } else if (st === NodeStatus.Ready) {\n            color = 0x167a8f\n        } else if (st === NodeStatus.Active) {\n            color = Random.getRandomSample([\n                Colors.LightningBlue,\n                Colors.YggdrasilGreen\n            ])\n        } else if (st === NodeStatus.Disabled) {\n            color = 0xee0000\n        } else if (st === NodeStatus.Whitelisted) {\n            color = 0x444444\n        } else if (st === NodeStatus.Unknown) {\n            color = 0x111144\n        }\n        return new THREE.Color(color)\n    }\n\n    _makeSphere() {\n        if (!this.mesh) {\n            if (Config.Scene.NodeObject.Simple) {\n                this._makeSimpleSphere()\n            } else {\n                this._makeCoolSphere()\n            }\n        }\n\n        if (this.material.uniforms) {\n            this.material.uniforms.color.value = this._getSphereColor()\n            this.material.uniformsNeedUpdate = true\n        }\n\n        this.mesh.name = this.name\n        this.mesh.renderOrder = 1\n\n        const scale = this.calculateScale\n        this.mesh.scale.setScalar(scale)\n\n        this.mesh.position.z = randFloat(-0.1, 0.1)\n        this.o.renderOrder = 1\n        this.o.add(this.mesh)\n    }\n\n    _makeSimpleSphere() {\n        // simpleGeometry\n        this.material = new THREE.MeshBasicMaterial({\n            color: this._getSphereColor()\n        })\n        this.mesh = new THREE.Mesh(simpleGeometry, this.material)\n    }\n\n    _makeCoolSphere() {\n        if (!this.material) {\n            this._makeMaterial()\n        }\n\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        return this.mesh\n    }\n\n    _makeMaterial() {\n        // material\n\n        const initRust = -1.0\n\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                \"time\": {value: Random.getRandomFloat(0.0, 100.0)},\n                \"saturation\": {value: 1.0},\n                \"color\": {value: this._getSphereColor()},\n                \"transitionShininess\": {value: 0.0},\n                \"rust\": {value: initRust},\n            },\n            vertexShader: StdVertexShader,\n            fragmentShader: FragShader1,\n            transparent: true,\n            depthTest: true,\n            depthWrite: true,\n            // sizeAttenuation: true,\n        })\n    }\n\n    get calculateScale() {\n        const scale = this.normalizedBond * noCfg.MaxScale\n        return Util.clamp(scale, noCfg.MinScale, noCfg.MaxScale)\n    }\n\n    get realObject() {\n        return this.o\n    }\n\n    get position() {\n        return this.o.position\n    }\n\n    _makeLabel() {\n        const address = this.node.address\n        if (address && address.length >= 4) {\n            const nameTextObj = this.nameTextObj = new Text()\n\n            nameTextObj.text = address.slice(-4)\n            nameTextObj.font = Config.Font.Main\n            nameTextObj.fontWeight = 900\n            nameTextObj.fontSize = 15\n            nameTextObj.position.z = NormalLabelZ\n            nameTextObj.color = this.node.status === NodeStatus.Active ? 0xFFFFFF : 0xBBBBBB;\n            nameTextObj.anchorX = 'center'\n            nameTextObj.anchorY = 'middle'\n            nameTextObj.outlineWidth = 2.0\n            nameTextObj.sync()\n            nameTextObj.renderOrder = 100\n            nameTextObj.name = this.name\n            nameTextObj.material = createBillboardMaterial(new MeshBasicMaterial())\n            nameTextObj.scale.setScalar(\n                clamp(this.normalizedBond * 1.1, 0.5, 1.5)\n            )\n            this.o.add(nameTextObj)\n            this.labelObj = nameTextObj\n        }\n    }\n\n    dispose() {\n        if (this.nameTextObj) {\n            this.nameTextObj.dispose()\n        }\n        this.material.dispose()\n    }\n\n    get radius() {\n        return Math.max(noCfg.MinRadius, this.mesh.scale.x * noCfg.PlaneScale * noCfg.RadiusFactor)\n    }\n\n    static estimateRadiusOfGroup(nodeObjList) {\n        let sum_r2 = 0.0\n        for (const nodeObj of nodeObjList) {\n            sum_r2 += nodeObj.radius * nodeObj.radius\n        }\n        const r = Math.sqrt(sum_r2)\n        return Math.max(0.1, CirclePackFactor * r)\n    }\n\n    update(dt) {\n        super.update(dt);\n\n        if (this.material) {\n            this.material.uniforms.time.value += dt\n        }\n\n        // todo: remove debug\n        // if (Math.random() > 0.99) {\n        //     this._animateTransitionShininess()\n        // }\n    }\n\n    updateFromCamera(camera) {\n        const dir = camera.position.clone().sub(this.position)\n        dir.normalize().multiplyScalar(NormalLabelZ)\n        this.nameTextObj.position.copy(dir)\n    }\n\n    // ----------------- R E A C T I O N S -------------------\n\n    react(event) {\n        this.node = event.node\n        if (event.type === NodeEvent.EVENT_TYPE.OBSERVE_CHAIN) {\n            this.reactChain(event.nodeSet)\n        } else if (event.type === NodeEvent.EVENT_TYPE.SLASH) {\n            this.reactSlash()\n        } else if (event.type === NodeEvent.EVENT_TYPE.STATUS) {\n            this.reactStatusChange(event.node.status)\n        } else if (event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            this.reactVersion()\n        }\n\n        // if(Math.random() > 0.8) {\n        //     this.reactSlash()\n        // }\n    }\n\n    reactChain(nodeSet) {\n        // update: node appearance according chain lag\n        this._updateRust(nodeSet)\n\n        const chainReactionVelocity = 1.0 // 100\n        // this.mesh.rotateZ(1.0)\n        const pos = this.o.position.clone().normalize()\n        const perp = pos.cross(new Vector3(0, 0, 1)).multiplyScalar(chainReactionVelocity)\n        this.velocity.add(perp)\n    }\n\n    reactVersion() {\n        this._animateTransitionShininess()\n    }\n\n    reactSlash() {\n        if (this._reactingToSlash || !this.material) {\n            return\n        }\n\n        const slashForce = 100.0\n        this.shootOut(slashForce)\n        // this.velocity.set(Random.randomOnCircle(slashForce))\n\n        this._animateScale(0.82, 200, 600)\n\n        this._reactingToSlash = true\n\n        const savedColor = this.material.uniforms.color.value.clone()\n\n        this.material.uniforms.color.value.set(SlashColor)\n        this.material.uniformsNeedUpdate = true\n\n        setTimeout(() => {\n            this.material.uniforms.color.value.set(savedColor)\n            this.material.uniformsNeedUpdate = true\n            this._reactingToSlash = false\n        }, 100)\n    }\n\n    reactStatusChange(newStatus) {\n        console.log(`New status ${this.node.status} -> ${newStatus}`)\n        this._animateTransitionShininess()\n    }\n\n    _updateRust(nodeSet) {\n        this.material.uniforms.rust.value = this._getRust(nodeSet)\n        this.material.uniformsNeedUpdate = true\n    }\n\n    _getRust(nodeSet) {\n        if (!this.node.isActive) {\n            return -1.0\n        }\n\n        const rustCfg = Config.Scene.NodeObject.Rust\n\n        const {max} = nodeSet.getChainHeightLagAllSeconds(this.node)\n        const maxRustLag = rustCfg.MaxLagToFullRust\n        const a = smoothStep(0, maxRustLag, max)\n        return 2.0 * clamp(a, 0.0, rustCfg.MaxStrength) - 1.0\n    }\n\n    _animateScale(targetScaleOfNormal,\n                  durationIn = 1000,\n                  durationOut = 1000,\n                  easing = TWEEN.Easing.Sinusoidal.InOut) {\n        const normalScale = this.calculateScale\n        const targetScale = targetScaleOfNormal * normalScale\n        new TWEEN.Tween(this.mesh.scale)\n            .to(new THREE.Vector3(targetScale, targetScale, targetScale), durationIn)\n            .easing(easing)\n            .start()\n            .chain(\n                new TWEEN.Tween(this.mesh.scale)\n                    .to(new THREE.Vector3(normalScale, normalScale, normalScale), durationOut)\n                    .easing(easing)\n            )\n    }\n\n    _animateTransitionShininess() {\n        const durationIn = 500.0\n        const durationOut = durationIn * 2.5\n        const easing = TWEEN.Easing.Sinusoidal.InOut\n\n        new TWEEN.Tween(this.material.uniforms.transitionShininess)\n            .to({value: 1.0}, durationIn)\n            .easing(easing)\n            .start().onComplete(() => {\n            this._makeSphere()\n        }).chain(\n            new TWEEN.Tween(this.material.uniforms.transitionShininess)\n                .to({value: 0.0}, durationOut)\n                .easing(easing)\n        )\n\n        this._animateScale(1.5, durationIn, durationOut)\n    }\n}\n","import _ from \"lodash\";\nimport RBush from \"rbush\";\n\nexport class Simulation {\n    constructor() {\n        this._objects = {}\n\n        this.repelForce = 0.0\n        this.rBush = new RBush()\n        this.repelEnabled = true\n    }\n\n    getByName(name) {\n        return this._objects[name]\n    }\n\n    addObject(name, physObj) {\n        const existing = this.getByName(name)\n        if (existing) {\n            console.warn('PhysObj already exists. No nothing')\n            return existing\n        }\n\n        this._objects[name] = physObj\n    }\n\n    removeObject(name) {\n        const physObj = this.getByName(name)\n        if (!physObj) {\n            console.error('PhysObj not found!')\n            return\n        }\n\n        physObj.dispose()\n        delete this._objects[name]\n    }\n\n    _repelForceCalculation(obj) {\n        let vicinity = this.rBush.search(obj.boundingBox)\n\n        for (const rBushLeaf of vicinity) {\n            if (rBushLeaf.o !== obj) {\n                obj.repel(rBushLeaf.o, this.repelForce)\n            }\n        }\n    }\n\n    _updateObject(physObj, delta) {\n        physObj.nullifyForce()\n        if(this.repelEnabled) {\n            this._repelForceCalculation(physObj)\n        }\n        physObj.update(delta)\n    }\n\n    update(dt) {\n        if (isNaN(dt)) {\n            return\n        }\n        this.rBush = new RBush()\n        this.rBush.load(_.map(_.values(this._objects), physObj => ({\n            ...physObj.boundingBox,\n            o: physObj\n        })))\n        _.forEach(_.values(this._objects), obj => this._updateObject(obj, dt))\n    }\n\n    doNSteps(n, dt = 0.016) {\n        for (let step = 0; step < n; ++step) {\n            this.update(dt)\n        }\n    }\n\n    get physicalObjects() {\n        return _.values(this._objects)\n    }\n\n    get objectPositions() {\n        return _.map(this.physicalObjects, 'position')\n    }\n\n    get allNames() {\n        return _.keys(this._objects)\n    }\n\n    dispose() {\n        this._objects = {}\n        this.rBush.clear()\n    }\n\n    get size() {\n        return _.size(this._objects)\n    }\n\n    get entries() {\n        return _.entries(this._objects)\n    }\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial} from \"three\";\nimport {Text} from 'troika-three-text'\nimport {Config} from \"@/config\";\nimport TWEEN from \"tween.js\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\n\nexport class TitleLabel3D extends THREE.Object3D {\n    constructor(text, scale = 20, rotAngle = -45, billboard = false) {\n        super();\n        this.text = text\n        const t = this.label = new Text()\n        t.font = Config.Font.Main\n        t.fontSize = 10\n        t.scale.set(scale, scale, scale)\n        t.color = 0xFFFFFF\n        t.fillOpacity = 1.0 // 0.5\n        t.anchorX = 'center'\n        t.anchorY = 'middle'\n        t.textAlign = 'center'\n        t.text = text\n        if (billboard) {\n            t.material = createBillboardMaterial(new MeshBasicMaterial({\n                transparent: true,\n            }))\n        }\n        t.rotateX(THREE.MathUtils.degToRad(rotAngle))\n        t.sync()\n        this.t = t\n        this.add(t)\n        this.animDuration = 500\n        this.animDistance = 1500\n        this.easeType = TWEEN.Easing.Back.Out\n    }\n\n    set color(c) {\n        this.t.color = c\n    }\n\n    get color() {\n        return this.t.color\n    }\n\n    set opacity(o) {\n        this.t.material.opacity = o\n    }\n\n    get opacity() {\n        return this.t.material.opacity\n    }\n\n    animateIn() {\n        this.t.position.z = this.animDistance\n        this.opacity = 0.0\n\n        new TWEEN.Tween(this.t.position)\n            .to({z: 0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 1.0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n    }\n\n    animateOut(kill = false) {\n        const expandedDuration = this.animDuration * 5\n        new TWEEN.Tween(this.t.position)\n            .to({z: -this.animDistance * 5}, expandedDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 0.0}, expandedDuration * 0.5)\n            .easing(this.easeType)\n            .start().onComplete(() => {\n            if (kill) {\n                if (this.parent) {\n                    this.parent.remove(this)\n                }\n            }\n        })\n    }\n}","import {TitleLabel3D} from \"@/visual/TitleLabel3D\";\nimport _ from \"lodash\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport TWEEN from \"tween.js\";\n\nexport class ModeBase {\n    constructor(scene) {\n        this.scene = scene\n        this.active = false\n        this.isFlat = true\n        this._labelsHash = {}\n    }\n\n    handleObject(physObj) {\n        +physObj // do nothing\n    }\n\n    reactEvent(event, nodes) {\n        +event;\n        +nodes\n    }\n\n    makeLabel({\n                  text,\n                  position,\n                  scale = 20,\n                  rotation = -45.0,\n                  bb = false,\n                  key = null,\n                  moveIfExists = true\n              }) {\n        if (!text || text === '') {\n            return\n        }\n\n        key = key || Random.generateId()\n\n        if (moveIfExists) {\n            const label = this.findLabelByKey(key)\n            if (label) {\n                new TWEEN.Tween(label.position)\n                    .to(position, 1000.0)\n                    .easing(TWEEN.Easing.Sinusoidal.InOut)\n                    .start();\n                return label\n            }\n        }\n\n        const titleLabel = new TitleLabel3D(text, scale, rotation, bb)\n        titleLabel.key = key\n\n        titleLabel.position.copy(position)\n        this.scene.add(titleLabel)\n\n        this._labelsHash[key] = titleLabel\n\n        return titleLabel\n    }\n\n    onEnter() {\n    }\n\n    _triggerOnEnter(a, b) {\n        this.onEnter(a, b)\n\n        this.active = true\n        _.values(this._labelsHash).forEach(label => label.animateIn())\n    }\n\n    onLeave() {\n    }\n\n    _triggerOnLeave(a, b) {\n        this.onLeave(a, b)\n\n        this.active = false\n        this.clearLabels()\n    }\n\n    findLabelByKey(key) {\n        return this._labelsHash[key]\n    }\n\n    killLabelByKey(key) {\n        const label = this.findLabelByKey(key)\n        if (key) {\n            label.animateOut(true)\n            delete this._labelsHash[key]\n        }\n    }\n\n    clearLabels() {\n        _.values(this._labelsHash).forEach(label => label.animateOut(true))\n\n        this._labelsHash = {}\n    }\n\n    update(dt) {\n        +dt\n    }\n}","import {distanceXY} from \"@/helpers/3D\";\n// import * as THREE from \"three\";\n\nexport class Attractor {\n    constructor(position,\n                constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0,\n                radius = -1.0,\n                relaxRadius = 0.0) {\n        this.position = position\n        this.constCoeff = constCoeff\n        this.linearCoeff = linearCoeff\n        this.quadraticCoeff = quadraticCoeff\n        this.radius = radius\n        this.relaxRadius = relaxRadius\n    }\n\n    applyForceToDistance(physObj, distance, toPosition) {\n        const fromPosition = physObj.realObject.position\n        const f = this.getForce(distance, fromPosition, toPosition)\n        physObj.force.add(f)\n    }\n\n    getForce(distance, fromPosition, toPosition) {\n        const magnitude = this.constCoeff + distance * this.linearCoeff + distance * distance * this.quadraticCoeff\n        return toPosition.clone().sub(fromPosition).normalize().multiplyScalar(magnitude)\n    }\n\n    distance(physObj) {\n        const objPosition = physObj.realObject.position\n        return this.position.distanceTo(objPosition)\n    }\n\n    applyForce(physObj) {\n        const distance = this.distance(physObj)\n        const infiniteRadius = this.radius <= 0.0\n\n        if ((infiniteRadius || distance <= this.radius) && distance > this.relaxRadius) {\n            this.applyForceToDistance(physObj, distance, this.position)\n        }\n    }\n}\n\nAttractor.INFINITE = -1\n\nexport class AttractorFlat extends Attractor {\n    distance(physObj) {\n        return distanceXY(this.position, physObj.realObject.position)\n    }\n\n    applyForce(physObj) {\n        super.applyForce(physObj);\n        this.squishZ(physObj)\n    }\n\n    squishZ(phyObj) {\n        const zDist = phyObj.realObject.position.z - this.position.z\n        let fZ = 0.0\n        if(Math.abs(zDist) > 1.0) {\n            fZ = -zDist * 100.0\n        }\n        phyObj.force.z = fZ\n    }\n}","import _ from \"lodash\";\nimport {Section, Util} from \"@/helpers/MathUtil\";\nimport {AttractorFlat} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\n\n\nexport class AttractorShape extends AttractorFlat {\n    constructor(triangles, constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0, z = 0) {\n        const center = Util.centerOf(_.flatten(triangles))\n        super(new THREE.Vector3(center.x, center.y, 0.0),\n            constCoeff, linearCoeff, quadraticCoeff, 0, 0)\n        this.triangles = triangles\n        this.center = center\n        this.z = z\n    }\n\n    get allSectors() {\n        const sectors = []\n        for (const triangle of this.triangles) {\n            sectors.push(new Section(triangle[0], triangle[1]))\n            sectors.push(new Section(triangle[1], triangle[2]))\n            sectors.push(new Section(triangle[2], triangle[0]))\n        }\n        return sectors\n    }\n\n    applyForce(physObj) {\n        if (!this.triangles || !this.triangles.length) {\n            return\n        }\n        const objPosition = physObj.realObject.position\n        const p = {x: objPosition.x, y: objPosition.y}\n        const relaxed = _.some(this.triangles, tri => Util.pointInTriangle(p, tri))\n\n        this.squishZ(physObj)\n\n        if (relaxed) {\n            return\n        }\n\n        const nearestSector = _.minBy(this.allSectors, sector => sector.pDistance(p.x, p.y))\n        const nearestPoint = nearestSector.nearestPoint(p.x, p.y)\n        const distance = new Section(nearestPoint, p).length\n        this.applyForceToDistance(physObj, distance, new THREE.Vector3(nearestPoint.x, nearestPoint.y, this.z))\n    }\n}\n","export class THORChainLogoShape {\n    static original() {\n        return [\n            [\n                {x: 0, y: 0},\n                {x: 133, y: -133},\n                {x: -238, y: -291},\n            ],\n            [\n                {x: 0, y: 0},\n                {x: -133, y: 135},\n                {x: 291, y: 311},\n            ]\n        ]\n    }\n\n    static triangles(dx = 0, dy = 0, scale = 1.0) {\n        const transformed = []\n        for(const triangle of this.original()) {\n            const pts = []\n            for(const {x, y} of triangle) {\n                pts.push({\n                    x: x * scale + dx,\n                    y: y * scale + dy\n                })\n            }\n            transformed.push(pts)\n        }\n        return transformed\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {Random} from \"@/helpers/MathUtil\";\n\nexport class ModeNormal extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        const force = Config.Physics.BaseForce\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.8), force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.tcAttractor\n    }\n\n    onEnter(nodeObjList) {\n        const label = this.makeLabel({text: 'THORChain', position: new THREE.Vector3(0, -580, -10), scale: 18})\n        label.opacity = 0.8;\n\n        super.onEnter();\n\n        nodeObjList.forEach(o => {\n            o.velocity.add(new THREE.Vector3(0, Random.getRandomFloat(100, 1000), 0))\n        })\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport _ from \"lodash\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nconst ANY_STATUS = '*'\n\nexport class ModeStatus extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        const force = Config.Physics.BaseForce\n\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.6), force)\n        this._standbyAttractors = [\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force * 0.02),\n        ]\n\n        this.attractors = {\n            [NodeStatus.Active]: [\n                this.tcAttractor,\n            ],\n            [NodeStatus.Standby]: this._standbyAttractors,\n            [NodeStatus.Ready]: this._standbyAttractors,\n            [ANY_STATUS]: [\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force * 0.02),\n            ],\n        }\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = null\n\n        const bestAttractors = this.attractors[physObj.node.status]\n        if (bestAttractors) {\n            physObj.attractors = bestAttractors\n        } else {\n            physObj.attractors = this.attractors[ANY_STATUS]\n        }\n    }\n\n    onEnter(nodeObj) {\n        const statusesCounted = _.countBy(nodeObj, 'node.status')\n        const standbyCount = (statusesCounted[NodeStatus.Standby] || 0) + (statusesCounted[NodeStatus.Ready] || 0)\n        const activeCount = (statusesCounted[NodeStatus.Active] || 0)\n        const otherCount = nodeObj.length - (standbyCount + activeCount)\n\n        this.makeLabel({text: 'Active', position: new THREE.Vector3(0, -500, 0), scale: 20})\n        this.makeLabel({text: 'Standby', position: new THREE.Vector3(-this._sideDistance, -420, 0), scale: 12})\n        this.makeLabel({text: 'Other', position: new THREE.Vector3(this._sideDistance, -420, 0), scale: 12})\n\n        this.makeLabel({\n            text: activeCount, position: new THREE.Vector3(0, -650, 0), scale: 10,\n        })\n        this.makeLabel({\n            text: standbyCount, position: new THREE.Vector3(-this._sideDistance, -500, 0), scale: 6,\n        })\n        this.makeLabel({\n            text: otherCount, position: new THREE.Vector3(this._sideDistance, -500, 0), scale: 6,\n        })\n\n        super.onEnter();\n    }\n}\n","import * as THREE from \"three\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {Config} from \"@/config\";\n\n\nclass VirtualObject extends PhysicalObject {\n    constructor(x, y, r, name, attractor, friction) {\n        super();\n        this.name = name\n        this.position = new THREE.Vector3(x, y, 0)\n        this._radius = r\n        this.attractors = attractor\n        this.friction = friction\n    }\n\n    get radius() {\n        return this._radius\n    }\n}\n\nconst fric = Config.Physics.BaseFriction\n\nexport class CirclePack {\n    constructor(force, boundRadius, repelForce = 600, friction = fric, iterSteps = 1) {\n        this.force = force\n        this.boundRadius = boundRadius\n        this.iterSteps = iterSteps\n        this.dt = 0.05\n        this.simulation = new Simulation()\n        this.simulation.repelForce = repelForce\n        this.friction = friction\n\n        this.metaAttractor = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, -1, 0)\n    }\n\n    addCircle(name, radius) {\n        this.simulation.addObject(\n            name,\n            new VirtualObject(\n                0,\n                0,\n                radius,\n                name,\n                this.metaAttractor,\n                this.friction,\n            )\n        )\n    }\n\n    arrangeAroundCenter() {\n        if (!this.simulation.size) {\n            return this\n        }\n\n        const deltaAngle = Math.PI * 2 / this.simulation.size\n        const r = this.boundRadius * 0.5 * 0.8\n        let angle = Math.PI * 0.5\n\n        for (const name of this.simulation.allNames) {\n            const obj = this.simulation.getByName(name)\n            if (obj) {\n                obj.position.x = r * Math.cos(angle)\n                obj.position.y = r * Math.sin(angle)\n            }\n\n            angle -= deltaAngle\n        }\n        return this\n    }\n\n    clear() {\n        this.simulation.dispose()\n    }\n\n    pack(dt, steps) {\n        if (!this.simulation.size) {\n            return this\n        }\n        dt = dt || this.dt\n        steps = steps || this.iterSteps\n        this.simulation.doNSteps(steps, dt)\n        return this\n    }\n\n    getResults() {\n        const results = {}\n        for (const [name, {position, radius}] of this.simulation.entries) {\n            results[name] = {\n                position, radius\n            }\n        }\n        return results\n    }\n}\n","import axios from \"axios\";\nimport lscache from \"lscache\";\nimport _ from \"lodash\";\n\n\nexport class IPAddressInfo {\n    constructor(j) {\n        this.ipAddress = j['ip']\n        this.countryCode = j['country_code']\n        this.country = j['country_name']\n        this.city = j['city']\n        this.latitude = j['latitude']\n        this.longitude = j['longitude']\n        this.providerName = j['org']\n        this.flag = IPAddressInfo.getFlagEmoji(this.countryCode)\n    }\n\n    static getFlagEmoji(countryCode) {\n        if (countryCode) {\n            const codePoints = countryCode\n                .toUpperCase()\n                .split('')\n                .map(char => 127397 + char.charCodeAt());\n            return String.fromCodePoint(...codePoints);\n        } else {\n            return ''\n        }\n    }\n}\n\n\nexport const UNKNOWN = 'UNKNOWN'\n\n\nexport class IPAddressInfoLoader {\n    constructor(expireMinutes = 24 * 60) {\n        this.expireMinutes = expireMinutes\n        this._key = 'IPInfo2'\n    }\n\n    url(ip) {\n        return `https://settings.thornode.org/api/node/ip/${ip}`\n    }\n\n    async loadFromService(ips) {\n        const r = await axios.get(this.url(ips.join(',')))\n        console.info(`Loaded IP info for (${ips}) => ${r.status}`)\n        return _.mapValues(r.data, j => new IPAddressInfo(j))\n    }\n\n    loadFromCache(ip) {\n        return lscache.get(`${this._key}:${ip}`)\n    }\n\n    saveToCache(data) {\n        if (!data || !data.ipAddress) {\n            console.warn('no data to save!')\n            return\n        }\n        const ip = data.ipAddress\n        lscache.set(`${this._key}:${ip}`, data, this.expireMinutes)\n    }\n\n    async loadBunch(ipAddresses) {\n        const results = {}\n        const requestList = []\n        _.each(ipAddresses, ip => {\n            const data = this.loadFromCache(ip)\n            if (data) {\n                results[ip] = data\n            } else {\n                requestList.push(ip)\n            }\n        })\n\n        console.log(`requestList = ${requestList.length}, cached = ${_.keys(results).length}`)\n\n        const addressChunks = _.chunk(requestList, 50)\n        for(const ipListChunk of addressChunks) {\n            const chunkInfoDic = await this.loadFromService(ipListChunk)\n            _.each(_.values(chunkInfoDic), d => this.saveToCache(d))\n            _.extend(results, chunkInfoDic)\n        }\n\n        return results\n    }\n\n    static refineProviderName(name) {\n        if (name === undefined) {\n            return UNKNOWN\n        }\n\n        name = name.toUpperCase()\n        name = name.replace('ONLINE GMBH', '')\n        for (const component of name.split('-')) {\n            if (component !== 'AS') {\n                return component\n            }\n        }\n\n        return name\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {Random} from \"@/helpers/MathUtil\";\n\n\nexport class ModeProvider extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n        this.attractors = {}\n        this.force = Config.Physics.BaseForce\n        this.circlePacker = new CirclePack(this.force, 1400, 300, 0.02, 1)\n    }\n\n    update() {\n        // this.circlePacker.pack(dt)\n        this._transferAttractorsPositionFromPacker()\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = IPAddressInfoLoader.refineProviderName(\n                physObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            )\n            physObj.attractors = (this.attractors[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(objList) {\n        this._createProviderAttractors(objList)\n        super.onEnter();\n    }\n\n    _createProviderAttractors(objList) {\n        const providers = {}\n\n        let mostPopularProvider = null\n        let mostPopularCount = 0\n\n        for (const nodeObj of objList) {\n            const nativeName = nodeObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            const provider = IPAddressInfoLoader.refineProviderName(nativeName)\n\n            if (!providers[provider]) {\n                providers[provider] = [nodeObj]\n            } else {\n                const list = providers[provider]\n                list.push(nodeObj)\n                if (list.length > mostPopularCount) {\n                    mostPopularProvider = provider\n                    mostPopularCount = list.length\n                }\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        const sortedEntries = _.sortBy(_.entries(providers), [(pair) => pair[1].length])\n        // const sortedEntries = _.entries(providers)\n        for (const [name, items] of sortedEntries) {\n            if (name === mostPopularProvider) {\n                continue\n            }\n\n            this._makeAttractor(name, items, true)\n        }\n        this.circlePacker.arrangeAroundCenter()\n        this._transferAttractorsPositionFromPacker()\n\n        if (mostPopularProvider) {\n            this._makeAttractor(mostPopularProvider, providers[mostPopularProvider], false)\n        }\n\n        for(const nodeObj of objList) {\n            nodeObj.velocity.z = Random.getRandomFloat(-1000, 1000)\n        }\n\n        this._makeLabels(providers, mostPopularProvider)\n    }\n\n    _makeAttractor(name, items, addCircle) {\n        const circleRadius = NodeObject.estimateRadiusOfGroup(items) * 1.05\n        // console.log('prov', name, circleRadius)\n\n        if (addCircle) {\n            this.circlePacker.addCircle(name, circleRadius)\n        }\n\n        this.attractors[name] = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, 0, circleRadius)\n        return circleRadius\n    }\n\n    _makeLabelForGroup(providers, name, position) {\n        const countNodes = providers[name].length\n        const text = `${name} (${countNodes})`\n        this.makeLabel({text, position: new THREE.Vector3(position.x, position.y - 180.0, 60.0), scale: 5})\n    }\n\n    _makeLabels(providers, mostPopularName) {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            this._makeLabelForGroup(providers, name, position)\n        }\n\n        if (mostPopularName) {\n            this._makeLabelForGroup(providers, mostPopularName, new THREE.Vector3())\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}","import _ from \"lodash\";\n\nfunction isGarbage(x) {\n    return x === undefined || x === null || isNaN(x)\n}\n\nexport class Version {\n    constructor(x, y, z) {\n        this.x = x\n        this.y = y\n        this.z = z\n    }\n\n    static fromString(v) {\n        if (v instanceof Version) {\n            return v\n        }\n        const components = _.map(v.split('.'), x => parseInt(x))\n        const n = components.length\n        const x = components[0]\n        const y = n > 1 ? components[1] : 0\n        const z = n > 2 ? components[2] : 0\n        return new Version(x, y, z)\n    }\n\n    get isInvalid() {\n        return isGarbage(this.x) || isGarbage(this.y) || isGarbage(this.z)\n    }\n\n    greater(v2) {\n        return this.x > v2.x || this.y > v2.y || this.z > v2.z\n    }\n\n    less(v2) {\n        return this.x < v2.x || this.y < v2.y || this.z < v2.z\n    }\n\n    equal(v2) {\n        return this.x === v2.x && this.y === v2.y && this.z === v2.z\n    }\n\n    toString() {\n        return `${this.x}.${this.y}.${this.z}`\n    }\n\n    inc(xLimit = 10, yLimit = 10) {\n        this.z++\n        if (this.z >= xLimit) {\n            this.z = 0\n            this.y++\n            if (this.y >= yLimit) {\n                this.x++\n                this.y = 0\n            }\n        }\n        return this\n    }\n\n    get asInt() {\n        return this.z + 1000 * this.y + 1000000 * this.x\n    }\n\n    static loadVersions(rawVersions) {\n        return _.map(rawVersions, v => Version.fromString(v))\n    }\n\n    static maximumVersion(versions) {\n        return _.maxBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static minimumVersion(versions) {\n        return _.minBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static getVersionSet(nodeObjects, path = 'node.version') {\n        return Version.loadVersions(_.uniq(_.map(nodeObjects, path)))\n    }\n\n    static getSemanticVersionsDistribution(nodeObjects, path = 'node.version', activePath = 'node.isActive') {\n        const activeNodes = _.filter(nodeObjects, no => _.get(no, activePath))\n\n        const activeVersions = Version.getVersionSet(activeNodes, path)\n        const maxActiveVersion = Version.maximumVersion(activeVersions)\n        const minActiveVersion = Version.minimumVersion(activeVersions)\n        const otherActiveVersions = _.differenceBy(activeVersions, _.compact([maxActiveVersion, minActiveVersion]),\n            v => v.asInt)\n        const otherActiveVersionsStr = _.map(otherActiveVersions, v => v.toString())\n\n        const results = {}\n\n        for (const nodeObject of nodeObjects) {\n            const versionStr = _.get(nodeObject, path)\n            const version = Version.fromString(versionStr)\n            let target = null\n            let comment = ''\n            const isActive = version.equal(minActiveVersion)\n            const isLatest = version.equal(maxActiveVersion)\n            if(isLatest && isActive) {\n                target = minActiveVersion.toString()\n                comment = 'latest and active'\n            } else if (isLatest) {\n                target = maxActiveVersion.toString()\n                comment = 'latest'\n            } else if (isActive) {\n                target = minActiveVersion.toString()\n                comment = 'active'\n            } else if (_.includes(otherActiveVersionsStr, versionStr)) {\n                target = versionStr\n                comment = 'interim'\n            } else if (!versionStr || versionStr === '0.0.0') {\n                target = 'unknown'\n            } else {\n                target = `${version.x}.X.X`\n                comment = 'old'\n            }\n\n            if (!results[target]) {\n                results[target] = {\n                    objects: [],\n                    comment,\n                    mostPopular: false,\n                    isActive: nodeObject.node.isActive\n                }\n            }\n            results[target].objects.push(nodeObject)\n        }\n\n        if(!_.isEmpty(results)) {\n            const maxVersion = _.maxBy(_.values(results), v => v.objects.length)\n            maxVersion.mostPopular = true\n        }\n\n        return results\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Config} from \"@/config\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeObject} from \"@/visual/NodeObject\";\n\n\nexport class ModeVersion extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        this.force = Config.Physics.BaseForce\n        this._attractorsByKey = {}\n        this._attractorsByVersion = {}\n\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n\n        this._previousKeys = []\n        this._versionDist = {}\n    }\n\n    reactEvent(event, nodeObjects) {\n        if (event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            console.log(`New version detected: ${event.currValue}`)\n            this._packAttractorPositions(nodeObjects)\n            this._makeLabels()\n        }\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = physObj.node.version\n            physObj.attractors = (this._attractorsByVersion[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(nodeObjects) {\n        this._packAttractorPositions(nodeObjects)\n        this._makeLabels()\n\n        this.makeLabel({\n            text: 'Versions',\n            position: new THREE.Vector3(0, -630, -10), scale: 14\n        })\n    }\n\n    _packAttractorPositions(objList) {\n        this._versionDist = Version.getSemanticVersionsDistribution(objList)\n\n        const gap = 100.0\n        const radAttr = 1.2\n\n        let nGroups = 0\n        let radSum = 0.0\n        for (const versionDesc of _.values(this._versionDist)) {\n            versionDesc.radius = radAttr * NodeObject.estimateRadiusOfGroup(versionDesc.objects)\n            ++nGroups\n            radSum += 2 * versionDesc.radius\n        }\n        radSum += Math.max(0, nGroups - 1) * gap\n\n        let x = -radSum * 0.5\n        this._attractorsByVersion = {}\n        this._attractorsByKey = {}\n\n        let entries = _.entries(this._versionDist)\n        entries = _.sortBy(entries, e => e[0])\n\n        for (const [key, versionDesc] of entries) {\n            const r = versionDesc.radius\n            const attractor = new Attractor(new THREE.Vector3(x + r, 0, 0),\n                this.force, 0, 0, 0, versionDesc.radius)\n            x += gap + r * 2\n            this._attractorsByKey[key] = attractor\n            for (const nodeObj of versionDesc.objects) {\n                this._attractorsByVersion[nodeObj.node.version] = attractor\n            }\n        }\n    }\n\n    _makeLabels() {\n        const affectedKeys = []\n\n        for (const [key, desc] of _.entries(this._versionDist)) {\n            affectedKeys.push(key)\n            const attr = this._attractorsByKey[key]\n            if (attr) {\n\n                let tag = '\\n' + desc.comment\n                let color\n                if(desc.comment === 'latest') {\n                    color = '#41e9ff'\n                } else if(desc.comment === 'latest and active') {\n                    color = '#1dfc53'\n                } else if(desc.comment === 'active') {\n                    color = '#16f14b'\n                } else if(desc.comment === 'interim') {\n                    color = '#1cc245'\n                    tag = ''\n                }\n\n                let text\n                if(key === 'unknown') {\n                    text = 'Unknown'\n                } else {\n                    text = `v. ${key} (${desc.objects.length})${tag}`\n                }\n\n                const position = new THREE.Vector3(attr.position.x, attr.position.y - attr.relaxRadius * 1.1 - 30.0, 50.0)\n                // const position = new THREE.Vector3(attr.position.x, -300.0, 50.0)\n                const label = this.makeLabel({\n                    text,\n                    position,\n                    scale: 2.5,\n                    key\n                }).t\n\n                if(!desc.isActive) {\n                    label.fillOpacity = 0.9\n                }\n                if(color) {\n                    label.color = color\n                }\n            }\n        }\n\n        const keysToRemove = _.difference(this._previousKeys, affectedKeys)\n        _.forEach(keysToRemove, key => {\n            this.killLabelByKey(key)\n        })\n        if(keysToRemove.length) {\n            console.log(`Removing ${keysToRemove.length} version labels...`)\n        }\n\n        this._previousKeys = affectedKeys\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Config} from \"@/config\";\nimport {shortRune} from \"@/helpers/MathUtil\";\n\nexport class ModeBond extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.nameToAttractor = {}\n        this.force = Config.Physics.BaseForce\n\n        this.center = new THREE.Vector3(0, 120)\n        this._noBondAttractor = new Attractor(this.center, this.force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.nameToAttractor[physObj.node.address]\n    }\n\n    onEnter(nodeObjects) {\n        const label = this.makeLabel({text: 'Bonds', position: new THREE.Vector3(0, -630, -10), scale: 14})\n        label.opacity = 0.8;\n\n        nodeObjects = _.sortBy(nodeObjects, 'node.bond')\n\n        const n = nodeObjects.length\n\n        this.nameToAttractor = {}\n\n        if (n === 0) {\n            return\n        }\n\n        this._positionateOnSpiral(nodeObjects)\n\n        super.onEnter();\n    }\n\n    _positionateOnSpiral(nodeObjects) {\n        const n = nodeObjects.length\n        let angle = 0.0\n        let radius = 34.0\n        // let gap = 3.0\n        const xScale = 1.5\n\n        let deltaRadius = 5.9;\n        let deltaAngle = 0.5;\n        const deltaDeltaRadius = 0.995;\n        const deltaDeltaAngle = 0.991;\n\n        for (let i = 0; i < n; ++i) {\n            const x = this.center.x + xScale * radius * Math.cos(angle)\n            const y = this.center.y + radius * Math.sin(angle)\n            if (this._addAttractor(nodeObjects[i], x, y)) {\n                radius += deltaRadius;\n                angle += deltaAngle;\n                deltaRadius *= deltaDeltaRadius\n                deltaAngle *= deltaDeltaAngle\n            }\n        }\n    }\n\n    _positionateOnGrid(nodeObjects) {\n        const n = nodeObjects.length\n\n        const columns = Math.ceil(Math.sqrt(n))\n        const rows = Math.ceil(n / columns)\n\n        const gapSize = 100.0\n        const width = columns * gapSize\n        const height = rows * gapSize\n        const halfWidth = 0.5 * width\n        const halfHeight = 0.5 * height\n\n        for (let i = 0; i < n; ++i) {\n            const col = i % columns\n            const row = Math.floor(i / columns)\n            const x = gapSize * col - halfWidth\n            const y = gapSize * row - halfHeight\n            this._addAttractor(nodeObjects[i], x, y)\n        }\n    }\n\n    _addAttractor(nodeObject, x, y) {\n        const bond = nodeObject.node.bond\n        if (bond > 1.0) {\n            const z = 0.0\n            this.nameToAttractor[nodeObject.node.address] = new Attractor(new THREE.Vector3(x, y, z),\n                this.force, 0, 0, -1, 10.0)\n\n            const label = this.makeLabel({\n                text: shortRune(bond),\n                position: new THREE.Vector3(x, y - nodeObject.radius - 19.0, -10),\n                scale: 1,\n                rotation: -22.0\n            })\n\n            if(!nodeObject.node.isActive) {\n                label.color = '#aaa'\n            }\n\n            return true\n        } else {\n            this.nameToAttractor[nodeObject.node.address] = this._noBondAttractor\n            return false\n        }\n    }\n}\n","export default \"//uniform float time;\\n//uniform float saturation;\\n//uniform vec3 color;\\n\\nvarying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nconst vec3 ATMO_COLOR = vec3(0.3, 0.6, 1.0);\\nconst vec3 FORWARD = vec3(0.0, 0.0, 1.0);\\n\\nuniform sampler2D globeTexture;\\n\\nvoid main(void) {\\n    float intensity = 1.05 - dot(vNormal, FORWARD);\\n    vec3 atmo = clamp(ATMO_COLOR * pow(intensity, 1.5), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n//    vec3 atmo = vec3(0.0, 0.0, 0.0);\\n    gl_FragColor = vec4(atmo + texture2D(globeTexture, vUv).xyz, 1.0);\\n    //    gl_FragColor = texture2D(globeTexture, vUv);\\n}\\n\\n\";","export default \"varying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nvoid main()\\n{\\n    vUv = uv;\\n    vNormal = normalMatrix * normalize(normal);\\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {longLatTo3D} from \"@/helpers/3D\";\nimport TWEEN from \"tween.js\";\nimport _ from \"lodash\";\n\nimport AtmosphereFragmentShader from '@/visual/shader/globe_atmo_textured.frag'\nimport StdVertexShader from '@/visual/shader/standard.vert'\n\nexport class ModeGeo extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.isFlat = false\n\n        this.force = Config.Physics.BaseForce * 1.2\n        this._banishAttractor = new Attractor(new THREE.Vector3(0, 0, 0), this.force)\n\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n    }\n\n    handleObject(physObj) {\n        const attr = this._nameToAttractor[physObj.name]\n        physObj.attractors = attr ? [attr] : [this._banishAttractor]\n    }\n\n    onEnter(nodeObjects, group) {\n        // this.makeLabel('Geo', new THREE.Vector3(0, -630, -10), 14, 0, true)\n        super.onEnter();\n\n        group.repelEnabled = false\n\n        this._createAttractorsStacked(nodeObjects)\n\n        if (Config.Scene.Globe.Enabled) {\n            this._makeGlobe()\n            this._putInGlobe()\n        }\n    }\n\n    onLeave(nodeObjects, group) {\n        this._destroyGlobe()\n        _.forEach(nodeObjects, nodeObj => nodeObj.shootOut(2000))\n        super.onLeave();\n        group.repelEnabled = true\n    }\n\n    _makeGlobe() {\n        if (this.globeMesh) {\n            return\n        }\n        const textureLoader = new THREE.TextureLoader()\n\n        const globeConfig = Config.Scene.Globe\n        const geometry = new THREE.SphereGeometry(globeConfig.Radius, globeConfig.Details, globeConfig.Details);\n        // const basicMaterial = new THREE.MeshPhongMaterial({\n        //     color: 0x555555,\n        //     // depthWrite: true,\n        //     // depthTest: true,\n        // });\n\n        const material = new THREE.ShaderMaterial({\n            name: 'AtmosphereShaderMaterial',\n            fragmentShader: AtmosphereFragmentShader,\n            vertexShader: StdVertexShader,\n            uniforms: {\n                globeTexture: {\n                    value: textureLoader.load(Config.Scene.Globe.TextureMap)\n                }\n            },\n            // side: THREE.FrontSide,\n            // depthWrite: true,\n            // depthTest: true,\n        })\n\n        this.globeMesh = new THREE.Mesh(geometry, material);\n        this.globeMesh.renderOrder = 9999\n        this.scene.add(this.globeMesh)\n\n        // const dummyMesh = new THREE.Mesh(geometry, material)\n        // dummyMesh.scale.setScalar(0.9)\n        // this.globeMesh.add(dummyMesh)\n\n        // if(globeConfig.InnerAtmosphere.Enabled) {\n        //     const innerAtmoMaterial = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {\n        //             globeTexture: {\n        //                 value: textureLoader.load(Config.Scene.Globe.TextureMap)\n        //             }\n        //         },\n        //         // side: THREE.FrontSide,\n        //         // depthWrite: true,\n        //         // depthTest: true,\n        //     })\n        //\n        //     this.innerAtmoMesh = new THREE.Mesh(geometry, innerAtmoMaterial)\n        //     // this.innerAtmoMesh.scale.setScalar(1.1)\n        //     this.globeMesh.add(this.innerAtmoMesh)\n        // }\n\n        if (globeConfig.Clouds.Opacity > 0) {\n            const materialClouds = new THREE.MeshPhongMaterial({\n                map: textureLoader.load(globeConfig.Clouds.Texture),\n                side: THREE.DoubleSide,\n                opacity: globeConfig.Clouds.Opacity,\n                transparent: true,\n                depthWrite: false,\n                blending: THREE.AdditiveBlending,\n            });\n            this.cloudMesh = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh)\n\n            this.cloudMesh2 = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh2.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh2)\n        }\n\n        // if(globeConfig.Atmosphere) {\n        //     const materialAtmosphere = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {},\n        //         side: THREE.FrontSide,\n        //         depthWrite: false\n        //     })\n        //     this.atmosphereMesh = new THREE.Mesh(geometry, materialAtmosphere)\n        //     this.atmosphereMesh.scale.setScalar(globeConfig.Atmosphere.ElevationScale)\n        //     this.globeMesh.add(this.atmosphereMesh)\n        // }\n    }\n\n    _putInGlobe() {\n        this.globeMesh.scale.set(0.01, 0.01, 0.01)\n        new TWEEN.Tween(this.globeMesh.scale)\n            .to(new THREE.Vector3(1, 1, 1))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    _destroyGlobe() {\n        if (!this.globeMesh) {\n            return\n        }\n        const g = this.globeMesh\n\n        new TWEEN.Tween(g.scale)\n            .to(new THREE.Vector3(0.01, 0.01, 0.01))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                g.parent.remove(g)\n            })\n            .start()\n\n        this.globeMesh = null\n    }\n\n    update(dt) {\n        super.update(dt);\n        if (this.cloudMesh) {\n            this.cloudMesh.rotation.y += 0.02 * dt\n        }\n        if (this.cloudMesh2) {\n            this.cloudMesh2.rotation.y -= 0.04 * dt\n        }\n    }\n\n    _createAttractors(nodeObjects) {\n        const r = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let attractorHere = this._coordToAttractor[key]\n                if (!attractorHere) {\n                    const position3d = longLatTo3D(info.longitude, info.latitude, r)\n                    attractorHere = this._coordToAttractor[key] = new Attractor(position3d,\n                        this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                }\n                this._nameToAttractor[nodeObject.node.address] = attractorHere\n\n            }\n        }\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n\n    _createAttractorsStacked(nodeObjects) {\n        this._nameToAttractor = {}\n        this._coordToStack = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let stackObj = this._coordToStack[key]\n                if (!stackObj) {\n                    this._coordToStack[key] = stackObj = {\n                        stack: [],\n                        longitude: info.longitude,\n                        latitude: info.latitude,\n                    }\n                }\n                stackObj.stack.push(nodeObject)\n                // this._nameToAttractor[nodeObject.node.address] = attractorHere\n            }\n        }\n\n        const basicRadius = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        for (const {stack, longitude, latitude} of _.values(this._coordToStack)) {\n            const sortedStack = _.sortBy(stack, nodeObject => -nodeObject.node.bond)\n            let radius = basicRadius\n            for (const nodeObj of sortedStack) {\n                const position3d = longLatTo3D(longitude, latitude, radius)\n                this._nameToAttractor[nodeObj.node.address] = new Attractor(position3d,\n                    this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                radius += nodeObj.radius * 2.1\n            }\n        }\n\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n}\n","import {Random} from \"@/helpers/MathUtil\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {Config} from \"@/config\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {ModeNormal} from \"@/visual/modes/ModeNormal\";\nimport {ModeStatus} from \"@/visual/modes/ModeStatus\";\nimport {ModeProvider} from \"@/visual/modes/ModeProvider\";\nimport {ModeVersion} from \"@/visual/modes/ModeVersion\";\nimport {ModeBond} from \"@/visual/modes/ModeBond\";\nimport {ModeGeo} from \"@/visual/modes/ModeGeo\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\n// import {VisNetwork} from \"@/visual/VisNetwork\";\n\nexport const NodeGroupModes = Object.freeze({\n    Normal: 'normal',\n    Status: 'status',\n    Provider: 'provider',\n    Version: 'version',\n    Bond: 'bond',\n    Geo: 'geo',\n})\n\nexport class NodeGroup extends Simulation {\n    constructor(parent) {\n        super()\n\n        this.holder = new THREE.Group()\n        parent.add(this.holder)\n\n        this._currentIdent = 0\n        this.parent = parent\n\n        this._modeNormal = new ModeNormal(this.parent)\n        this._modeStatus = new ModeStatus(this.parent)\n        this._modeProvider = new ModeProvider(this.parent)\n        this._modeVersion = new ModeVersion(this.parent)\n        this._modeBond = new ModeBond(this.parent)\n        this._modeGeo = new ModeGeo(this.parent)\n\n        this._selector = {\n            [NodeGroupModes.Normal]: this._modeNormal,\n            [NodeGroupModes.Status]: this._modeStatus,\n            [NodeGroupModes.Provider]: this._modeProvider,\n            [NodeGroupModes.Version]: this._modeVersion,\n            [NodeGroupModes.Bond]: this._modeBond,\n            [NodeGroupModes.Geo]: this._modeGeo,\n        }\n\n        this._selectedModeHandler = this._modeNormal\n        this.mode = NodeGroupModes.Normal\n\n        this.repelForce = Config.Physics.RepelForce\n\n        // this._visNet = new VisNetwork()\n        // this.parent.add(this._visNet)\n    }\n\n    genIdent(node) {\n        return node.address ?? String(this._currentIdent++)\n    }\n\n    _placeNodeObject(nodeObject) {\n        // const pos = Random.randomVector(this._startPositionBounds)\n        const pos = Random.randomOnCircle(2000.0)\n        nodeObject.o.position.copy(pos)\n        this.holder.add(nodeObject.o)\n    }\n\n    createNewNode(node, nodeSet) {\n        const ident = this.genIdent(node)\n        const existing = this.getByName(ident)\n        if (existing) {\n            console.warn('NodeObject already exists. No nothing')\n            return existing\n        }\n\n        console.info(`Create node ${ident}.`)\n\n        const nodeObject = new NodeObject(node)\n        nodeObject._updateRust(nodeSet)\n        this._placeNodeObject(nodeObject)\n        this.addObject(ident, nodeObject)\n        return nodeObject\n    }\n\n    destroyNode(node) {\n        const nodeAddress = node.address ?? node\n        const nodeObject = this.getByName(nodeAddress)\n        if (!nodeObject) {\n            console.error('node not found!')\n            return\n        }\n\n        console.info(`Destroy node ${nodeAddress}.`)\n        nodeObject.dispose()\n        this.holder.remove(nodeObject.o)\n        super.removeObject(nodeAddress)\n    }\n\n    set mode(newMode) {\n        if(this._mode === newMode) {\n            return\n        }\n\n        this._mode = newMode\n\n        // dispose old\n        this._selectedModeHandler._triggerOnLeave(this.physicalObjects, this)\n\n        // pick new\n        this._selectedModeHandler = this._selector[this._mode]\n\n        // enter the new one\n        this._selectedModeHandler._triggerOnEnter(this.physicalObjects, this)\n\n        console.log(`Set Mode: ${newMode}`)\n    }\n\n    _updateObject(obj, delta) {\n        if(obj) {\n            this._selectedModeHandler.handleObject(obj)\n            super._updateObject(obj, delta)\n        }\n    }\n\n    reactEvent(event) {\n        const delay = Random.getRandomFloat(0, Config.DataSource.ReactRandomDelay)\n        setTimeout(() => {\n            const obj = this.getByName(event.node.address)\n            if (obj) {\n                obj.react(event)\n                this._selectedModeHandler.reactEvent(event, this.physicalObjects)\n            }\n        }, delay)\n    }\n\n    update(dt) {\n        this._selectedModeHandler.update(dt)\n\n        super.update(dt)\n\n        // this._visNet.update(dt)\n        // this._visNet.updatePositions(this.rBush, this.objectPositions)\n    }\n\n    updateFromCamera(camera) {\n        _.each(this.physicalObjects, no => no.updateFromCamera(camera))\n    }\n\n    dispose() {\n        super.dispose()\n        clearObject(this.holder)\n        for (const otherObj of this.physicalObjects) {\n            otherObj.dispose()\n        }\n    }\n\n    setElevatedNode(name) {\n        for(const obj of this.physicalObjects) {\n            obj.elevated = (obj.name === name)\n        }\n    }\n\n    get isCurrentModeFlat() {\n        return this._selectedModeHandler.isFlat\n    }\n}\n","import _ from \"lodash\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nexport class NodeTracker {\n    constructor(prevNodeSet, currNodeSet) {\n        this.prev = prevNodeSet\n        this.curr = currNodeSet\n    }\n\n    extractEvents() {\n        const events = []\n        const addEvent = (t, node, prevNode, k) => {\n            k = k || 'address'\n            events.push(new NodeEvent(t, node, prevNode, node ? node[k] : '',\n                prevNode ? prevNode[k] : '', this.curr))\n        }\n\n        const addedNodeAddresses = _.difference(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of addedNodeAddresses) {\n            const node = this.curr.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.CREATE, node, node)\n        }\n\n        const removeNodeAddresses = _.difference(this.prev.nameSet, this.curr.nameSet)\n        for (const addr of removeNodeAddresses) {\n            const node = this.prev.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.DESTROY, node, node)\n        }\n\n        const EVENT_TYPES = NodeEvent.EVENT_TYPE\n\n        const keyTypeTable = {\n            'slashPoints': EVENT_TYPES.SLASH,\n            'bond': EVENT_TYPES.BOND_CHANGE,\n            'IPAddress': EVENT_TYPES.IP_ADDRESS,\n            'status': EVENT_TYPES.STATUS,\n            'height': EVENT_TYPES.ACTIVE_BLOCK_HEIGHT,\n            'currentAward': EVENT_TYPES.AWARD,\n            'observeChains': EVENT_TYPES.OBSERVE_CHAIN,\n            'version': EVENT_TYPES.VERSION,\n        }\n\n        const commonNodes = _.intersection(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of commonNodes) {\n            const prevNode = this.prev.byAddress[addr]\n            const currNode = this.curr.byAddress[addr]\n            const keys = _.union(_.keys(prevNode), _.keys(currNode));\n            const keysChanged = _.filter(keys, (key) => {\n                return !_.isEqual(prevNode[key], currNode[key]);\n            });\n            for (const key of keysChanged) {\n                const eventType = keyTypeTable[key]\n                if (eventType) {\n                    addEvent(eventType, currNode, prevNode, key)\n                }\n            }\n        }\n\n        return events\n    }\n}\n\nexport class DebugNodeJuggler {\n    constructor(period = 10) {\n        this.tick = 1\n        this.period = period\n        this.enabled = true\n        this.juggleStatus = true\n        this.juggleVersion = true\n\n        this.memorizeVersions = {}\n    }\n\n    handleNodes(nodes) {\n        if (this.enabled) {\n            if (this.tick % this.period === 0) {\n                nodes = this._juggleNodes(nodes)\n            }\n            this.tick++\n        }\n        return nodes\n    }\n\n    _juggleNodes(nodes) {\n        if(this.juggleStatus) {\n            nodes = this._juggleNodesStatus(nodes)\n        }\n        if(this.juggleVersion) {\n            nodes = this._juggleNodesVersion(nodes)\n        }\n        return nodes\n    }\n\n    _juggleNodesStatus(nodes) {\n        const nodesIn = Random.getRandomIntRange(2, 7)\n        const nodesOut = Random.getRandomIntRange(2, 7)\n\n        console.warn(`Attention! _juggleNodes: IN: ${nodesIn}, OUT: ${nodesOut}!`)\n\n        nodes.filteredByStatus(NodeStatus.Active).sampleRandomly(nodesOut).setStatusAll(NodeStatus.Standby)\n        nodes.filteredByStatus(NodeStatus.Standby).sampleRandomly(nodesIn).setStatusAll(NodeStatus.Active)\n\n        return nodes\n    }\n\n    _nextVersion(vString) {\n        return Version.fromString(vString).inc(10, 100).toString()\n    }\n\n    _juggleNodesVersion(nodes) {\n        const nUpgrade = 1\n\n        const that = this\n        _.each(nodes.nodes, node => {\n            const v = that.memorizeVersions[node.address]\n            if(v) {\n                node.version = v\n            }\n        })\n\n        nodes.sampleRandomly(nUpgrade).nodes.forEach(node => {\n            const oldVersion = node.version\n            node.version = this._nextVersion(node.version)\n            that.memorizeVersions[node.address] = node.version\n            console.warn(`Debug upgrade ${node.shortAddress}: ${oldVersion} => ${node.version}`)\n        })\n\n        return nodes\n    }\n}\n","import _ from \"lodash\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {SEC_PER_BLOCK} from \"@/helpers/THORUtil\";\n\nexport const TYPICAL_BLOCK_TIME = {\n    ETH: 12.8,\n    BTC: 600,\n    BCH: 600,\n    LTC: 150,\n    BNB: 0.4,\n    THOR: 6.0,\n    DOGE: 60,\n    TERRA: 6.64,\n    GAIA: 6.85, // ATOM\n    AVAX: 3.0\n}\n\nexport class NodeSet {\n    constructor(nodes, calculate = true) {\n        this.nodes = nodes || []\n\n        this.total = this.nodes.length\n\n        if (calculate) {\n            this._nodesWithNames = _.filter(this.nodes, (item) => item.address)\n            this.byAddress = _.keyBy(this._nodesWithNames, 'address')\n            this.nameSet = _.keys(this.byAddress)\n\n            this.totalBond = _.sumBy(this.nodes, (node) => node.bond)\n            this.maxSlashNode = _.maxBy(this.nodes, (node) => node.slashPoints)\n            this.trampCount = this.total - this._nodesWithNames.length\n            this.maxAgeNode = _.maxBy(_.filter(this.nodes, node => node.activeBlockHeight && node.activeBlockHeight > 0),\n                node => node.activeBlockHeight)\n\n            this.ranks = {\n                bond: this._makeRanking('bond', 'desc'),\n                slash: this._makeRanking('slashPoints'),\n                age: this._makeRanking('activeBlockHeight'),\n                award: this._makeRanking('currentAward')\n            }\n\n            this.topHeights = this.calculateTopBlockHeight(3)\n\n            this.topVersion = this.calculateTopVersion()\n        }\n    }\n\n    _makeRanking(criteria, order = 'asc') {\n        const sortedArr = _.orderBy(this._nodesWithNames, [criteria], [order])\n        const names = _.map(sortedArr, 'address')\n        const ranks = Array.from(Array(sortedArr.length), (_, i) => i + 1)\n        return Object.fromEntries(_.zip(names, ranks))\n    }\n\n    findByAddress(address) {\n        return this.byAddress[address]\n    }\n\n    sortedNodes(attribute, asc = true) {\n        const f = asc ? 1 : -1\n        return new NodeSet(_.sortBy(this.nodes, (node) => f * node[attribute]))\n    }\n\n    filteredByStatus(status) {\n        return new NodeSet(_.filter(this.nodes, (node) => node.status === status))\n    }\n\n    get sortedByBond() {\n        return this.sortedNodes('bond')\n    }\n\n    get sortedByAge() {\n        return this.sortedNodes('statusSince')\n    }\n\n    get ipAddresses() {\n        return _.compact(_.uniq(_.map(this.nodes, n => n.IPAddress)))\n    }\n\n    sampleRandomly(n) {\n        return new NodeSet(_.sampleSize(this.nodes, n))\n    }\n\n    setStatusAll(status) {\n        _.forEach(this.nodes, n => n.status = status)\n    }\n\n    bondPercentOfTotal(bond) {\n        return (bond / this.totalBond * 100.0).toFixed(2)\n    }\n\n    get length() {\n        return this.total\n    }\n\n    _calculateTopBlockOneChain(nMin, heights) {\n        const heightSorted = _.map(Object.keys(heights), h => parseInt(h))\n        heightSorted.sort().reverse()\n        for (const height of heightSorted) {\n            const occurrences = heights[height]\n            if (occurrences >= nMin) {\n                return height\n            }\n        }\n        return null\n    }\n\n    calculateTopBlockHeight(nMin = 2) {\n        const allChains = Array.from(new Set(_.flatten(_.map(this._nodesWithNames, n => _.keys(n.observeChains)))))\n        const counters = _.map(\n            allChains, chain => _.countBy(this._nodesWithNames, n => n.observeChains[chain] ?? 0)\n        )\n\n        return _.zipObject(\n            allChains,\n            _.map(allChains, (chain, i) => this._calculateTopBlockOneChain(nMin, counters[i]))\n        )\n    }\n\n    calculateTopVersion() {\n        if (this.nodes.length === 0) {\n            return null\n        }\n        let topVersion = Version.fromString(this.nodes[0].version)\n        for (let i = 1; i < this.nodes.length; ++i) {\n            const currentVersion = Version.fromString(this.nodes[i].version)\n            if (currentVersion.greater(topVersion)) {\n                topVersion = currentVersion\n            }\n        }\n        return topVersion.toString()\n    }\n\n    estimateTimestampAtBlock(topThorHeight, no) {\n        const blockDiff = topThorHeight - no\n        return Date.now() - blockDiff * SEC_PER_BLOCK * 1000.0\n    }\n\n    getChainHeightLagBlocks(node, chain) {\n        return (this.topHeights[chain] ?? 0) - (node.observeChains[chain] ?? 0)\n    }\n\n    getChainHeightLagSeconds(node, chain) {\n        const mult = TYPICAL_BLOCK_TIME[chain] ?? 1.0\n        return mult * this.getChainHeightLagBlocks(node, chain)\n    }\n\n    getChainHeightLagAllSeconds(node) {\n        const keys = _.keys(this.topHeights)\n        if(!keys.length) {\n            return 0\n        }\n        const results = {\n            sum: 0,\n            max: 0,\n        }\n        for(const chain of keys) {\n            const lag = this.getChainHeightLagSeconds(node, chain)\n            results.max = Math.max(results.max, lag)\n            results.sum += lag\n        }\n        results.avg = results.sum / keys.length\n        return results\n    }\n}\n","import axios from \"axios\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport _ from \"lodash\";\nimport {IPAddressInfoLoader} from \"@/helpers/data/IPAddressInfo\";\n\n\nexport class URLDataSource {\n    constructor(baseUrl, period) {\n        this.period = period\n        this.baseUrl = baseUrl\n        this._isRunning = false\n        this._timer = 0\n        this.callback = () => 0\n        this.ipAddressLoader = new IPAddressInfoLoader()\n    }\n\n    run() {\n        if (this._isRunning) {\n            console.warn(`${this.toString()} is already running`)\n            return\n        }\n        this._isRunning = true\n\n        console.info(`${this.toString()} started!`)\n\n        this._tick().then()\n\n        this._timer = setInterval(() => {\n            this._tick().then()\n        }, this.period)\n    }\n\n    stop() {\n        if (this._isRunning) {\n            clearInterval(this._timer)\n            this._timer = 0\n            this._isRunning = false\n            console.info(`${this.toString()} stopped.`)\n        }\n    }\n\n    toString() {\n        return `URLDataSource(${this.baseUrl}, ${this.period} sec)`\n    }\n\n    get isRunning() {\n        return this._isRunning\n    }\n\n    async dataProcess(rawData) {\n        return rawData\n    }\n\n    get url() {\n        return this.baseUrl\n    }\n\n    async _tick() {\n        try {\n            const data = await axios.get(this.url, {\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            })\n            if (this.callback) {\n                const result = await this.dataProcess(data.data)\n                this.callback(result)\n            }\n        } catch (e) {\n            console.error(`${this.toString()} tick failed: ${e}`)\n            throw e\n        }\n    }\n}\n\nexport class NodeDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/nodes'\n    }\n\n    async dataProcess(rawData) {\n        const nodeSet = new NodeSet(\n            _.map(rawData, json => new NodeInfo(json))\n        )\n\n        let ipInfoDic = {}\n        try {\n            ipInfoDic = await this.ipAddressLoader.loadBunch(nodeSet.ipAddresses)\n        } catch (e) {\n            console.error(`failed to load IPInfo`)\n        }\n\n        for (const node of nodeSet.nodes) {\n            if (node.IPAddress) {\n                node.IPInfo = ipInfoDic[node.IPAddress]\n            }\n        }\n        return nodeSet\n    }\n}\n\nexport class LastBlockDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/lastblock'\n    }\n\n    async dataProcess(rawData) {\n        const chainHeights = {}\n        for (const chainItem of rawData) {\n            chainHeights['THOR'] = +chainItem['thorchain']\n            chainHeights[chainItem['chain']] = +chainItem['last_observed_in']\n        }\n        return chainHeights\n    }\n}\n","export const DataStorage = {\n    lastBlock: {\n        'THOR': 0,\n    },\n    lastNodes: []\n}\n","import {NodeGroup} from \"@/visual/NodeGroup\";\nimport {DebugNodeJuggler, NodeTracker} from \"@/helpers/data/NodeTracker\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {LastBlockDataSource, NodeDataSource} from \"@/helpers/data/URLDataSource\";\nimport {Config} from \"@/config\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\n\nexport class MainScene {\n    constructor(scene, camera) {\n        this.scene = scene\n        this.camera = camera\n        this.prevNodes = new NodeSet([], false)\n        this.nodes = new NodeSet([], false)\n\n        this.nodeGroup = new NodeGroup(this.scene)\n\n        this._firstTime = true\n        this._runDataSource()\n\n        this._fullyLoaded = false\n\n        this._nodeJuggler = new DebugNodeJuggler(3)\n        this._nodeJuggler.enabled = Config.DataSource.NodeJuggler.Enabled\n\n        // this._debugSection()\n    }\n\n    _runDataSource() {\n        const baseUrl = Config.DataSource.NodesURL\n        this.nodeDataSource = new NodeDataSource(baseUrl, Config.DataSource.Nodes.PollPeriod)\n        this.nodeDataSource.callback = this.handleData.bind(this)\n        this.nodeDataSource.run()\n\n        this.lastBlockSource = new LastBlockDataSource(baseUrl, Config.DataSource.LastBlock.PollPeriod)\n        this.lastBlockSource.callback = (lastBlock) => {\n            DataStorage.lastBlock = lastBlock\n        }\n        this.lastBlockSource.run()\n    }\n\n    handleData(nodes) {\n        if (!nodes) {\n            console.error('No nodes to handle!')\n            return\n        }\n\n        if(!this._fullyLoaded) {\n            this._fullyLoaded = true\n            emitter.emit(EventTypes.FullyLoaded)\n        }\n\n        nodes = this._nodeJuggler.handleNodes(nodes)\n\n        DataStorage.lastNodes = nodes\n\n        emitter.emit(EventTypes.DataSourceTick, nodes)\n\n        this.prevNodes = this.nodes\n        this.nodes = nodes\n        const tracker = new NodeTracker(this.prevNodes, this.nodes)\n        const events = tracker.extractEvents()\n\n        console.info(`Handle Data tick! Total: ${events.length} events.`)\n\n        for (const event of events) {\n            const node = event.node\n            if (node.address) {\n                if (event.type === NodeEvent.EVENT_TYPE.CREATE) {\n                    this.nodeGroup.createNewNode(node, nodes)\n                } else if (event.type === NodeEvent.EVENT_TYPE.DESTROY) {\n                    this.nodeGroup.destroyNode(node)\n                } else {\n                    this.nodeGroup.reactEvent(event)\n                }\n            }\n        }\n\n        if (this._firstTime) {\n            for (let i = 0; i < Config.Physics.Startup.SimulationSteps; ++i) {\n                this.nodeGroup.update(Config.Physics.Startup.DeltaTime)\n            }\n            this._firstTime = false\n        }\n\n        if (events.length) {\n            emitter.emit(EventTypes.Activity)\n        }\n    }\n\n    update(delta) {\n        this.nodeGroup.update(delta)\n        this.nodeGroup.updateFromCamera(this.camera)\n    }\n\n    dispose() {\n        this.nodeDataSource.stop()\n        this.lastBlockSource.stop()\n        this.nodeGroup.dispose()\n        clearObject(this.scene)\n    }\n\n    findNodeByAddress(address) {\n        return this.nodes.byAddress[address]\n    }\n\n    pick(name) {\n        const node = this.findNodeByAddress(name)\n        console.log(node)\n    }\n}\n","export default \"/*\\n * Copyright 2014 Roman Bobniev (FatumR)\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvarying vec2 vUv;\\nuniform float time;\\n\\n#define OCTAVES  8.0\\n\\n\\nfloat rand(vec2 co){\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nfloat rand2(vec2 co){\\n    return fract(cos(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\n// Rough Value noise implementation\\nfloat valueNoiseSimple(vec2 vl) {\\n    float minStep = 1.0;\\n\\n    vec2 grid = floor(vl);\\n    vec2 gridPnt1 = grid;\\n    vec2 gridPnt2 = vec2(grid.x, grid.y + minStep);\\n    vec2 gridPnt3 = vec2(grid.x + minStep, grid.y);\\n    vec2 gridPnt4 = vec2(gridPnt3.x, gridPnt2.y);\\n\\n    float s = rand2(grid);\\n    float t = rand2(gridPnt3);\\n    float u = rand2(gridPnt2);\\n    float v = rand2(gridPnt4);\\n\\n    float x1 = smoothstep(0., 1., fract(vl.x));\\n    float interpX1 = mix(s, t, x1);\\n    float interpX2 = mix(u, v, x1);\\n\\n    float y = smoothstep(0., 1., fract(vl.y));\\n    float interpY = mix(interpX1, interpX2, y);\\n\\n    return interpY;\\n}\\n\\n\\nfloat fractalNoise(vec2 vl) {\\n    float persistance = 2.0;\\n    float amplitude = 0.5;\\n    float rez = 0.0;\\n    vec2 p = vl;\\n\\n    for (float i = 0.0; i < OCTAVES; i++) {\\n        rez += amplitude * valueNoiseSimple(p);\\n        amplitude /= persistance;\\n        p *= persistance;\\n    }\\n    return rez;\\n}\\n\\nfloat complexFBM(vec2 p) {\\n    float slow = time / 2.5;\\n    float fast = time / .5;\\n    vec2 offset1 = vec2(slow, 0.);// Main front\\n    vec2 offset2 = vec2(sin(fast)* 0.1, 0.);// sub fronts\\n\\n    return\\n    fractalNoise(p + offset1 + fractalNoise(\\n    p + fractalNoise(\\n    p + 2. * fractalNoise(p - offset2)\\n    )\\n    )\\n    );\\n}\\n\\nconst vec3 blueColor = vec3(0.029411765, 0.207843137, 0.250392157);\\nconst vec3 blackColor2 = vec3(0.00803922, 0.0203921569, 0.015686275);\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n    uv = uv * vec2(2.0, 0.5) - 1.0;\\n\\n    vec3 rez = mix(blackColor2, blueColor, complexFBM(uv));\\n    gl_FragColor = vec4(rez, 1.0);\\n}\";","import * as THREE from \"three\";\n\nconst defaultQuad = new THREE.PlaneBufferGeometry(2, 2, 1, 1);\nconst defaultVertexShader = `\t\nuniform vec4 uSize; \t\t//w h t l \nvarying vec2 vUv;\n\nvoid main(){\n\tvUv = uv;\n\tvec2 transformed = \n\t    position.xy * uSize.xy \n\t    - vec2(1.,-1.) + vec2( uSize.x ,  -uSize.y ) \n\t    + vec2( uSize.w , - uSize.z ) * 2.;\n\tgl_Position = vec4( transformed , 1. , 1. );\n}\n`;\n\nconst defaultFragmentShader = `\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n// uniform float time;\n\nvoid main(){\n\tgl_FragColor = texture2D( uTexture , vUv );\n}\t\n`;\n\nexport default class ScreenQuad extends THREE.Mesh {\n    constructor({\n                    width = 1,        \t//100%\n                    height = 1,\t\t\t//100%\n                    top = 0,\n                    left = 0,\n                    texture = null,\n                    fragmentShader = false\n                } = {}) {\n        super(defaultQuad, new THREE.ShaderMaterial({\n            uniforms: {\n                uTexture: {\n                    type: 't',\n                    value: texture\n                },\n                uSize: {\n                    type: 'v4',\n                    value: new THREE.Vector4(1, 1, 0, 0)\n                },\n                time: {value: 0.0},\n            },\n            vertexShader: defaultVertexShader,\n            fragmentShader: fragmentShader ? fragmentShader : defaultFragmentShader,\n            depthWrite: false\n        }));\n        this.frustumCulled = false;\n        this.renderOrder = -1;\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n\n        //cleanup\n        this._pixels = [false, false, false, false]; //w h t l\n        this._componentSetters = [\n            this.setWidth,\n            this.setHeight,\n            this.setTop,\n            this.setLeft\n        ];\n        this._components = [\n            'width',\n            'height',\n            'top',\n            'left'\n        ];\n        this.screenSize = new THREE.Vector2(1, 1);\n        this.setSize(width, height);\n        this.setOffset(top, left);\n    }\n\n    update(dt) {\n        this.material.uniforms.time.value += dt;\n    }\n\n    setScreenSize(width, height) {\n        // this.material.uniforms.uScreenSize.value.set( width , height , 1 / width , 1 / height );\n        this.screenSize.set(width, height);\n        this._pixels.forEach((p, pi) => {\n            //if a component is set in pixels, update the uniform\n            if (p) this._componentSetters[pi].call(this, this[this._components[pi]]);\n        });\n    }\n\n    setSize(width, height) {\n        this.setWidth(width);\n        this.setHeight(height);\n    }\n\n    setWidth(v) {\n        this.width = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.x = parseInt(v) / this.screenSize.x;\n            this._pixels[0] = true;\n        } else {\n            this.material.uniforms.uSize.value.x = v;\n            this._pixels[0] = false;\n        }\n    }\n\n    setHeight(v) {\n        this.height = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.y = parseInt(v) / this.screenSize.y;\n            this._pixels[1] = true;\n        } else {\n            this.material.uniforms.uSize.value.y = v;\n            this._pixels[1] = false;\n        }\n    }\n\n    setOffset(top, left) {\n        // this.material.uniforms.uSize.value.z = top;\n        // this.material.uniforms.uSize.value.w = left;\n        this.setLeft(left);\n        this.setTop(top);\n    }\n\n    setTop(v) {\n        this.top = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.z = parseInt(v) / this.screenSize.y;\n            this._pixels[2] = true;\n        } else {\n            this.material.uniforms.uSize.value.z = v;\n            this._pixels[2] = false;\n        }\n    }\n\n    setLeft(v) {\n        this.left = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.w = parseInt(v) / this.screenSize.x;\n            this._pixels[3] = true;\n        } else {\n            this.material.uniforms.uSize.value.w = v;\n            this._pixels[3] = false;\n        }\n    }\n}","// import BgShader from '@/visual/shader/bg_1.frag'\nimport BgShader from '@/visual/shader/bg_smoke.frag'\n// import BgShader from '@/visual/shader/bg_basic_swirl.frag'\nimport ScreenQuad from \"@/visual/helpers/ScreenQuad\";\nimport _ from \"lodash\";\nimport * as THREE from \"three\";\n\nclass BackgroundBase {\n    constructor(scene) {\n        this.scene = scene\n    }\n\n    install() {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    update(dt) {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    setSize(w, h) {\n    }\n}\n\nexport class Background extends BackgroundBase {\n    constructor(scene) {\n        super(scene);\n        this.quad = new ScreenQuad({\n            fragmentShader: BgShader\n        });\n    }\n\n    install() {\n        this.scene.add(this.quad)\n    }\n\n    update(dt) {\n        this.quad.update(dt)\n    }\n\n    setSize(w, h) {\n        if(this.quad) {\n            this.quad.setScreenSize(w, h)\n        }\n    }\n}\n\nexport class BlackgroundStaticBox extends BackgroundBase {\n    constructor(scene, baseUrl, ext='jpg') {\n        super(scene);\n        this.ext = ext\n        this.baseUrl = baseUrl\n    }\n\n    install() {\n        const ext = this.ext\n        const urls = _.map([\n            `right.${ext}`, `left.${ext}`,\n            `top.${ext}`, `bottom.${ext}`,\n            `front.${ext}`, `back.${ext}`\n        ], (name) => `${this.baseUrl}/${name}`);\n\n        this.scene.background = new THREE.CubeTextureLoader().load(urls)\n    }\n}\n","<template>\n    <div class=\"control-panel\">\n        <button @click=\"setSceneMode(mode.value)\"\n                :class=\"isButtonSelectedClass(mode.value)\"\n                v-for=\"mode in modes\" :key=\"mode.value\">\n            {{ mode.text }}\n        </button>\n    </div>\n</template>\n\n<script>\n\nimport {NodeGroupModes} from \"@/visual/NodeGroup\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'ControlPanel',\n    components: {},\n    emits: ['mode-selected'],\n    props: {},\n    data() {\n        return {\n            selectedMode: NodeGroupModes.Normal,\n            activeOnly: false,\n        }\n    },\n    computed: {\n        modes() {\n            return [\n                {value: NodeGroupModes.Normal, text: 'NORMAL'},\n                {value: NodeGroupModes.Status, text: 'STATUS'},\n                {value: NodeGroupModes.Provider, text: 'PROVIDER'},\n                {value: NodeGroupModes.Version, text: 'VERSION'},\n                {value: NodeGroupModes.Bond, text: 'BOND'},\n                {value: NodeGroupModes.Geo, text: 'GEO'},\n            ]\n        }\n    },\n    methods: {\n        isButtonSelectedClass(modeName) {\n            return {\n                'button-selected': this.selectedMode === modeName\n            }\n        },\n\n        setSceneMode(value) {\n            this.selectedMode = value\n            this.$emit('mode-selected', value)\n        },\n    },\n    mounted() {\n        if(Config.Scene.InitialMode && Config.Scene.InitialMode !== NodeGroupModes.Normal) {\n            setTimeout(() => this.setSceneMode(Config.Scene.InitialMode), 1000.0)\n        }\n    }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.control-panel {\n    position: absolute;\n    bottom: 4px;\n    right: 4px;\n}\n\n.button-selected {\n    border-width: 2px;\n    opacity: 1;\n}\n\n.float-right {\n    float: right;\n}\n\n</style>\n","import { render } from \"./ControlPanel.vue?vue&type=template&id=3168b94a&scoped=true\"\nimport script from \"./ControlPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ControlPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ControlPanel.vue?vue&type=style&index=0&id=3168b94a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3168b94a\"]])\n\nexport default __exports__","<template>\n    <Transition name=\"shrink\">\n        <div :class=\"{'window window-left': isLeft, 'window window-right': !isLeft }\" @keyup.esc.prevent=\"close\"\n             tabindex=\"0\" ref=\"modal\">\n            <div class=\"close-button\" @click=\"close\" v-tippy content=\"Close it\"></div>\n            <h1>Node details</h1>\n            <h2>\n                <font-awesome-icon class=\"icon\"\n                                   icon=\"fa-solid fa-arrow-right\"\n                                   v-if=\"node.requestedToLeave\"\n                                   content=\"Requested to leave!\"\n                                   v-tippy\n                />\n\n                <font-awesome-icon class=\"icon\"\n                                   icon=\"fa-solid fa-arrow-down-up-lock\"\n                                   v-if=\"node.forcedToLeave\"\n                                   content=\"Forced to leave!\"\n                                   v-tippy\n                />\n\n                {{ node.address }}\n                <button class=\"copy-button\" @click=\"copyNodeAddress\" content=\"Copy address\" v-tippy>\n                    <font-awesome-icon icon=\"fa-solid fa-copy\"/>\n                </button>\n            </h2>\n\n            <div class=\"prop-grid\">\n                <div class=\"prop-box\">\n                    <div class=\"category\">Status</div>\n                    {{ statusEmoji }}\n                    <span :class=\"nodeStatusClass\">{{ node.status }}</span>\n                </div>\n                <div class=\"prop-box\">\n                    <div class=\"category\">Since</div>\n                    <div class=\"value\">\n                        <span v-if=\"isOldest\" v-tippy content=\"The oldest active node\">⌛</span>\n                        {{ statusSince }} <small>(#{{ ageRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">💽 Version</div>\n                    <div class=\"value\">\n                        <span v-if=\"isUpToDataVersion\" v-tippy content=\"Latest version\">👌</span>\n                        <span v-else v-tippy content=\"Consider upgrading your node!\">⚠️</span>\n                        {{ node.version }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">🕸️ IP address</div>\n                    <div class=\"value\">\n                        <a :href=\"ipAddressInfoLink\" target=\"_blank\">\n                            {{ node.IPAddress }}\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">📍 Location</div>\n                    <div class=\"value\">\n                        {{ node.IPInfo?.flag }}\n                        {{ node.IPInfo?.country }},\n                        {{ node.IPInfo?.city || 'unknown city' }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">☁️ Provider</div>\n                    <div class=\"value\">{{ providerName }}</div>\n                </div>\n\n                <div class=\"prop-box\" v-else>\n                    <div class=\"value\">Unknown IP address</div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🌐 Explorer</div>\n                    <div class=\"value\">\n                        <a :href=\"`https://viewblock.io/thorchain/address/${node.address}`\"\n                           target=\"_blank\">Viewblock – {{ node.shortAddress }}</a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🔒 Bond</div>\n                    <div class=\"value\">\n                        {{ nodeBond }}\n                        <small>(#{{ nodeBondRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🏆 Awards</div>\n                    <div class=\"value\">\n                        {{ award }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">😈 Slash points</div>\n                    <div class=\"value\">\n                        {{ node.slashPoints }} pts.\n                        <small>(#{{ slashPointsRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-for=\"[chain, height] of chainEntries\" :key=\"chain\">\n                    <div class=\"category\">{{ chain }}</div>\n                    <div class=\"value\">\n                        <span :title=\"height\" v-if=\"chainLag(chain)\" class=\"chain-lag\">\n                            🩸\n                            <span v-if=\"height > 0\">\n                                {{ chainLag(chain) }} blocks behind!\n                            </span>\n                            <span v-else>\n                                No sync at all\n                            </span>\n                        </span>\n                        <span v-else>\n                            Up to date\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Transition>\n\n</template>\n\n<script>\n\nimport {shortRune} from \"@/helpers/MathUtil\";\nimport copy from \"copy-to-clipboard\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\nimport _ from \"lodash\";\n\nconst STATUS_PROPS = {\n    [NodeStatus.Active]: {\n        emoji: '✅',\n        class: 'status-active'\n    },\n    [NodeStatus.Standby]: {\n        emoji: '⏳',\n        class: 'status-standby',\n    },\n    [NodeStatus.Disabled]: {\n        emoji: '🔴',\n        class: 'status-disabled',\n    },\n    [NodeStatus.Whitelisted]: {\n        emoji: '📄',\n        class: 'status-whitelisted',\n    },\n}\n\nexport default {\n    name: 'NodeDetailsWindow',\n    emits: ['close'],\n    props: [\n        'node',\n        'nodeSet',\n        'isLeft'\n    ],\n    data() {\n        return {}\n    },\n    computed: {\n        chainEntries() {\n            const keys = Object.keys(this.nodeSet.topHeights)\n            keys.sort()\n            return _.map(keys, chain => [chain, this.node.observeChains[chain] ?? 0])\n        },\n        topThorHeight() {\n            return DataStorage.lastBlock['THOR']\n        },\n        hasIP() {\n            return this.node.IPAddress && this.node.IPAddress !== ''\n        },\n        statusEmoji() {\n            return STATUS_PROPS[this.node.status]?.emoji\n        },\n        nodeStatusClass() {\n            return STATUS_PROPS[this.node.status]?.class\n        },\n        statusSince() {\n            const timestamp = this.nodeSet.estimateTimestampAtBlock(this.topThorHeight, this.node.statusSince)\n            try {\n                return (new Date(timestamp)).toISOString().slice(0, 10)\n            } catch {\n                return 'N/A'\n            }\n        },\n        isOldest() {\n            return true\n        },\n        ageRank() {\n            return this.nodeSet.ranks.age[this.node.address]\n        },\n        award() {\n            return shortRune(Math.round(this.node.currentAward))\n        },\n        nodeBond() {\n            return shortRune(Math.round(this.node.bond))\n        },\n        nodeBondRank() {\n            return this.nodeSet.ranks.bond[this.node.address]\n        },\n        nodeBondPercent() {\n            return this.nodeSet.bondPercentOfTotal(this.node.bond)\n        },\n        ipAddressInfoLink() {\n            return `https://www.infobyip.com/ip-${this.node.IPAddress}.html`\n        },\n        slashPointsRank() {\n            return this.nodeSet.ranks.slash[this.node.address]\n        },\n        chainLag() {\n            return (chain) => this.nodeSet.getChainHeightLagBlocks(this.node, chain)\n        },\n        providerName() {\n            const nativeName = this.node?.IPInfo?.providerName ?? UNKNOWN\n            return IPAddressInfoLoader.refineProviderName(nativeName)\n        },\n        isUpToDataVersion() {\n            return this.node.version === this.nodeSet.topVersion\n        }\n    },\n    methods: {\n        copyNodeAddress() {\n            copy(this.node.address)\n        },\n        close() {\n            this.$emit('close')\n        }\n    },\n    mounted() {\n        this.$refs.modal.focus()\n    },\n    // watch: {\n    //     nodeSet(ns) {\n    //         console.warn('node set changed', ns.ranks.bond)\n    //     }\n    // }\n}\n\n</script>\n\n<style lang=\"scss\">\n\n// todo: different variant for Portrait orientation\n.window {\n    position: fixed;\n    top: 50%;\n    transform: translate(0%, -50%);\n\n    border: 1px solid #097a7b;\n    border-radius: 12px;\n\n    background-color: rgba(0, 0, 0, 0.72);\n    backdrop-filter: blur(8px);\n    color: turquoise;\n    padding: 20px;\n\n    //max-width: 50vw;\n\n    font-size: 10pt;\n}\n\n.window-left {\n    left: 5%;\n}\n\n.window-right {\n    right: 5%;\n}\n\n.close-button {\n    float: right;\n    overflow: hidden;\n    position: relative;\n    border: none;\n    padding: 0;\n    width: 2em;\n    height: 2em;\n    border-radius: 50%;\n    background: transparent;\n    color: turquoise;\n    font: inherit;\n    text-indent: 100%;\n    cursor: pointer;\n\n    &:focus {\n        outline: solid 0 transparent;\n        box-shadow: 0 0 0 2px #8ed0f9\n    }\n\n    &:hover {\n        background: rgba(29, 161, 142, .1)\n    }\n\n    &:before, &:after {\n        position: absolute;\n        top: 15%;\n        left: calc(50% - .0625em);\n        width: .125em;\n        height: 70%;\n        border-radius: .125em;\n        transform: rotate(45deg);\n        background: currentcolor;\n        content: ''\n    }\n\n    &:after {\n        transform: rotate(-45deg);\n    }\n}\n\nh1 {\n    margin: 0;\n    padding: 0;\n    color: white;\n}\n\n.category {\n    font-family: EXO2, monospace;\n    //font-weight: bolder;\n    color: white;\n    font-size: 9pt;\n}\n\n.value {\n    font-family: EXO2, monospace;\n    font-size: 10pt;\n}\n\n.prop-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 4px;\n    color: white;\n    //font-size: 7pt;\n}\n\n.prop-box {\n    background-color: rgba(1, 0, 0, 0.5);\n    color: turquoise;\n    border-radius: 5px;\n    padding: 6px;\n    border: 1px dashed #16504a;\n    font-size: 14pt;\n}\n\n.status-standby {\n    color: #b4b4b4;\n}\n\n.status-disabled {\n    color: red;\n}\n\n.status-active {\n    color: #9cffb2;\n}\n\n.status-whitelisted {\n    color: white;\n}\n\n.chain-lag {\n    color: orangered;\n}\n\n.copy-button {\n    display: inline-block;\n    background: rgba(0, 0, 0, 0.5);\n    //border-radius: 10px;\n    padding: 4px;\n    font-size: 10pt;\n    color: white;\n}\n\n.icon {\n    padding: 2px;\n}\n\nsmall {\n    color: #34bfb1;\n}\n\n</style>\n","import { render } from \"./NodeDetailsWindow.vue?vue&type=template&id=0f2096c0\"\nimport script from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\nexport * from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\n\nimport \"./NodeDetailsWindow.vue?vue&type=style&index=0&id=0f2096c0&lang=scss\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport CameraControls from \"camera-controls\";\nimport TWEEN from \"tween.js\";\n\nexport class CameraController {\n    constructor(domElement, center = new THREE.Vector3()) {\n        this.domElement = domElement\n        this.center = center\n        this._createCamera()\n        this._createCameraControl()\n        this._animating = false\n        this.controlsEnabled = true\n    }\n\n    reset() {\n        this.controls.reset()\n    }\n\n    projectToScreen(worldVector) {\n        this.camera.updateProjectionMatrix()\n        return worldVector.project(this.camera)\n    }\n\n    _createCamera() {\n        this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight,\n            0.001, Config.Controls.Camera.Distance.Max * 2);\n        // this.camera = new THREE.OrthographicCamera()\n        this.camera.position.z = Config.Controls.Camera.Distance.Start\n    }\n\n    _createCameraControl() {\n        const controls = this.controls = new CameraControls(this.camera, this.domElement);\n        const cfg = Config.Controls.Camera\n\n        controls.dragToOffset = true\n        controls.minDistance = cfg.Distance.Min\n        controls.maxDistance = cfg.Distance.Max\n        this.camera.position.z = cfg.Distance.Start\n\n        controls.minAzimuthAngle = THREE.MathUtils.degToRad(-cfg.AzimuthAngleLimit)\n        controls.maxAzimuthAngle = THREE.MathUtils.degToRad(cfg.AzimuthAngleLimit)\n\n        controls.minPolarAngle = THREE.MathUtils.degToRad(-cfg.PolarAngleLimit + 90)\n        controls.maxPolarAngle = THREE.MathUtils.degToRad(cfg.PolarAngleLimit + 90)\n\n        controls.update(0)\n    }\n\n    update(delta) {\n        if (this.controlsEnabled && !this._animating && !this.cameraInspectsObject) {\n            this.controls.update(delta);\n        }\n        // todo: if we look at the object, keep tracking it while it moves around\n    }\n\n    onResize() {\n        const canvas = this.domElement;\n        const width = canvas.clientWidth;\n        const height = canvas.clientHeight;\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n\n    _getEndQuaternion(target, lookAtThis) {\n        const currPos = this.camera.position.clone()\n        const currQ = this.camera.quaternion.clone()\n\n        this.camera.position.copy(target)\n        this.camera.lookAt(lookAtThis)\n\n        const endQuaternion = this.camera.quaternion.clone()\n\n        this.camera.position.copy(currPos)\n        this.camera.quaternion.copy(currQ)\n\n        return endQuaternion\n    }\n\n    cameraLookAtNode(nodeObj, flat) {\n        if (!this.cameraInspectsObject) {\n            this.oldCameraPos = this.camera.position.clone()\n            this.oldCameraQuaternion = this.camera.quaternion.clone()\n            this.cameraInspectsObject = true\n        }\n\n        this._animating = true\n\n        const cfg = Config.Controls.Camera.Animation\n\n        const that = this\n\n        let target\n        let targetLookAt\n\n        if(flat) {\n            target = nodeObj.o.position.clone().add(new THREE.Vector3(0, 0, cfg.DistanceWhenZoomed))\n            targetLookAt = nodeObj.o.position.clone()\n        } else {\n            const deltaVector = nodeObj.o.position.clone().normalize().multiplyScalar(cfg.DistanceWhenZoomed)\n            target = nodeObj.o.position.clone().add(deltaVector)\n            targetLookAt = nodeObj.o.position.clone()\n        }\n\n        new TWEEN.Tween(this.camera.position)\n            .to(target, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                that._animating = false\n            })\n            .start();\n\n        const endQuaternion = this._getEndQuaternion(target, targetLookAt)\n        new TWEEN.Tween(this.camera.quaternion)\n            .to(endQuaternion, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    restoreCamera() {\n        if (this.cameraInspectsObject) {\n            this.cameraInspectsObject = false\n            this._animating = true\n\n            const that = this\n            const animTime = Config.Controls.Camera.Animation.Duration\n            new TWEEN.Tween(this.camera.position)\n                .to(this.oldCameraPos, Config.Controls.Camera.Animation.Duration)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .onUpdate(function () {\n                    // that.camera.position.copy(this);\n                    // that.camera.lookAt(that.center)\n                })\n                .onComplete(() => {\n                    that._animating = false\n                })\n                .start();\n\n            const endQuaternion = this._getEndQuaternion(this.oldCameraPos, this.center)\n            new TWEEN.Tween(this.camera.quaternion)\n                .to(endQuaternion, animTime)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .start()\n        }\n    }\n\n    dispose() {\n        this.controls.dispose()\n    }\n}\n","<template>\n    <div class=\"loading-indicator\">Loading.<span>{{ dots }}</span> </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'LoadingIndicator',\n    data() {\n        return {\n            dots: ''\n        }\n    },\n    methods: {\n        tick() {\n            this.dots += '.'\n            if(this.dots.length >= 3) {\n                this.dots = ''\n            }\n        }\n    },\n    mounted() {\n        this.timer = setInterval(this.tick, 200.0)\n    },\n    beforeUnmount() {\n        clearInterval(this.timer)\n    }\n}\n\n</script>\n\n<style scoped>\n    .loading-indicator {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 1.5rem;\n        color: white;\n    }\n</style>","import { render } from \"./LoadingIndicator.vue?vue&type=template&id=3618bf7b&scoped=true\"\nimport script from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingIndicator.vue?vue&type=style&index=0&id=3618bf7b&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3618bf7b\"]])\n\nexport default __exports__","/**\n * @author Mark Kellogg - http://www.github.com/mkkellogg\n */\n\n//=======================================\n// Trail Renderer\n//=======================================\nimport * as THREE from \"three\"\n\nexport class TrailRenderer extends THREE.Object3D {\n    constructor(scene, orientToMovement) {\n        super();\n\n        this.orientToMovement = !!orientToMovement;\n\n        this.scene = scene;\n\n        this.geometry = null;\n        this.mesh = null;\n        this.nodeCenters = null;\n\n        this.lastNodeCenter = null;\n        this.currentNodeCenter = null;\n        this.lastOrientationDir = null;\n        this.nodeIDs = null;\n        this.currentLength = 0;\n        this.currentEnd = 0;\n        this.currentNodeID = 0;\n\n    }\n}\n\nTrailRenderer.MaxHeadVertices = 128;\nTrailRenderer.LocalOrientationTangent = new THREE.Vector3(1, 0, 0);\nTrailRenderer.LocalOrientationDirection = new THREE.Vector3(0, 0, -1);\nTrailRenderer.LocalHeadOrigin = new THREE.Vector3(0, 0, 0);\nTrailRenderer.PositionComponentCount = 3;\nTrailRenderer.UVComponentCount = 2;\nTrailRenderer.IndicesPerFace = 3;\nTrailRenderer.FacesPerQuad = 2;\n\nTrailRenderer.Shader = {};\n\nTrailRenderer.Shader.BaseVertexVars = [\n\n    \"attribute float nodeID;\",\n    \"attribute float nodeVertexID;\",\n    \"attribute vec3 nodeCenter;\",\n\n    \"uniform float minID;\",\n    \"uniform float maxID;\",\n    \"uniform float trailLength;\",\n    \"uniform float maxTrailLength;\",\n    \"uniform float verticesPerNode;\",\n    \"uniform vec2 textureTileFactor;\",\n\n    \"uniform vec4 headColor;\",\n    \"uniform vec4 tailColor;\",\n\n    \"varying vec4 vColor;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedVertexVars = [\n\n    TrailRenderer.Shader.BaseVertexVars,\n    \"varying vec2 vUV;\",\n    \"uniform float dragTexture;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseFragmentVars = [\n\n    \"varying vec4 vColor;\",\n    \"uniform sampler2D texture;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedFragmentVars = [\n\n    TrailRenderer.Shader.BaseFragmentVars,\n    \"varying vec2 vUV;\"\n\n].join(\"\\n\");\n\n\nTrailRenderer.Shader.VertexShaderCore = [\n\n    \"float fraction = ( maxID - nodeID ) / ( maxID - minID );\",\n    \"vColor = ( 1.0 - fraction ) * headColor + fraction * tailColor;\",\n    \"vec4 realPosition = vec4( ( 1.0 - fraction ) * position.xyz + fraction * nodeCenter.xyz, 1.0 ); \",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseVertexShader = [\n\n    TrailRenderer.Shader.BaseVertexVars,\n\n    \"void main() { \",\n\n    TrailRenderer.Shader.VertexShaderCore,\n    \"gl_Position = projectionMatrix * viewMatrix * realPosition;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseFragmentShader = [\n\n    TrailRenderer.Shader.BaseFragmentVars,\n\n    \"void main() { \",\n\n    \"gl_FragColor = vColor;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedVertexShader = [\n\n    TrailRenderer.Shader.TexturedVertexVars,\n\n    \"void main() { \",\n\n    TrailRenderer.Shader.VertexShaderCore,\n    \"float s = 0.0;\",\n    \"float t = 0.0;\",\n    \"if ( dragTexture == 1.0 ) { \",\n    \"   s = fraction *  textureTileFactor.s; \",\n    \" \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;\",\n    \"} else { \",\n    \"\ts = nodeID / maxTrailLength * textureTileFactor.s;\",\n    \" \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;\",\n    \"}\",\n    \"vUV = vec2( s, t ); \",\n    \"gl_Position = projectionMatrix * viewMatrix * realPosition;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedFragmentShader = [\n\n    TrailRenderer.Shader.TexturedFragmentVars,\n\n    \"void main() { \",\n\n    \"vec4 textureColor = texture2D( texture, vUV );\",\n    \"gl_FragColor = vColor * textureColor;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.createMaterial = function (vertexShader, fragmentShader, customUniforms) {\n\n    customUniforms = customUniforms || {};\n\n    customUniforms.trailLength = {type: \"f\", value: null};\n    customUniforms.verticesPerNode = {type: \"f\", value: null};\n    customUniforms.minID = {type: \"f\", value: null};\n    customUniforms.maxID = {type: \"f\", value: null};\n    customUniforms.dragTexture = {type: \"f\", value: null};\n    customUniforms.maxTrailLength = {type: \"f\", value: null};\n    customUniforms.textureTileFactor = {type: \"v2\", value: null};\n\n    customUniforms.headColor = {type: \"v4\", value: new THREE.Vector4()};\n    customUniforms.tailColor = {type: \"v4\", value: new THREE.Vector4()};\n\n    vertexShader = vertexShader || TrailRenderer.Shader.BaseVertexShader;\n    fragmentShader = fragmentShader || TrailRenderer.Shader.BaseFragmentShader;\n\n    return new THREE.ShaderMaterial(\n        {\n            uniforms: customUniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n\n            transparent: true,\n            alphaTest: 0.5,\n\n            blending: THREE.CustomBlending,\n            blendSrc: THREE.SrcAlphaFactor,\n            blendDst: THREE.OneMinusSrcAlphaFactor,\n            blendEquation: THREE.AddEquation,\n\n            depthTest: true,\n            depthWrite: false,\n\n            side: THREE.DoubleSide\n        });\n\n}\n\nTrailRenderer.createBaseMaterial = function (customUniforms) {\n\n    return this.createMaterial(TrailRenderer.Shader.BaseVertexShader, TrailRenderer.Shader.BaseFragmentShader, customUniforms);\n\n}\n\nTrailRenderer.createTexturedMaterial = function (customUniforms) {\n\n    customUniforms = {};\n    customUniforms.texture = {type: \"t\", value: null};\n\n    return this.createMaterial(TrailRenderer.Shader.TexturedVertexShader, TrailRenderer.Shader.TexturedFragmentShader, customUniforms);\n\n}\n\nTrailRenderer.prototype.initialize = function (material, length, dragTexture, localHeadWidth, localHeadGeometry, targetObject) {\n\n    this.deactivate();\n    this.destroyMesh();\n\n    this.length = (length > 0) ? length + 1 : 0;\n    this.dragTexture = (!dragTexture) ? 0 : 1;\n    this.targetObject = targetObject;\n\n    this.initializeLocalHeadGeometry(localHeadWidth, localHeadGeometry);\n\n    this.nodeIDs = [];\n    this.nodeCenters = [];\n\n    for (var i = 0; i < this.length; i++) {\n\n        this.nodeIDs[i] = -1;\n        this.nodeCenters[i] = new THREE.Vector3();\n\n    }\n\n    this.material = material;\n\n    this.initializeGeometry();\n    this.initializeMesh();\n\n    this.material.uniforms.trailLength.value = 0;\n    this.material.uniforms.minID.value = 0;\n    this.material.uniforms.maxID.value = 0;\n    this.material.uniforms.dragTexture.value = this.dragTexture;\n    this.material.uniforms.maxTrailLength.value = this.length;\n    this.material.uniforms.verticesPerNode.value = this.VerticesPerNode;\n    this.material.uniforms.textureTileFactor.value = new THREE.Vector2(1.0, 1.0);\n\n    this.reset();\n\n}\n\nTrailRenderer.prototype.initializeLocalHeadGeometry = function (localHeadWidth, localHeadGeometry) {\n\n    this.localHeadGeometry = [];\n\n    if (!localHeadGeometry) {\n\n        var halfWidth = localHeadWidth || 1.0;\n        halfWidth = halfWidth / 2.0;\n\n        this.localHeadGeometry.push(new THREE.Vector3(-halfWidth, 0, 0));\n        this.localHeadGeometry.push(new THREE.Vector3(halfWidth, 0, 0));\n\n        this.VerticesPerNode = 2;\n\n    } else {\n\n        this.VerticesPerNode = 0;\n        for (var i = 0; i < localHeadGeometry.length && i < TrailRenderer.MaxHeadVertices; i++) {\n\n            var vertex = localHeadGeometry[i];\n\n            if (vertex && vertex instanceof THREE.Vector3) {\n\n                var vertexCopy = new THREE.Vector3();\n\n                vertexCopy.copy(vertex);\n\n                this.localHeadGeometry.push(vertexCopy);\n                this.VerticesPerNode++;\n\n            }\n\n        }\n\n    }\n\n    this.FacesPerNode = (this.VerticesPerNode - 1) * 2;\n    this.FaceIndicesPerNode = this.FacesPerNode * 3;\n\n}\n\nTrailRenderer.prototype.initializeGeometry = function () {\n\n    this.vertexCount = this.length * this.VerticesPerNode;\n    this.faceCount = this.length * this.FacesPerNode;\n\n    var geometry = new THREE.BufferGeometry();\n\n    var nodeIDs = new Float32Array(this.vertexCount);\n    var nodeVertexIDs = new Float32Array(this.vertexCount * this.VerticesPerNode);\n    var positions = new Float32Array(this.vertexCount * TrailRenderer.PositionComponentCount);\n    var nodeCenters = new Float32Array(this.vertexCount * TrailRenderer.PositionComponentCount);\n    var uvs = new Float32Array(this.vertexCount * TrailRenderer.UVComponentCount);\n    var indices = new Uint32Array(this.faceCount * TrailRenderer.IndicesPerFace);\n\n    var nodeIDAttribute = new THREE.BufferAttribute(nodeIDs, 1);\n    nodeIDAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeID', nodeIDAttribute);\n\n    var nodeVertexIDAttribute = new THREE.BufferAttribute(nodeVertexIDs, 1);\n    nodeVertexIDAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeVertexID', nodeVertexIDAttribute);\n\n    var nodeCenterAttribute = new THREE.BufferAttribute(nodeCenters, TrailRenderer.PositionComponentCount);\n    nodeCenterAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeCenter', nodeCenterAttribute);\n\n    var positionAttribute = new THREE.BufferAttribute(positions, TrailRenderer.PositionComponentCount);\n    positionAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('position', positionAttribute);\n\n    var uvAttribute = new THREE.BufferAttribute(uvs, TrailRenderer.UVComponentCount);\n    uvAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('uv', uvAttribute);\n\n    var indexAttribute = new THREE.BufferAttribute(indices, 1);\n    indexAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setIndex(indexAttribute);\n\n    this.geometry = geometry;\n\n}\n\nTrailRenderer.prototype.zeroVertices = function () {\n\n    var positions = this.geometry.getAttribute('position');\n\n    for (var i = 0; i < this.vertexCount; i++) {\n\n        var index = i * 3;\n\n        positions.array[index] = 0;\n        positions.array[index + 1] = 0;\n        positions.array[index + 2] = 0;\n\n    }\n\n    positions.needsUpdate = true;\n    positions.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.zeroIndices = function () {\n\n    var indices = this.geometry.getIndex();\n\n    for (var i = 0; i < this.faceCount; i++) {\n\n        var index = i * 3;\n\n        indices.array[index] = 0;\n        indices.array[index + 1] = 0;\n        indices.array[index + 2] = 0;\n\n    }\n\n    indices.needsUpdate = true;\n    indices.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.formInitialFaces = function () {\n\n    this.zeroIndices();\n\n    var indices = this.geometry.getIndex();\n\n    for (var i = 0; i < this.length - 1; i++) {\n\n        this.connectNodes(i, i + 1);\n\n    }\n\n    indices.needsUpdate = true;\n    indices.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.initializeMesh = function () {\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.dynamic = true;\n    this.mesh.matrixAutoUpdate = false;\n\n}\n\nTrailRenderer.prototype.destroyMesh = function () {\n\n    if (this.mesh) {\n\n        this.scene.remove(this.mesh);\n        this.mesh = null;\n\n    }\n\n}\n\nTrailRenderer.prototype.reset = function () {\n\n    this.currentLength = 0;\n    this.currentEnd = -1;\n\n    this.lastNodeCenter = null;\n    this.currentNodeCenter = null;\n    this.lastOrientationDir = null;\n\n    this.currentNodeID = 0;\n\n    this.formInitialFaces();\n    this.zeroVertices();\n\n    this.geometry.setDrawRange(0, 0);\n\n}\n\nTrailRenderer.prototype.updateUniforms = function () {\n\n    if (this.currentLength < this.length) {\n\n        this.material.uniforms.minID.value = 0;\n\n    } else {\n\n        this.material.uniforms.minID.value = this.currentNodeID - this.length;\n\n    }\n    this.material.uniforms.maxID.value = this.currentNodeID;\n    this.material.uniforms.trailLength.value = this.currentLength;\n    this.material.uniforms.maxTrailLength.value = this.length;\n    this.material.uniforms.verticesPerNode.value = this.VerticesPerNode;\n\n}\n\nTrailRenderer.prototype.advance = function () {\n    var tempMatrix4 = new THREE.Matrix4();\n\n    return function advance() {\n\n        this.targetObject.updateMatrixWorld();\n        tempMatrix4.copy(this.targetObject.matrixWorld);\n\n        this.advanceWithTransform(tempMatrix4);\n\n        this.updateUniforms();\n    }\n\n}();\n\nTrailRenderer.prototype.advanceWithPositionAndOrientation = function (nextPosition, orientationTangent) {\n\n    this.advanceGeometry({position: nextPosition, tangent: orientationTangent}, null);\n\n}\n\nTrailRenderer.prototype.advanceWithTransform = function (transformMatrix) {\n\n    this.advanceGeometry(null, transformMatrix);\n\n}\n\nTrailRenderer.prototype.advanceGeometry = function () {\n\n    return function advanceGeometry(positionAndOrientation, transformMatrix) {\n\n        var nextIndex = this.currentEnd + 1 >= this.length ? 0 : this.currentEnd + 1;\n\n        if (transformMatrix) {\n\n            this.updateNodePositionsFromTransformMatrix(nextIndex, transformMatrix);\n\n        } else {\n\n            this.updateNodePositionsFromOrientationTangent(nextIndex, positionAndOrientation.position, positionAndOrientation.tangent);\n        }\n\n        if (this.currentLength >= 1) {\n\n            this.connectNodes(this.currentEnd, nextIndex);\n\n            if (this.currentLength >= this.length) {\n\n                var disconnectIndex = this.currentEnd + 1 >= this.length ? 0 : this.currentEnd + 1;\n                this.disconnectNodes(disconnectIndex);\n\n            }\n\n        }\n\n        if (this.currentLength < this.length) {\n\n            this.currentLength++;\n\n        }\n\n        this.currentEnd++;\n        if (this.currentEnd >= this.length) {\n\n            this.currentEnd = 0;\n\n        }\n\n        if (this.currentLength >= 1) {\n\n            if (this.currentLength < this.length) {\n\n                this.geometry.setDrawRange(0, (this.currentLength - 1) * this.FaceIndicesPerNode);\n\n            } else {\n\n                this.geometry.setDrawRange(0, this.currentLength * this.FaceIndicesPerNode);\n\n            }\n\n        }\n\n        this.updateNodeID(this.currentEnd, this.currentNodeID);\n        this.currentNodeID++;\n    }\n\n}();\n\nTrailRenderer.prototype.updateHead = function () {\n\n    var tempMatrix4 = new THREE.Matrix4();\n\n    return function advance() {\n\n        if (this.currentEnd < 0) return;\n\n        this.targetObject.updateMatrixWorld();\n        tempMatrix4.copy(this.targetObject.matrixWorld);\n\n        this.updateNodePositionsFromTransformMatrix(this.currentEnd, tempMatrix4);\n    }\n\n}();\n\nTrailRenderer.prototype.updateNodeID = function (nodeIndex, id) {\n\n    this.nodeIDs[nodeIndex] = id;\n\n    var nodeIDs = this.geometry.getAttribute('nodeID');\n    var nodeVertexIDs = this.geometry.getAttribute('nodeVertexID');\n\n    for (var i = 0; i < this.VerticesPerNode; i++) {\n\n        var baseIndex = nodeIndex * this.VerticesPerNode + i;\n        nodeIDs.array[baseIndex] = id;\n        nodeVertexIDs.array[baseIndex] = i;\n\n    }\n\n    nodeIDs.needsUpdate = true;\n    nodeVertexIDs.needsUpdate = true;\n\n    nodeIDs.updateRange.offset = nodeIndex * this.VerticesPerNode;\n    nodeIDs.updateRange.count = this.VerticesPerNode;\n\n    nodeVertexIDs.updateRange.offset = nodeIndex * this.VerticesPerNode;\n    nodeVertexIDs.updateRange.count = this.VerticesPerNode;\n\n}\n\nTrailRenderer.prototype.updateNodeCenter = function (nodeIndex, nodeCenter) {\n\n    this.lastNodeCenter = this.currentNodeCenter;\n\n    this.currentNodeCenter = this.nodeCenters[nodeIndex];\n    this.currentNodeCenter.copy(nodeCenter);\n\n    var nodeCenters = this.geometry.getAttribute('nodeCenter');\n\n    for (var i = 0; i < this.VerticesPerNode; i++) {\n\n        var baseIndex = (nodeIndex * this.VerticesPerNode + i) * 3;\n        nodeCenters.array[baseIndex] = nodeCenter.x;\n        nodeCenters.array[baseIndex + 1] = nodeCenter.y;\n        nodeCenters.array[baseIndex + 2] = nodeCenter.z;\n\n    }\n\n    nodeCenters.needsUpdate = true;\n\n    nodeCenters.updateRange.offset = nodeIndex * this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n    nodeCenters.updateRange.count = this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n\n}\n\nTrailRenderer.prototype.updateNodePositionsFromOrientationTangent = function () {\n\n    var tempQuaternion = new THREE.Quaternion();\n    var tempOffset = new THREE.Vector3();\n    var tempLocalHeadGeometry = [];\n\n    for (var i = 0; i < TrailRenderer.MaxHeadVertices; i++) {\n\n        var vertex = new THREE.Vector3();\n        tempLocalHeadGeometry.push(vertex);\n\n    }\n\n    return function updateNodePositionsFromOrientationTangent(nodeIndex, nodeCenter, orientationTangent) {\n\n        var positions = this.geometry.getAttribute('position');\n\n        this.updateNodeCenter(nodeIndex, nodeCenter);\n\n        tempOffset.copy(nodeCenter);\n        tempOffset.sub(TrailRenderer.LocalHeadOrigin);\n        tempQuaternion.setFromUnitVectors(TrailRenderer.LocalOrientationTangent, orientationTangent);\n\n        for (var i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var vertex = tempLocalHeadGeometry[i];\n            vertex.copy(this.localHeadGeometry[i]);\n            vertex.applyQuaternion(tempQuaternion);\n            vertex.add(tempOffset);\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var positionIndex = ((this.VerticesPerNode * nodeIndex) + i) * TrailRenderer.PositionComponentCount;\n            var transformedHeadVertex = tempLocalHeadGeometry[i];\n\n            positions.array[positionIndex] = transformedHeadVertex.x;\n            positions.array[positionIndex + 1] = transformedHeadVertex.y;\n            positions.array[positionIndex + 2] = transformedHeadVertex.z;\n\n        }\n\n        positions.needsUpdate = true;\n\n    }\n\n}();\n\nTrailRenderer.prototype.updateNodePositionsFromTransformMatrix = function () {\n    var tempMatrix3 = new THREE.Matrix3();\n    var tempQuaternion = new THREE.Quaternion();\n    var tempPosition = new THREE.Vector3();\n    var tempOffset = new THREE.Vector3();\n    var worldOrientation = new THREE.Vector3();\n    var tempDirection = new THREE.Vector3();\n\n    var tempLocalHeadGeometry = [];\n    for (var i = 0; i < TrailRenderer.MaxHeadVertices; i++) {\n\n        var vertex = new THREE.Vector3();\n        tempLocalHeadGeometry.push(vertex);\n\n    }\n\n    function getMatrix3FromMatrix4(matrix3, matrix4) {\n\n        var e = matrix4.elements;\n        matrix3.set(e[0], e[1], e[2],\n            e[4], e[5], e[6],\n            e[8], e[9], e[10]);\n\n    }\n\n    return function updateNodePositionsFromTransformMatrix(nodeIndex, transformMatrix) {\n\n        var positions = this.geometry.getAttribute('position');\n\n        tempPosition.set(0, 0, 0);\n        tempPosition.applyMatrix4(transformMatrix);\n        this.updateNodeCenter(nodeIndex, tempPosition);\n\n        var vertex\n        for (var i = 0; i < this.localHeadGeometry.length; i++) {\n\n             vertex = tempLocalHeadGeometry[i];\n            vertex.copy(this.localHeadGeometry[i]);\n\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n             vertex = tempLocalHeadGeometry[i];\n            vertex.applyMatrix4(transformMatrix);\n\n        }\n\n        if (this.lastNodeCenter && this.orientToMovement) {\n\n            getMatrix3FromMatrix4(tempMatrix3, transformMatrix);\n            worldOrientation.set(0, 0, -1);\n            worldOrientation.applyMatrix3(tempMatrix3);\n\n            tempDirection.copy(this.currentNodeCenter);\n            tempDirection.sub(this.lastNodeCenter);\n            tempDirection.normalize();\n\n            if (tempDirection.lengthSq() <= .0001 && this.lastOrientationDir) {\n\n                tempDirection.copy(this.lastOrientationDir);\n            }\n\n            if (tempDirection.lengthSq() > .0001) {\n\n                if (!this.lastOrientationDir) this.lastOrientationDir = new THREE.Vector3();\n\n                tempQuaternion.setFromUnitVectors(worldOrientation, tempDirection);\n\n                tempOffset.copy(this.currentNodeCenter);\n\n                for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n                     vertex = tempLocalHeadGeometry[i];\n                    vertex.sub(tempOffset);\n                    vertex.applyQuaternion(tempQuaternion);\n                    vertex.add(tempOffset);\n\n                }\n            }\n\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var positionIndex = ((this.VerticesPerNode * nodeIndex) + i) * TrailRenderer.PositionComponentCount;\n            var transformedHeadVertex = tempLocalHeadGeometry[i];\n\n            positions.array[positionIndex] = transformedHeadVertex.x;\n            positions.array[positionIndex + 1] = transformedHeadVertex.y;\n            positions.array[positionIndex + 2] = transformedHeadVertex.z;\n\n        }\n\n        positions.needsUpdate = true;\n\n        positions.updateRange.offset = nodeIndex * this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n        positions.updateRange.count = this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n    }\n\n}();\n\nTrailRenderer.prototype.connectNodes = function () {\n\n    var returnObj = {\n\n        \"attribute\": null,\n        \"offset\": 0,\n        \"count\": -1\n\n    };\n\n    return function connectNodes(srcNodeIndex, destNodeIndex) {\n\n        var indices = this.geometry.getIndex();\n\n        for (var i = 0; i < this.localHeadGeometry.length - 1; i++) {\n\n            var srcVertexIndex = (this.VerticesPerNode * srcNodeIndex) + i;\n            var destVertexIndex = (this.VerticesPerNode * destNodeIndex) + i;\n\n            var faceIndex = ((srcNodeIndex * this.FacesPerNode) + (i * TrailRenderer.FacesPerQuad)) * TrailRenderer.IndicesPerFace;\n\n            indices.array[faceIndex] = srcVertexIndex;\n            indices.array[faceIndex + 1] = destVertexIndex;\n            indices.array[faceIndex + 2] = srcVertexIndex + 1;\n\n            indices.array[faceIndex + 3] = destVertexIndex;\n            indices.array[faceIndex + 4] = destVertexIndex + 1;\n            indices.array[faceIndex + 5] = srcVertexIndex + 1;\n\n        }\n\n        indices.needsUpdate = true;\n        indices.updateRange.count = -1;\n\n        returnObj.attribute = indices;\n        returnObj.offset = srcNodeIndex * this.FacesPerNode * TrailRenderer.IndicesPerFace;\n        returnObj.count = this.FacesPerNode * TrailRenderer.IndicesPerFace;\n\n        return returnObj;\n\n    }\n}();\n\nTrailRenderer.prototype.disconnectNodes = function () {\n\n    var returnObj = {\n\n        \"attribute\": null,\n        \"offset\": 0,\n        \"count\": -1\n\n    };\n\n    return function disconnectNodes(srcNodeIndex) {\n\n        var indices = this.geometry.getIndex();\n\n        for (var i = 0; i < this.localHeadGeometry.length - 1; i++) {\n\n            // var srcVertexIndex = (this.VerticesPerNode * srcNodeIndex) + i;\n\n            var faceIndex = ((srcNodeIndex * this.FacesPerNode) + (i * TrailRenderer.FacesPerQuad)) * TrailRenderer.IndicesPerFace;\n\n            indices.array[faceIndex] = 0;\n            indices.array[faceIndex + 1] = 0;\n            indices.array[faceIndex + 2] = 0;\n\n            indices.array[faceIndex + 3] = 0;\n            indices.array[faceIndex + 4] = 0;\n            indices.array[faceIndex + 5] = 0;\n\n        }\n\n        indices.needsUpdate = true;\n        indices.updateRange.count = -1;\n\n        returnObj.attribute = indices;\n        returnObj.offset = srcNodeIndex * this.FacesPerNode * TrailRenderer.IndicesPerFace;\n        returnObj.count = this.FacesPerNode * TrailRenderer.IndicesPerFace;\n\n        return returnObj;\n\n    }\n\n}();\n\nTrailRenderer.prototype.deactivate = function () {\n\n    if (this.isActive) {\n\n        this.scene.remove(this.mesh);\n        this.isActive = false;\n\n    }\n\n}\n\nTrailRenderer.prototype.activate = function () {\n\n    if (!this.isActive) {\n\n        this.scene.add(this.mesh);\n        this.isActive = true;\n\n    }\n\n}\n\n\n","import * as THREE from \"three\";\nimport {TrailRenderer} from \"@/visual/helpers/TrailRenderer\";\nimport {Colors} from \"@/config\";\n\nexport class TrailTesting {\n    constructor(scene) {\n        this.scene = scene\n\n        this.baseTrailMaterial = TrailRenderer.createBaseMaterial();\n\n        this.material = this.baseTrailMaterial\n        this.material.depthWrite = false\n\n        this.circlePoints = this.makeCircle()\n        this.makeTrailTarget(this.circlePoints)\n        this.makeTrail()\n        this._makeFlyState()\n    }\n\n    makeTrail() {\n        const trailLength = 300.0\n        this.trail = new TrailRenderer(this.scene, false);\n        this.trail.initialize(\n            this.material,\n            Math.floor(trailLength),\n            0.0, 0,\n            this.circlePoints,\n            this.trailTarget);\n\n        this.updateColors(\n            new THREE.Color(Colors.LightningBlue),\n            new THREE.Color(Colors.YggdrasilGreen)\n        )\n        this.trail.activate();\n    }\n\n    updateColors(headColor, trialColor) {\n        this.material.uniforms.headColor.value.copy(headColor);\n        this.material.uniforms.tailColor.value.copy(trialColor);\n    }\n\n    _makeFlyState() {\n        this.lastTrailUpdateTime = 0.0\n        this._t = 0.0\n\n        this.lastDirection = new THREE.Vector3();\n        this.lastTargetPosition = new THREE.Vector3();\n        this.lastRotationMatrix = new THREE.Matrix4();\n        this.currentTargetPosition = new THREE.Vector3();\n        this.currentDirection = new THREE.Vector3();\n\n        this.tempQuaternion = new THREE.Quaternion();\n\n        this.baseForward = new THREE.Vector3(0, 0, -1);\n        this.tempUp = new THREE.Vector3();\n\n        this.tempRotationMatrix = new THREE.Matrix4();\n        this.tempTranslationMatrix = new THREE.Matrix4();\n\n    }\n\n    update(dt) {\n        if(dt <= 0) {\n            return\n        }\n\n        this._t += dt\n\n        const areaScale = 100;\n        const trailGrowTime = 10.0 * 1000.0\n\n        if (this._t - this.lastTrailUpdateTime > trailGrowTime) {\n            this.trail.advance();\n            this.lastTrailUpdateTime = this._t;\n        } else {\n            this.trail.updateHead();\n        }\n\n        const scaledTime = this._t;\n\n        this.lastTargetPosition.copy(this.currentTargetPosition);\n\n        this.currentTargetPosition.x = Math.sin(scaledTime) * areaScale;\n        this.currentTargetPosition.y = Math.sin(scaledTime * 1.1) * areaScale;\n        this.currentTargetPosition.z = Math.sin(scaledTime * 1.6) * areaScale;\n\n        // console.log(this.currentTargetPosition)\n\n        this.lastDirection.copy(this.currentDirection);\n\n        this.currentDirection.copy(this.currentTargetPosition);\n        this.currentDirection.sub(this.lastTargetPosition);\n        this.currentDirection.normalize();\n\n        this.tempUp.crossVectors(this.currentDirection, this.baseForward);\n\n        this.tempRotationMatrix.identity();\n\n        const angle = this.baseForward.angleTo(this.currentDirection);\n        if (Math.abs(angle) > .01 && this.tempUp.lengthSq() > .001) {\n            this.tempQuaternion.setFromUnitVectors(this.baseForward, this.currentDirection);\n            this.tempQuaternion.normalize();\n            this.tempRotationMatrix.makeRotationFromQuaternion(this.tempQuaternion);\n            this.lastRotationMatrix.copy(this.tempRotationMatrix);\n        }\n\n        this.tempTranslationMatrix.identity();\n        this.tempTranslationMatrix.makeTranslation(\n            this.currentTargetPosition.x,\n            this.currentTargetPosition.y,\n            this.currentTargetPosition.z\n        );\n\n        // this.tempTranslationMatrix.multiply(this.tempRotationMatrix);\n        this.tempRotationMatrix.multiply(this.tempTranslationMatrix);\n\n        this.trailTarget.matrix.identity();\n        // this.trailTarget.applyMatrix4(this.tempTranslationMatrix);\n        this.trailTarget.applyMatrix4(this.tempRotationMatrix);\n        this.trailTarget.updateMatrixWorld();\n    }\n\n    makeCircle() {\n        let circlePoints = [];\n        const twoPI = Math.PI * 2;\n        let index = 0;\n        const scale = 10.0;\n        const inc = twoPI / 32.0;\n\n        for (let i = 0; i <= twoPI + inc; i += inc) {\n            circlePoints[index] = new THREE.Vector3(Math.cos(i) * scale, Math.sin(i) * scale, 0);\n            index++;\n        }\n        return circlePoints\n    }\n\n    makeTrailTarget(points) {\n        const starShape = new THREE.Shape(points);\n\n        const extrusionSettings = {\n            depth: 2, size: 2, height: 1, curveSegments: 3,\n            bevelThickness: 1, bevelSize: 2, bevelEnabled: false,\n            material: 0, extrudeMaterial: 1\n        };\n\n        const starGeometry = new THREE.ExtrudeGeometry(starShape, extrusionSettings);\n\n        const trailTargetMaterial = new THREE.MeshPhongMaterial({\n            color: 0xa0adaf,\n            shininess: 10,\n            specular: 0x111111,\n            flatShading: false,\n        });\n\n        const trailTarget = this.trailTarget = new THREE.Mesh(starGeometry, trailTargetMaterial);\n        trailTarget.receiveShadow = false;\n\n        this.scene.add(trailTarget);\n    }\n}","import * as THREE from \"three\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {TrailTesting} from \"@/visual/helpers/TrailTesting\";\nimport {dbgSimulateLoaded} from \"@/helpers/EventTypes\";\n\nexport class TrailTestScene {\n    constructor(scene, cameraController) {\n        this.scene = scene\n        this.cameraController = cameraController\n\n        this._makeSomeLight()\n\n        this.trailTester = new TrailTesting(this.scene)\n\n        dbgSimulateLoaded()\n    }\n\n    _makeSomeLight() {\n        // const light = new THREE.DirectionalLight('hsl(0, 100%, 100%)')\n        // light.position.set(0, 10, 1000)\n        // this.scene.add(light)\n\n        const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n        this.scene.add(ambientLight);\n    }\n\n    update(delta) {\n        this.trailTester.update(delta)\n    }\n\n    dispose() {\n        clearObject(this.scene)\n    }\n}\n","import * as THREE from \"three\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {dbgSimulateLoaded} from \"@/helpers/EventTypes\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport TWEEN from \"tween.js\";\n\nexport class NodeObjTestScene {\n    constructor(scene, camera) {\n        this.scene = scene\n        this.camera = camera\n\n        this._makeSomeLight()\n\n        dbgSimulateLoaded()\n\n        this.nodeObj = new NodeObject(new NodeInfo({\n            node_address: 'thor123',\n            status: 'Active',\n            bond: 100000000000000000,\n            version: '1.96.2',\n        }))\n\n        this.nodeObj.labelObj.visible = false\n\n        this.nodeObj.material.uniforms.rust.value = -1.0\n\n        new TWEEN.Tween(this.nodeObj.material.uniforms.rust)\n            .to({value: 1.0}, 2000)\n            .repeat(Infinity)\n            .yoyo(true)\n            .start()\n\n        this.nodeObj.o.position.set(0, 0, 1500)\n        scene.add(this.nodeObj.o)\n\n        this.camera.zoom = 100\n    }\n\n    _makeSomeLight() {\n        // const light = new THREE.DirectionalLight('hsl(0, 100%, 100%)')\n        // light.position.set(0, 10, 1000)\n        // this.scene.add(light)\n\n        const ambientLight = new THREE.AmbientLight(0xffffff); // soft white light\n        this.scene.add(ambientLight);\n    }\n\n    update(delta) {\n        this.nodeObj.update(delta * 0.1)\n    }\n\n    dispose() {\n        clearObject(this.scene)\n    }\n}\n","import { render } from \"./MainScreen.vue?vue&type=template&id=854de456\"\nimport script from \"./MainScreen.vue?vue&type=script&lang=js\"\nexport * from \"./MainScreen.vue?vue&type=script&lang=js\"\n\nimport \"./MainScreen.vue?vue&type=style&index=0&id=854de456&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4e003472\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4e003472&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue'\nimport App from './App.vue'\nimport CameraControls from \"camera-controls\";\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\n\n/* import specific icons */\nimport {faCopy, faArrowDownUpLock, faArrowRight} from '@fortawesome/free-solid-svg-icons'\n\nimport * as THREE from 'three';\nimport {emitter} from \"@/helpers/EventTypes\";\n\nimport { plugin as VueTippy } from 'vue-tippy'\nimport 'tippy.js/dist/tippy.css' // optional for styling\nimport 'tippy.js/themes/translucent.css'\nimport {isWebGL2Supported} from \"webgl-detector\";\n\nif(!isWebGL2Supported()) {\n    alert('WebGL is not supported!')\n}\n\nCameraControls.install({THREE});\n\n/* add icons to the library */\nlibrary.add(faCopy, faArrowRight, faArrowDownUpLock)\n\nconst app = createApp(App);\napp.component('font-awesome-icon', FontAwesomeIcon)\napp.use(VueTippy, {\n    directive: \"tippy\", // => v-tippy\n    component: 'tippy', // => <tippy/>\n    flipDuration: 0,\n    defaultProps: {\n        placement: 'top'\n    },\n    popperOptions: {\n        modifiers: {\n            preventOverflow: {\n                enabled: false\n            }\n        }\n    }\n})\napp.config.globalProperties.emitter = emitter;\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthorviz\"] = self[\"webpackChunkthorviz\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2026); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_MainScreen","class","_createElementBlock","_createElementVNode","ref","tabindex","onKeypress","$options","onMousemove","onMouseenter","onMouseleave","onClick","_createVNode","_component_FPSCounter","$data","_component_LoadingIndicator","key","_component_ControlPanel","onModeSelected","_KeepAlive","_component_NodeDetailsWindow","node","onClose","IsProduction","process","console","log","Live","Config","DataSource","NodesURL","Nodes","PollPeriod","LastBlock","ReactRandomDelay","NodeJuggler","Enabled","Font","Main","Effects","Bloom","Strength","Threshold","Radius","Controls","Camera","Distance","Min","Max","Start","AzimuthAngleLimit","PolarAngleLimit","MouseMoveStrength","Animation","Duration","DistanceWhenZoomed","Shift","X","Scene","DebugMode","InitialMode","Background","Sky","SkyBox","SkyBoxExt","NodeObject","Simple","PlaneScale","MinRadius","MaxScale","MinScale","ScaleFactor","RadiusFactor","ReactStatus","DurationIn","DurationOut","BloatScale","ReactSlash","Force","RedDuration","Rust","MaxLagToFullRust","MaxStrength","Globe","Details","NodeElevation","TextureMap","Clouds","ElevationScale","Opacity","Texture","Atmosphere","InnerAtmosphere","Physics","BaseForce","RepelForce","Startup","SimulationSteps","DeltaTime","BaseFriction","MaxSpeedSq","Math","pow","Attractor","Flat","DeltaZ","Debug","ShowFPS","Renderer","LogZBuffer","Colors","LightningBlue","YggdrasilGreen","MidgardTurqoise","NightBlack","_toDisplayString","Number","toFixed","countObjects","parent","numOfMeshes","traverse","clearObject","obj","remove","apply","children","longLatTo3D","long","lat","r","phi","PI","theta","spherical","THREE","setFromSpherical","distanceXY","v1","v2","dx","x","dy","y","sqrt","EventTypes","FullyLoaded","DataSourceTick","Activity","emitter","mitt","dbgEmmitAfter","name","after_ms","setTimeout","emit","dbgSimulateLoaded","props","updatePeriod","type","default","data","fps","objCount","activityIndicator","lastUpdateTime","methods","pokeActivity","this","update","delta","scene","Date","now","unmounted","off","mounted","on","__exports__","defaultValue","undefined","dec2hex","dec","toString","padStart","Random","max","floor","random","min","array","index","getRandomInt","length","splice","xMin","xMax","yMin","yMax","zMin","zMax","Vector3","getRandomFloat","cx","cy","phase","cos","sin","ceil","len","arr","Uint8Array","window","crypto","getRandomValues","Array","from","join","Section","constructor","p1","p2","whichSide","A","B","C","D","sign","center","nearestPoint","dot","len_sq","param","pDistance","xo","yo","nearestPoint1","Util","group","sumX","_","item","sumY","p3","pt","threePts","v3","d1","_signHelper","d2","d3","hasNeg","hasPos","shortNumber","mantissa","postFix","numbro","format","average","RUNE","shortRune","smoothStep","value","PhysicalObject","mass","force","velocity","friction","attractors","dt","forEach","attr","applyForce","acceleration","multiplyScalar","copy","clone","add","clamp","lengthSq","setLength","realObject","position","nullifyForce","set","radius","applyForceTo","direction","repel","physObj","forceMult","thisPos","otherPos","d","distanceTo","minDistance","lineDir","sub","normalize","negate","boundingBox","minX","minY","maxX","maxY","shootOut","o","createBillboardMaterial","baseMaterial","opts","createDerivedMaterial","Object","assign","vertexMainOutro","EVENT_TYPE","freeze","CREATE","DESTROY","SLASH","IP_ADDRESS","STATUS","VERSION","FORCED_LEAVE","REQUESTED_LEAVE","AWARD","BOND_CHANGE","OBSERVE_CHAIN","ACTIVE_BLOCK_HEIGHT","NodeEvent","prevNode","currValue","prevValue","nodeSet","isTramp","address","addr","SEC_PER_BLOCK","THOR_DECIMAL","THOR_DECIMAL_INV","thorToFloat","parseFloat","NodeInfo","status","jail","bond_providers","preflight_status","node_address","bond","activeBlockHeight","active_block_height","bondAddress","bond_address","statusSince","status_since","requestedToLeave","requested_to_leave","forcedToLeave","forced_to_leave","leaveHeight","leave_height","IPAddress","ip_address","version","slashPoints","slash_points","releaseHeight","release_height","reason","currentAward","current_award","observeChains","chain","height","preflightStatus","code","bondProviders","fee","providers","push","shortAddress","substring","IPInfo","flag","isActive","NodeStatus","Active","isStandby","Standby","Ready","Whitelisted","Disabled","Unknown","noCfg","geomSize","geometry","simpleGeometry","SlashColor","NormalLabelZ","CirclePackFactor","super","normalizedBond","_makeSphere","_makeLabel","_reactingToSlash","_elevated","elevated","v","Boolean","material","uniforms","saturation","uniformsNeedUpdate","_getSphereColor","color","st","getRandomSample","mesh","_makeSimpleSphere","_makeCoolSphere","renderOrder","scale","calculateScale","setScalar","z","randFloat","_makeMaterial","initRust","vertexShader","StdVertexShader","fragmentShader","FragShader1","transparent","depthTest","depthWrite","nameTextObj","Text","text","slice","font","fontWeight","fontSize","anchorX","anchorY","outlineWidth","sync","MeshBasicMaterial","labelObj","dispose","nodeObjList","sum_r2","nodeObj","time","updateFromCamera","camera","dir","react","event","reactChain","reactSlash","reactStatusChange","reactVersion","_updateRust","chainReactionVelocity","pos","perp","cross","_animateTransitionShininess","slashForce","_animateScale","savedColor","newStatus","rust","_getRust","rustCfg","getChainHeightLagAllSeconds","maxRustLag","a","targetScaleOfNormal","durationIn","durationOut","easing","TWEEN","normalScale","targetScale","to","start","transitionShininess","onComplete","Simulation","_objects","repelForce","rBush","RBush","repelEnabled","getByName","addObject","existing","warn","removeObject","error","_repelForceCalculation","vicinity","search","rBushLeaf","_updateObject","isNaN","load","doNSteps","n","step","physicalObjects","objectPositions","allNames","clear","size","entries","TitleLabel3D","rotAngle","billboard","t","label","fillOpacity","textAlign","rotateX","animDuration","animDistance","easeType","c","opacity","animateIn","animateOut","kill","expandedDuration","ModeBase","active","isFlat","_labelsHash","handleObject","reactEvent","nodes","makeLabel","rotation","bb","moveIfExists","generateId","findLabelByKey","titleLabel","onEnter","_triggerOnEnter","b","onLeave","_triggerOnLeave","clearLabels","killLabelByKey","constCoeff","linearCoeff","quadraticCoeff","relaxRadius","applyForceToDistance","distance","toPosition","fromPosition","f","getForce","magnitude","objPosition","infiniteRadius","INFINITE","AttractorFlat","squishZ","phyObj","zDist","fZ","abs","AttractorShape","triangles","centerOf","allSectors","sectors","triangle","p","relaxed","tri","pointInTriangle","nearestSector","sector","THORChainLogoShape","transformed","original","pts","ModeNormal","_circleRadius","tcAttractor","ANY_STATUS","ModeStatus","_sideDistance","_standbyAttractors","bestAttractors","statusesCounted","standbyCount","activeCount","otherCount","VirtualObject","attractor","_radius","fric","CirclePack","boundRadius","iterSteps","simulation","metaAttractor","addCircle","arrangeAroundCenter","deltaAngle","angle","pack","steps","getResults","results","IPAddressInfo","j","ipAddress","countryCode","country","city","latitude","longitude","providerName","getFlagEmoji","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","UNKNOWN","IPAddressInfoLoader","expireMinutes","_key","url","ip","ips","axios","info","loadFromCache","lscache","saveToCache","ipAddresses","requestList","addressChunks","ipListChunk","chunkInfoDic","loadFromService","replace","component","ModeProvider","_attractorBanish","circlePacker","_transferAttractorsPositionFromPacker","groupName","refineProviderName","objList","_createProviderAttractors","mostPopularProvider","mostPopularCount","nativeName","provider","list","sortedEntries","pair","items","_makeAttractor","_makeLabels","circleRadius","estimateRadiusOfGroup","_makeLabelForGroup","countNodes","mostPopularName","packedPositions","isGarbage","Version","components","parseInt","isInvalid","greater","less","equal","inc","xLimit","yLimit","asInt","rawVersions","fromString","versions","loadVersions","nodeObjects","path","activePath","activeNodes","no","activeVersions","getVersionSet","maxActiveVersion","maximumVersion","minActiveVersion","minimumVersion","otherActiveVersions","otherActiveVersionsStr","nodeObject","versionStr","target","comment","isLatest","objects","mostPopular","maxVersion","ModeVersion","_attractorsByKey","_attractorsByVersion","_previousKeys","_versionDist","_packAttractorPositions","getSemanticVersionsDistribution","gap","radAttr","nGroups","radSum","versionDesc","e","affectedKeys","desc","tag","keysToRemove","ModeBond","nameToAttractor","_noBondAttractor","_positionateOnSpiral","xScale","deltaRadius","deltaDeltaRadius","deltaDeltaAngle","i","_addAttractor","_positionateOnGrid","columns","rows","gapSize","width","halfWidth","halfHeight","col","row","ModeGeo","_banishAttractor","_nameToAttractor","_coordToAttractor","_createAttractorsStacked","_makeGlobe","_putInGlobe","_destroyGlobe","globeMesh","textureLoader","globeConfig","AtmosphereFragmentShader","globeTexture","materialClouds","side","blending","cloudMesh","cloudMesh2","g","_createAttractors","attractorHere","position3d","_coordToStack","stackObj","stack","basicRadius","sortedStack","NodeGroupModes","Normal","Status","Provider","Bond","Geo","NodeGroup","holder","_currentIdent","_modeNormal","_modeStatus","_modeProvider","_modeVersion","_modeBond","_modeGeo","_selector","_selectedModeHandler","mode","genIdent","_placeNodeObject","randomOnCircle","createNewNode","ident","destroyNode","nodeAddress","newMode","_mode","delay","otherObj","setElevatedNode","isCurrentModeFlat","NodeTracker","prevNodeSet","currNodeSet","prev","curr","extractEvents","events","addEvent","k","addedNodeAddresses","nameSet","byAddress","removeNodeAddresses","EVENT_TYPES","keyTypeTable","commonNodes","currNode","keys","keysChanged","eventType","DebugNodeJuggler","period","tick","enabled","juggleStatus","juggleVersion","memorizeVersions","handleNodes","_juggleNodes","_juggleNodesStatus","_juggleNodesVersion","nodesIn","getRandomIntRange","nodesOut","filteredByStatus","sampleRandomly","setStatusAll","_nextVersion","vString","nUpgrade","that","oldVersion","TYPICAL_BLOCK_TIME","ETH","BTC","BCH","LTC","BNB","THOR","DOGE","TERRA","GAIA","AVAX","NodeSet","calculate","total","_nodesWithNames","totalBond","maxSlashNode","trampCount","maxAgeNode","ranks","_makeRanking","slash","age","award","topHeights","calculateTopBlockHeight","topVersion","calculateTopVersion","criteria","order","sortedArr","names","fromEntries","findByAddress","sortedNodes","attribute","asc","sortedByBond","sortedByAge","bondPercentOfTotal","_calculateTopBlockOneChain","nMin","heights","heightSorted","h","sort","reverse","occurrences","allChains","Set","counters","currentVersion","estimateTimestampAtBlock","topThorHeight","blockDiff","getChainHeightLagBlocks","getChainHeightLagSeconds","mult","sum","lag","avg","URLDataSource","baseUrl","_isRunning","_timer","callback","ipAddressLoader","run","_tick","then","setInterval","stop","clearInterval","isRunning","rawData","headers","result","dataProcess","NodeDataSource","json","ipInfoDic","loadBunch","LastBlockDataSource","chainHeights","chainItem","DataStorage","lastBlock","lastNodes","MainScene","prevNodes","nodeGroup","_firstTime","_runDataSource","_fullyLoaded","_nodeJuggler","nodeDataSource","handleData","bind","lastBlockSource","tracker","findNodeByAddress","pick","defaultQuad","defaultVertexShader","defaultFragmentShader","ScreenQuad","top","left","texture","uTexture","uSize","frustumCulled","_pixels","_componentSetters","setWidth","setHeight","setTop","setLeft","_components","screenSize","setSize","setOffset","setScreenSize","pi","call","w","BackgroundBase","install","quad","BgShader","_Fragment","_renderList","_hoisted_2","emits","selectedMode","activeOnly","computed","modes","isButtonSelectedClass","modeName","setSceneMode","$emit","content","_hoisted_31","_Transition","$props","onKeyup","_hoisted_1","_component_font_awesome_icon","icon","_hoisted_4","_hoisted_6","_hoisted_10","_hoisted_12","_hoisted_16","_hoisted_19","_hoisted_21","href","_hoisted_23","_hoisted_25","_hoisted_28","_hoisted_32","_hoisted_34","_hoisted_36","_hoisted_38","_hoisted_41","_hoisted_44","title","_hoisted_50","_hoisted_51","_hoisted_52","STATUS_PROPS","emoji","chainEntries","hasIP","statusEmoji","nodeStatusClass","timestamp","toISOString","isOldest","ageRank","round","nodeBond","nodeBondRank","nodeBondPercent","ipAddressInfoLink","slashPointsRank","chainLag","isUpToDataVersion","copyNodeAddress","close","$refs","modal","focus","CameraController","domElement","_createCamera","_createCameraControl","_animating","controlsEnabled","reset","controls","projectToScreen","worldVector","updateProjectionMatrix","project","innerWidth","innerHeight","CameraControls","cfg","dragToOffset","maxDistance","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","cameraInspectsObject","onResize","canvas","clientWidth","clientHeight","aspect","_getEndQuaternion","lookAtThis","currPos","currQ","quaternion","lookAt","endQuaternion","cameraLookAtNode","flat","oldCameraPos","oldCameraQuaternion","targetLookAt","deltaVector","restoreCamera","animTime","onUpdate","dots","timer","beforeUnmount","TrailRenderer","orientToMovement","nodeCenters","lastNodeCenter","currentNodeCenter","lastOrientationDir","nodeIDs","currentLength","currentEnd","currentNodeID","MaxHeadVertices","LocalOrientationTangent","LocalOrientationDirection","LocalHeadOrigin","PositionComponentCount","UVComponentCount","IndicesPerFace","FacesPerQuad","Shader","BaseVertexVars","TexturedVertexVars","BaseFragmentVars","TexturedFragmentVars","VertexShaderCore","BaseVertexShader","BaseFragmentShader","TexturedVertexShader","TexturedFragmentShader","createMaterial","customUniforms","trailLength","verticesPerNode","minID","maxID","dragTexture","maxTrailLength","textureTileFactor","headColor","tailColor","alphaTest","blendSrc","blendDst","blendEquation","createBaseMaterial","createTexturedMaterial","prototype","initialize","localHeadWidth","localHeadGeometry","targetObject","deactivate","destroyMesh","initializeLocalHeadGeometry","initializeGeometry","initializeMesh","VerticesPerNode","vertex","vertexCopy","FacesPerNode","FaceIndicesPerNode","vertexCount","faceCount","Float32Array","nodeVertexIDs","positions","uvs","indices","Uint32Array","nodeIDAttribute","setUsage","setAttribute","nodeVertexIDAttribute","nodeCenterAttribute","positionAttribute","uvAttribute","indexAttribute","setIndex","zeroVertices","getAttribute","needsUpdate","updateRange","count","zeroIndices","getIndex","formInitialFaces","connectNodes","dynamic","matrixAutoUpdate","setDrawRange","updateUniforms","advance","tempMatrix4","updateMatrixWorld","matrixWorld","advanceWithTransform","advanceWithPositionAndOrientation","nextPosition","orientationTangent","advanceGeometry","tangent","transformMatrix","positionAndOrientation","nextIndex","updateNodePositionsFromTransformMatrix","updateNodePositionsFromOrientationTangent","disconnectIndex","disconnectNodes","updateNodeID","updateHead","nodeIndex","id","baseIndex","offset","updateNodeCenter","nodeCenter","tempQuaternion","tempOffset","tempLocalHeadGeometry","setFromUnitVectors","applyQuaternion","positionIndex","transformedHeadVertex","tempMatrix3","tempPosition","worldOrientation","tempDirection","getMatrix3FromMatrix4","matrix3","matrix4","elements","applyMatrix4","applyMatrix3","returnObj","srcNodeIndex","destNodeIndex","srcVertexIndex","destVertexIndex","faceIndex","activate","TrailTesting","baseTrailMaterial","circlePoints","makeCircle","makeTrailTarget","makeTrail","_makeFlyState","trail","trailTarget","updateColors","trialColor","lastTrailUpdateTime","_t","lastDirection","lastTargetPosition","lastRotationMatrix","currentTargetPosition","currentDirection","baseForward","tempUp","tempRotationMatrix","tempTranslationMatrix","areaScale","trailGrowTime","scaledTime","crossVectors","identity","angleTo","makeRotationFromQuaternion","makeTranslation","multiply","matrix","twoPI","points","starShape","extrusionSettings","depth","curveSegments","bevelThickness","bevelSize","bevelEnabled","extrudeMaterial","starGeometry","trailTargetMaterial","shininess","specular","flatShading","receiveShadow","TrailTestScene","cameraController","_makeSomeLight","trailTester","ambientLight","NodeObjTestScene","visible","repeat","Infinity","yoyo","zoom","LoadingIndicator","NodeDetailsWindow","ControlPanel","FPSCounter","isLoading","showFps","mouseEnterX","mouseEnterY","tickCounter","sceneMode","fullyLoaded","nodeDetailsVisible","nodeDetailsIsLeft","nodeToViewDetails","zoomedToNode","shallowRef","onKeyDown","choseWindowSide","mouseEvent","clientX","onMouseMove","clientY","rotate","pickIntersection","_pickObject","pickedName","object","onMouseEnter","onMouseLeave","thoughtful","raycaster","pickPosition","getCanvasRelativePosition","setFromCamera","intersectedObjects","intersectObjects","namedObjects","pickedObject","startsWith","_onPickNodeObject","rect","getBoundingClientRect","resizeRendererToDisplaySize","renderer","needResize","composer","_width","_height","bloomPass","bg","render","clock","getDelta","document","visibilityState","requestAnimationFrame","makeSkybox","makeRenderer","antialias","logarithmicDepthBuffer","devicePixelRatio","setPixelRatio","renderScene","RenderPass","EffectComposer","addPass","bloomCfg","UnrealBloomPass","buildScene","onFullyLoaded","onDataArrived","onCloseDetails","MainScreen","created","preloading","preloadFont","characters","isWebGL2Supported","alert","library","faCopy","faArrowRight","faArrowDownUpLock","app","createApp","App","FontAwesomeIcon","use","VueTippy","directive","flipDuration","defaultProps","placement","popperOptions","modifiers","preventOverflow","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","getter","__esModule","definition","defineProperty","enumerable","get","globalThis","Function","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}