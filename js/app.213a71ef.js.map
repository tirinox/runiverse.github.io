{"version":3,"file":"js/app.213a71ef.js","mappings":"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","sources":["webpack://thorviz/./src/App.vue","webpack://thorviz/./src/components/MainScreen.vue","webpack://thorviz/./src/config.js","webpack://thorviz/./src/components/parts/FPSCounter.vue","webpack://thorviz/./src/helpers/3D.js","webpack://thorviz/./src/helpers/EventTypes.js","webpack://thorviz/./src/components/parts/FPSCounter.vue?9287","webpack://thorviz/./src/helpers/MathUtil.js","webpack://thorviz/./src/helpers/physics/PhysicalObject.js","webpack://thorviz/./src/visual/shader/billboard.vert","webpack://thorviz/./src/visual/shader/node_obj_2.frag","webpack://thorviz/./src/helpers/NodeEvent.js","webpack://thorviz/./src/helpers/data/Version.js","webpack://thorviz/./src/helpers/data/NodeTracker.js","webpack://thorviz/./src/helpers/TextBillboard.js","webpack://thorviz/./src/visual/NodeObject.js","webpack://thorviz/./src/helpers/physics/Simulation.js","webpack://thorviz/./src/visual/TitleLabel3D.js","webpack://thorviz/./src/visual/modes/ModeBase.js","webpack://thorviz/./src/helpers/physics/Attractor.js","webpack://thorviz/./src/helpers/physics/AttractorShape.js","webpack://thorviz/./src/helpers/physics/TCLogoShape.js","webpack://thorviz/./src/visual/modes/ModeNormal.js","webpack://thorviz/./src/visual/modes/ModeStatus.js","webpack://thorviz/./src/helpers/physics/CirclePack.js","webpack://thorviz/./src/helpers/data/IPAddressInfo.js","webpack://thorviz/./src/visual/modes/ModeProvider.js","webpack://thorviz/./src/visual/modes/ModeVersion.js","webpack://thorviz/./src/visual/modes/ModeBond.js","webpack://thorviz/./src/visual/shader/globe_atmo_textured.frag","webpack://thorviz/./src/visual/shader/standard.vert","webpack://thorviz/./src/visual/modes/ModeGeo.js","webpack://thorviz/./src/visual/NodeGroup.js","webpack://thorviz/./src/helpers/THORUtil.js","webpack://thorviz/./src/helpers/data/NodeSet.js","webpack://thorviz/./src/helpers/data/NodeInfo.js","webpack://thorviz/./src/helpers/data/URLDataSource.js","webpack://thorviz/./src/helpers/data/Storage.js","webpack://thorviz/./src/visual/MainScene.js","webpack://thorviz/./src/visual/shader/bg_smoke.frag","webpack://thorviz/./src/visual/helpers/ScreenQuad.js","webpack://thorviz/./src/visual/helpers/Background.js","webpack://thorviz/./src/components/parts/ControlPanel.vue","webpack://thorviz/./src/components/parts/ControlPanel.vue?8974","webpack://thorviz/./src/components/NodeDetailsWindow.vue","webpack://thorviz/./src/components/NodeDetailsWindow.vue?1c42","webpack://thorviz/./src/visual/CameraController.js","webpack://thorviz/./src/components/parts/LoadingIndicator.vue","webpack://thorviz/./src/components/parts/LoadingIndicator.vue?a62b","webpack://thorviz/./src/components/MainScreen.vue?8f35","webpack://thorviz/./src/App.vue?7ccd","webpack://thorviz/./src/main.js","webpack://thorviz/webpack/bootstrap","webpack://thorviz/webpack/runtime/chunk loaded","webpack://thorviz/webpack/runtime/compat get default export","webpack://thorviz/webpack/runtime/define property getters","webpack://thorviz/webpack/runtime/global","webpack://thorviz/webpack/runtime/hasOwnProperty shorthand","webpack://thorviz/webpack/runtime/make namespace object","webpack://thorviz/webpack/runtime/node module decorator","webpack://thorviz/webpack/runtime/jsonp chunk loading","webpack://thorviz/webpack/startup"],"sourcesContent":["<template>\n    <MainScreen></MainScreen>\n</template>\n\n<script>\nimport MainScreen from \"@/components/MainScreen\";\nimport {preloadFont} from \"troika-three-text\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'App',\n    components: {\n        MainScreen,\n    },\n    data() {\n        return {}\n    },\n    computed: {},\n    created() {\n        document.title = 'THORViz'\n        this.preloading()\n    },\n    methods: {\n        preloading() {\n            preloadFont(\n                {\n                    font: Config.Font.Main,\n                    characters: 'abcdefghijklmnopqrstuvwxyz1234567890'\n                },\n                () => {\n                    console.log('font loading done')\n                }\n            )\n        }\n    }\n}\n</script>\n\n<style>\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: normal;\n    src: local('Norse'), url('../public/fonts/Norse-KaWl.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: bold;\n    src: local('Norse-Bold'), url('../public/fonts/NorseBold-2Kge.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'EXO2';\n    src: url('../public/fonts/Exo2-VariableFont_wght.ttf') format('truetype');\n}\n\n@supports(padding:max(0px)) {\n    body, header, footer {\n        padding-left: min(0vmin, env(safe-area-inset-left));\n        padding-right: min(0vmin, env(safe-area-inset-right));\n    }\n}\n\nhtml, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: 'EXO2', monospace;\n    background: black;\n    color: turquoise;\n}\n\na {\n    color: turquoise;\n}\n\na:visited {\n    text-decoration: none;\n}\n\n</style>\n","<template>\n    <div class=\"container\">\n        <!-- 3D -->\n        <div class=\"canvas-container\">\n            <canvas\n                ref=\"canvas\"\n                class=\"canvas-full\"\n                tabindex=\"1\"\n                @keypress.prevent=\"onKeyDown\"\n                @mousemove=\"onMouseMove\"\n                @mouseenter=\"onMouseEnter\"\n                @mouseleave=\"onMouseLeave\"\n                @click.prevent=\"onClick\"\n            >\n            </canvas>\n            <FPSCounter\n                v-show=\"showFps\"\n                ref=\"fps\"\n            >\n            </FPSCounter>\n\n            <LoadingIndicator v-if=\"isLoading\"></LoadingIndicator>\n\n            <ControlPanel @mode-selected=\"setSceneMode\" v-if=\"fullyLoaded\"></ControlPanel>\n        </div>\n\n        <!-- UI -->\n        <div class=\"ui-container\">\n            <keep-alive>\n                <NodeDetailsWindow\n                    v-if=\"nodeDetailsVisible\"\n                    :node=\"nodeToViewDetails\"\n                    :node-set=\"nodeSet\"\n                    @close=\"onCloseDetails\">\n                </NodeDetailsWindow>\n            </keep-alive>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\nimport \"@/css/common.css\"\nimport * as THREE from \"three\"\nimport {Config} from \"@/config\";\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport {UnrealBloomPass} from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport FPSCounter from \"@/components/parts/FPSCounter\";\nimport {MainScene} from \"@/visual/MainScene\";\nimport TWEEN from \"tween\";\nimport {Background} from \"@/visual/helpers/Background\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport ControlPanel from \"@/components/parts/ControlPanel\";\nimport NodeDetailsWindow from \"@/components/NodeDetailsWindow\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport {CameraController} from \"@/visual/CameraController\";\nimport LoadingIndicator from \"@/components/parts/LoadingIndicator\";\nimport _ from \"lodash\";\nimport {shallowRef} from \"vue\";\n// import {TrailTestScene} from \"@/visual/TrailTestScene\";\n\nexport default {\n    name: 'MainScreen',\n    components: {LoadingIndicator, NodeDetailsWindow, ControlPanel, FPSCounter},\n    props: {},\n\n    data() {\n        return {\n            isLoading: true,\n\n            showFps: Config.Debug.ShowFPS,\n\n            mouseEnterX: 0,\n            mouseEnterY: 0,\n\n            tickCounter: 0,\n\n            sceneMode: 'normal',\n\n            fullyLoaded: false,\n\n            nodeDetailsVisible: false,\n            nodeToViewDetails: new NodeInfo(),\n            zoomedToNode: false,\n\n            nodeSet: shallowRef(),\n        }\n    },\n\n    methods: {\n        onKeyDown(event) {\n            if (event.code === 'KeyR') {\n                this.cameraController.reset()\n            } else if (event.code === 'KeyF') {\n                this.showFps = !this.showFps\n            } else if (event.code === 'KeyH') {\n                console.log('help?')\n            }\n            // event.target.blur();\n        },\n\n        onMouseMove(event) {\n            const x = event.clientX\n            const y = event.clientY\n            if (!this.mouseEnterX) {\n                this.mouseEnterX = x\n                this.mouseEnterY = y\n                return\n            }\n            const scale = Config.Controls.Camera.MouseMoveStrength\n            const dx = this.mouseEnterX - x\n            const dy = this.mouseEnterY - y\n            this.mouseEnterX = x\n            this.mouseEnterY = y\n            this.cameraController.controls.rotate(dx * scale, dy * scale)\n\n            const pickedName = this._pickObject(event)?.name\n            this.content.nodeGroup.setElevatedNode(pickedName)\n\n            if (!this.zoomedToNode) {\n                this.nodeDetailsVisible = !!pickedName\n                if (this.nodeDetailsVisible) {\n                    this.nodeToViewDetails = this.content.findNodeByAddress(pickedName)\n                }\n            }\n        },\n\n        onMouseEnter(event) {\n            this.mouseEnterX = event.clientX\n            this.mouseEnterY = event.clientY\n        },\n\n        onMouseLeave() {\n        },\n\n        _pickObject(event, thoughtful = false) {\n            if (!this.raycaster) {\n                return null\n            }\n\n            const pickPosition = this.getCanvasRelativePosition(event)\n\n            // cast a ray through the frustum\n            this.raycaster.setFromCamera(pickPosition, this.cameraController.camera);\n            // get the list of objects the ray intersected\n            const intersectedObjects = this.raycaster.intersectObjects(this.content.nodeGroup.holder.children, true);\n            if (thoughtful) {\n                console.log('Objects hit by the ray caster: ' + intersectedObjects.length)\n            }\n\n            const namedObjects = _.filter(_.map(intersectedObjects, 'object'), o => o.name && o.name !== '')\n            return namedObjects.length ? namedObjects[0] : null\n        },\n\n        onClick(event) {\n            console.log(event)\n            // fixme: cannot pick when globe is rotated geo mode\n            const pickedObject = this._pickObject(event, true)\n            console.log(pickedObject)\n            if (pickedObject) {\n                const nodeAddress = pickedObject.name\n                if (nodeAddress && nodeAddress.startsWith('thor')) {\n                    this._onPickNodeObject(nodeAddress)\n                }\n            } else {\n                this.nodeDetailsVisible = false\n                this.cameraController.restoreCamera()\n            }\n        },\n\n        _onPickNodeObject(nodeAddress) {\n            console.log('Picked node:', nodeAddress)\n            this.content.pick(nodeAddress)\n\n            this.nodeToViewDetails = this.content.findNodeByAddress(nodeAddress)\n            this.nodeDetailsVisible = true\n\n            const nodeObj = this.content.nodeGroup.getByName(nodeAddress)\n            if (nodeObj) {\n                this.zoomedToNode = true\n                this.cameraController.cameraLookAtNode(nodeObj, this.content.nodeGroup.isCurrentModeFlat)\n            }\n        },\n\n        getCanvasRelativePosition(event) {\n            const rect = this.canvas.getBoundingClientRect()\n            const pos = {\n                x: event.clientX - rect.left,\n                y: event.clientY - rect.top,\n            }\n            return {\n                x: (pos.x / this.canvas.clientWidth) * 2 - 1,\n                y: -(pos.y / this.canvas.clientHeight) * 2 + 1\n            }\n        },\n\n        resizeRendererToDisplaySize() {\n            const renderer = this.renderer\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n\n            const needResize = this.composer._width !== width || this.composer._height !== height;\n            if (needResize) {\n                renderer.setSize(width, height, false);\n                if (this.bloomPass) {\n                    this.bloomPass.setSize(width, height);\n                }\n                this.composer.setSize(width, height);\n                if (this.bg) {\n                    this.bg.setSize(width, height)\n                }\n\n                this.cameraController.onResize()\n            }\n\n            return needResize;\n        },\n\n        render() {\n            // try {\n            let delta = this.clock.getDelta();\n\n            if (document.visibilityState === 'hidden') {\n                return\n            } else if (delta > 0.4) {\n                delta = 0.01\n            }\n\n            this.resizeRendererToDisplaySize(this.renderer)\n            TWEEN.update()\n            this.$refs.fps.update(delta, this.scene)\n            this.cameraController.update(delta)\n            this.content.update(delta)\n            if (this.bg) {\n                this.bg.update(delta)\n            }\n            this.composer.render(delta)\n            // } catch (e) {\n            //     console.error('Render error! ' + e)\n            // }\n\n            requestAnimationFrame(this.render);\n        },\n\n        makeSkybox() {\n            if (Config.Scene.Background.Enabled) {\n                // this.bg = new Background(this.scene)\n                // this.bg = new BlackgroundStaticBox(this.scene, Config.Scene.Sky.SkyBox, Config.Scene.Sky.SkyBoxExt)\n                this.bg = new Background(this.scene)\n                this.bg.install()\n            }\n        },\n\n        makeRenderer(canvas) {\n            let renderer = this.renderer = new THREE.WebGLRenderer({\n                canvas,\n                antialias: false,\n                logarithmicDepthBuffer: Config.Renderer.LogZBuffer,\n            });\n\n            if (devicePixelRatio) {\n                console.log(`Renderer: Setting devicePixelRatio = ${devicePixelRatio}.`)\n                renderer.setPixelRatio(devicePixelRatio)\n            }\n\n            const renderScene = new RenderPass(this.scene, this.cameraController.camera);\n\n            this.composer = new EffectComposer(renderer);\n            this.composer.addPass(renderScene);\n\n            const bloomCfg = Config.Effects.Bloom\n            if (bloomCfg.Enabled) {\n                this.bloomPass = new UnrealBloomPass(\n                    new THREE.Vector2(window.innerWidth, window.innerHeight),\n                    bloomCfg.Strength,\n                    bloomCfg.Radius,\n                    bloomCfg.Threshold)\n                this.composer.addPass(this.bloomPass);\n            }\n        },\n\n        buildScene() {\n            this.scene.add(this.cameraController.camera)\n            this.makeSkybox()\n\n            this.content = new MainScene(this.scene, this)\n            // this.content = new TrailTestScene(this.scene, this)\n        },\n\n        setSceneMode(mode) {\n            this.sceneMode = mode\n            if (this.content.nodeGroup) {\n                this.content.nodeGroup.mode = mode\n            }\n        },\n\n        onFullyLoaded() {\n            console.log('fully loaded! removing loading screen...')\n            this.isLoading = false\n            this.fullyLoaded = true\n        },\n\n        onDataArrived(nodeSet) {\n            this.nodeSet = nodeSet\n        },\n\n        onCloseDetails() {\n            this.zoomedToNode = false\n            this.nodeDetailsVisible = false\n            this.nodeToViewDetails = new NodeInfo()\n            this.cameraController.restoreCamera()\n        },\n    },\n\n    mounted() {\n        this.canvas = this.$refs.canvas\n\n        this.clock = new THREE.Clock()\n        this.scene = new THREE.Scene()\n\n        this.cameraController = new CameraController(this.canvas)\n        this.makeRenderer(this.canvas)\n        this.resizeRendererToDisplaySize()\n        this.buildScene()\n\n        this.raycaster = new THREE.Raycaster()\n        emitter.on(EventTypes.FullyLoaded, this.onFullyLoaded)\n        emitter.on(EventTypes.DataSourceTick, this.onDataArrived)\n\n        requestAnimationFrame(this.render);\n    },\n\n    unmounted() {\n        this.content.dispose()\n        this.cameraController.dispose()\n        emitter.off(EventTypes.FullyLoaded)\n        emitter.off(EventTypes.DataSourceTick)\n    }\n}\n\n</script>\n\n<style>\n\n.container {\n    position: relative;\n}\n\n.canvas-container {\n    position: absolute;\n    z-index: 8;\n}\n\n.ui-container {\n    position: absolute;\n    z-index: 10;\n}\n\n.canvas-full {\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n}\n\ncanvas {\n}\n\n*:focus {\n    outline: none;\n}\n\n</style>\n","// const Live = process.env.NODE_ENV !== 'development'\n// const Live = false // process.env.USE_LOCAL_DATA !== \"1\"\nconst Live = true\n\n\nexport const Config = {\n    DataSource: {\n        NodesURL: (Live ?\n            'https://thornode.ninerealms.com' :\n            'http://localhost:8080/data/samplenodes.json'),\n\n        Nodes: {\n            PollPeriod: 3000.0, // msec\n        },\n\n        LastBlock: {\n            PollPeriod: 10000.0, // msec\n        },\n\n        ReactRandomDelay: 500.0, // msec\n        NodeJuggler: {\n            Enabled: false\n        }\n    },\n    Font: {\n        // Main: 'fonts/NorseBold-2Kge.otf'\n        Main: 'fonts/Exo2-VariableFont_wght.ttf'\n    },\n    Effects: {\n        Bloom: {\n            Enabled: true,\n            Strength: 0.9,\n            Threshold: 0.5,\n            Radius: 1.2,\n        }\n    },\n    Controls: {\n        Camera: {\n            Distance: {\n                Min: 800,\n                Max: 2900,\n                Start: 2000,\n            },\n            AzimuthAngleLimit: 180,\n            PolarAngleLimit: 180,\n            MouseMoveStrength: 0.0002,\n\n            Animation: {\n                Duration: 500.0,\n                DistanceWhenZoomed: 300.0,\n                Shift: {\n                    X: -200.0\n                }\n            }\n        },\n    },\n    Scene: {\n        InitialMode: 'normal', // todo: normal\n        Background: {\n            Enabled: true,  // todo: enable. disabled for better performance\n        },\n        Sky: {\n            SkyBox: 'texture/skybox/star',\n            SkyBoxExt: 'png',\n        },\n        NodeObject: {\n            Simple: false,\n            PlaneScale: 1.0,\n            MinRadius: 12.0,\n            MaxScale: 80.0,\n            MinScale: 10.0,\n            ScaleFactor: 1.0,\n            RadiusFactor: 0.3,\n        },\n        Globe: {\n            Enabled: true,\n            Details: 64,\n            Radius: 600.0,\n            NodeElevation: 20.0,\n            TextureMap: 'texture/globe/2k_earth_nightmap.jpeg',\n            // TextureMap: 'texture/globe/2k_earth_daymap.jpeg',\n            Clouds: {\n                ElevationScale: 1.005,\n                Opacity: 0.05,\n                Texture: 'texture/globe/earth_atmo.jpeg',\n            },\n            Atmosphere: {\n                ElevationScale: 1.15,\n            },\n            InnerAtmosphere: {\n                Enabled: true,\n            }\n        },\n    },\n    Physics: {\n        BaseForce: 3500.0,\n        RepelForce: 2000.0,\n        Startup: {\n            SimulationSteps: 10,\n            DeltaTime: 0.1\n        },\n        BaseFriction: 0.07, //0.04\n        MaxSpeedSq: Math.pow(15000, 2),\n        Attractor: {\n            Flat: {\n                DeltaZ: 1.0,\n            }\n        }\n    },\n    Debug: {\n        ShowFPS: false,\n    },\n    Renderer: {\n        LogZBuffer: true,\n        // LogZBuffer: false,\n    },\n}\n\nexport const Colors = {\n    LightningBlue: 0x00CCFF,\n    YggdrasilGreen: 0x33FF99,\n    MidgardTurqoise: 0x23DCC8,\n    NightBlack: 0x101921\n}\n","<template>\n    <div class=\"fps-counter\">\n        <span><strong>{{ Number(fps).toFixed(2) }}</strong> FPS, {{ objCount }} objects</span>\n        <span class=\"activity\" v-show=\"activityIndicator\">•</span>\n    </div>\n</template>\n\n<script>\n\nimport {countObjects} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\n\nexport default {\n    name: 'FPSCounter',\n    props: {\n        updatePeriod: {\n            type: Number,\n            default: 1.0\n        }\n    },\n    data() {\n        return {\n            fps: 0.0,\n            objCount: 0,\n            activityIndicator: false,\n            lastUpdateTime: 0.0\n        }\n    },\n    methods: {\n        pokeActivity() {\n            this.activityIndicator = true\n            setTimeout(() => {\n                this.activityIndicator = false\n            }, 100)\n        },\n\n        update(delta, scene) {\n            if (delta > 0 && +Date.now() - this.updatePeriod * 1000 > this.lastUpdateTime) {\n                this.fps = 1.0 / delta\n                this.objCount = countObjects(scene)\n                this.lastUpdateTime = +Date.now()\n            }\n        },\n    },\n    unmounted() {\n        emitter.off(EventTypes.Activity, this.pokeActivity)\n    },\n    mounted() {\n        emitter.on(EventTypes.Activity, this.pokeActivity)\n    }\n}\n\n</script>\n\n<style scoped>\n\n.fps-counter {\n    text-align: left;\n    font-size: 14pt;\n    color: whitesmoke;\n    position: absolute;\n    margin: 10px;\n    left: 0;\n    top: 0;\n}\n</style>","import * as THREE from \"three\";\n\nexport function countObjects(parent) {\n    let numOfMeshes = 0;\n    parent.traverse(function () {\n        numOfMeshes++;\n    });\n    return numOfMeshes\n}\n\nexport function clearObject(obj) {\n    if (obj) {\n        obj.remove.apply(obj, obj.children);\n    }\n}\n\nexport function longLatTo3D(long, lat, r = 1) {\n    // const phi = (lat + 180.0) * PI180\n    // const theta = (long + 180.0) / PI180\n    // const x = -r * Math.cos(phi) * Math.cos(theta)\n    // const y = r * Math.cos(phi) * Math.sin(theta)\n    // const z = r * Math.sin(phi)\n\n    const phi = Math.PI * (0.5 - (lat / 180));\n    const theta = Math.PI * (0.5 + long / 180);\n    const spherical = new THREE.Spherical(r, phi, theta);\n    return new THREE.Vector3().setFromSpherical(spherical);\n}\n\nexport function distanceXY(v1, v2) {\n    const dx = v1.x - v2.x\n    const dy = v1.y - v2.y\n    return Math.sqrt(\n        dx * dx + dy * dy\n    )\n}\n","import mitt from \"mitt\";\n\nexport const EventTypes = {\n    FullyLoaded: 'fully_loaded',\n    DataSourceTick: 'data_source_tick',\n    Activity: 'activity',\n}\n\nexport const emitter = mitt();\n","import { render } from \"./FPSCounter.vue?vue&type=template&id=27eb1626&scoped=true\"\nimport script from \"./FPSCounter.vue?vue&type=script&lang=js\"\nexport * from \"./FPSCounter.vue?vue&type=script&lang=js\"\n\nimport \"./FPSCounter.vue?vue&type=style&index=0&id=27eb1626&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27eb1626\"]])\n\nexport default __exports__","import {Vector3} from \"three\";\nimport _ from \"lodash\";\nimport numbro from 'numbro';\n\nexport function defaultValue(x, defaultValue) {\n    return x === undefined ? defaultValue : x\n}\n\n\nexport class Random {\n    static getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    static getRandomFloat(min, max) {\n        return Math.random() * (max - min) + min\n    }\n\n    static getRandomSample(array) {\n        if (!array) {\n            return null\n        }\n        const index = Random.getRandomInt(array.length)\n        return array[index]\n    }\n\n    static removeRandomItem(array) {\n        if (Math.random() > 0.5) {\n            const index = Random.getRandomInt(array.length)\n            array.splice(index, 1)\n        }\n        return array\n    }\n\n    static randomVector({xMin, xMax, yMin, yMax, zMin, zMax}) {\n        xMin = defaultValue(+xMin, -10)\n        xMax = defaultValue(+xMax, 10)\n        yMin = defaultValue(+yMin, -10)\n        yMax = defaultValue(+yMax, 10)\n        zMin = defaultValue(+zMin, -10)\n        zMax = defaultValue(+zMax, 10)\n\n        return new Vector3(\n            Random.getRandomFloat(xMin, xMax),\n            Random.getRandomFloat(yMin, yMax),\n            Random.getRandomFloat(zMin, zMax),\n        )\n    }\n\n    static randomOnCircle(r = 100, cx = 0, cy = 0) {\n        const phase = Random.getRandomFloat(0, 2 * Math.PI)\n        return new Vector3(\n            cx + r * Math.cos(phase),\n            cy + r * Math.sin(phase)\n        )\n    }\n\n    static getRandomIntRange(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;  // [min, max)\n    }\n}\n\nexport class Section {\n    constructor(p1, p2) {\n        this.p1 = p1\n        this.p2 = p2\n    }\n\n    get dx() {\n        return this.p2.x - this.p1.x\n    }\n\n    get dy() {\n        return this.p2.y - this.p1.y\n    }\n\n    whichSide(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n        return Math.sign(A * C - B * D);\n    }\n\n    get center() {\n        return {\n            x: 0.5 * (this.p1.x + this.p2.x),\n            y: 0.5 * (this.p1.y + this.p2.y)\n        }\n    }\n\n    nearestPoint(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n\n        const dot = A * C + B * D;\n        const len_sq = C * C + D * D;\n        let param = -1;\n        if (len_sq !== 0) {\n            param = dot / len_sq;\n        }\n\n        if (param < 0) {\n            x = this.p1.x\n            y = this.p1.y\n        } else if (param > 1) {\n            x = this.p2.x\n            y = this.p2.y\n        } else {\n            x = this.p1.x + param * C;\n            y = this.p1.y + param * D;\n        }\n        return {x, y}\n    }\n\n    pDistance(xo, yo) {\n        const nearestPoint1 = this.nearestPoint(xo, yo)\n        return new Section(nearestPoint1, {x: xo, y: yo}).length\n    }\n\n    get length() {\n        const dx = this.dx\n        const dy = this.dy\n        return Math.sqrt(dx * dx + dy * dy)\n    }\n}\n\nexport class Util {\n    static clamp(x, xMin, xMax) {\n        return Math.min(+xMax, Math.max(+xMin, +x))\n    }\n\n    static centerOf(group) {\n        if (!group || !group.length) {\n            return\n        }\n        let sumX = _.sumBy(group, item => item.x)\n        let sumY = _.sumBy(group, item => item.y)\n        return {\n            x: sumX / group.length,\n            y: sumY / group.length\n        }\n    }\n\n    static _signHelper(p1, p2, p3) {\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n    }\n\n    static pointInTriangle(pt, threePts) {\n        const [v1, v2, v3] = threePts\n        const d1 = Util._signHelper(pt, v1, v2);\n        const d2 = Util._signHelper(pt, v2, v3);\n        const d3 = Util._signHelper(pt, v3, v1);\n\n        const hasNeg = (d1 < 0) || (d2 < 0) || (d3 < 0);\n        const hasPos = (d1 > 0) || (d2 > 0) || (d3 > 0);\n\n        return !(hasNeg && hasPos);\n    }\n}\n\nexport function shortNumber(x, mantissa = 2, postFix = '') {\n    return numbro(x).format({\n        average: true,\n        mantissa,\n    }) + postFix\n}\n\nexport function fullNumber(x, postFix) {\n    return numbro(x).format({\n        thousandSeparated: true\n    }) + postFix\n}\n\nexport const RUNE = 'Rune'\n\nexport function shortRune(x, mantissa = 2) {\n    return shortNumber(x, mantissa, ' ' + RUNE)\n}\n\nexport function fullRune(x) {\n    return fullNumber(x, ' ' + RUNE)\n}\n","import {Vector3} from \"three\";\nimport {Util} from \"@/helpers/MathUtil\";\nimport {Config} from \"@/config\";\n\nexport class PhysicalObject {\n    constructor() {\n        this.mass = 1.0\n        this.force = new Vector3()\n        this.velocity = new Vector3()\n        this.friction = 0.0\n        this.attractors = []\n    }\n\n    update(dt) {\n        if (this.attractors.forEach) {\n            this.attractors.forEach(attr => attr.applyForce(this))\n        } else if (this.attractors.applyForce) {\n            this.attractors.applyForce(this)\n        }\n\n        const acceleration = this.force.multiplyScalar(this.mass)\n        this.velocity.copy(this.velocity.clone().add(acceleration.multiplyScalar(dt)))\n        this.velocity.multiplyScalar(Util.clamp(1.0 - this.friction, 0.0, 1.0))\n        if (this.velocity.lengthSq() > Config.Physics.MaxSpeedSq) {\n            this.velocity.setLength(Math.sqrt(Config.Physics.MaxSpeedSq))\n        }\n        this.realObject.position.add(this.velocity.clone().multiplyScalar(dt))\n    }\n\n    nullifyForce() {\n        this.force.set(0.0, 0.0, 0.0)\n    }\n\n    get radius() {\n        return 1.0\n    }\n\n    applyForceTo(direction, force) {\n        this.force.add(direction.copy().multiplyScalar(force))\n    }\n\n    get realObject() {\n        return this\n    }\n\n    repel(physObj, forceMult = 100.0) {\n        if (physObj === this) {\n            return\n        }\n\n        const thisPos = this.realObject.position\n        const otherPos = physObj.realObject.position\n\n        const d = thisPos.distanceTo(otherPos)\n        const minDistance = (this.radius + physObj.radius)\n        if (d < minDistance) {\n            const lineDir = thisPos\n                .clone()\n                .sub(otherPos)\n                .normalize()\n                .multiplyScalar(forceMult)\n            this.force.add(lineDir)\n            physObj.force.add(lineDir.negate())\n        }\n    }\n\n    get boundingBox() {\n        const x = this.realObject.position.x\n        const y = this.realObject.position.y\n        const r = this.radius\n        return {\n            minX: x - r,\n            minY: y - r,\n            maxX: x + r,\n            maxY: y + r,\n        }\n    }\n\n    shootOut(force = 1) {\n        const velocity = this.o.position.clone().normalize().multiplyScalar(force)\n        this.velocity.copy(velocity)\n    }\n}","export default \"#ifdef USE_LOGDEPTHBUF\\n#ifdef USE_LOGDEPTHBUF_EXT\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#else\\nuniform float logDepthBufFC;\\n#endif\\n#endif\\n\\n// optional: pass 2D rotation angle as an uniform\\nuniform float rotation;\\n// optional: pass 2D center point as an uniform\\nuniform vec2 center;\\n\\nvarying vec2 vUv;\\n\\n// optional: use this define to scale the model according to distance from the camera\\n#define USE_SIZEATTENUATION\\n\\n// [skipped includes]\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    // discard rotation and scale\\n    vec4 mvPosition = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);\\n\\n    // extract model's scale\\n    vec2 scale;\\n    scale.x = length(vec3(modelMatrix[0].x, modelMatrix[0].y, modelMatrix[0].z));\\n    scale.y = length(vec3(modelMatrix[1].x, modelMatrix[1].y, modelMatrix[1].z));\\n\\n    // if not defined, keep model the same size regardless of distance from the camera\\n    #ifndef USE_SIZEATTENUATION\\n    bool isPerspective = isPerspectiveMatrix(projectionMatrix);\\n    if (isPerspective) scale *= - mvPosition.z;\\n    #endif\\n\\n    // if center is not passed as uniform, create vec2 center = vec2(0.0);\\n\\n    // aligned with the camera [and scaled]\\n    vec2 alignedPosition = (position.xy - center) * scale;\\n\\n    // if rotation is not passed as uniform, skip the next block\\n\\n    // rotate 2D\\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y;\\n    rotatedPosition.y = sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y;\\n\\n    // billboard\\n    mvPosition.xy += rotatedPosition;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    // [skipped includes]\\n    #ifdef USE_LOGDEPTHBUF\\n        #ifdef USE_LOGDEPTHBUF_EXT\\n    vFragDepth = 1.0 + gl_Position.w;\\n//    vIsPerspective = float(isPerspectiveMatrix(projectionMatrix));\\n    vIsPerspective = 1.0;\\n        #else\\n//    if (isPerspectiveMatrix(projectionMatrix)) {\\n        gl_Position.z = log2(max(EPSILON, gl_Position.w + 1.0)) * logDepthBufFC - 1.0;\\n        gl_Position.z *= gl_Position.w;\\n//    }\\n        #endif\\n    #endif\\n}\";","export default \"// port from http://glslsandbox.com/e#8625.0 by Duke\\n// Fireball\\n// Awd\\n// @AlexWDunn\\n\\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\nuniform float logDepthBufFC;\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#endif\\n\\nuniform float time;\\nuniform float saturation;\\nuniform vec3 color;\\n\\nvarying vec2 vUv;\\n\\n#define saturate(oo) clamp(oo, 0.0, 1.0)\\n\\n// Quality Settings\\n#define MarchSteps 5\\n// Scene Settings\\n#define ExpPosition vec3(0.0)\\n#define Radius 1.0\\n#define Background vec4(0.0, 0.0, 0.0, 0.0)\\n// Noise Settings\\n#define NoiseSteps 1\\n#define NoiseAmplitude 0.06\\n//#define NoiseFrequency 4.0\\n#define NoiseFrequency 2.0\\n#define Animation vec3(0.0, -3.0, 0.5)\\n\\n// Colour Gradient\\n#define Color1 vec4(1.0, 1.0, 1.0, 1.0)\\n#define Color2 vec4(0.2, 0.8, 1.0, 1.0)\\n#define Color3 vec4(0.2, 0.03, 1.0, 1.0)\\n#define Color4 vec4(0.05, 0.02, 0.02, 0.3)\\n\\nconst float zoom = 2.8f;// 2.5 full\\n\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 permute(vec4 x) { return mod289(((x*34.0)+1.0)*x); }\\nvec4 taylorInvSqrt(vec4 r){ return 1.79284291400159 - 0.85373472095314 * r; }\\n\\nfloat snoise(vec3 v)\\n{\\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0);\\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n    // First corner\\n    vec3 i  = floor(v + dot(v, C.yyy));\\n    vec3 x0 = v - i + dot(i, C.xxx);\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min(g.xyz, l.zxy);\\n    vec3 i2 = max(g.xyz, l.zxy);\\n    vec3 x1 = x0 - i1 + C.xxx;\\n    vec3 x2 = x0 - i2 + C.yyy;// 2.0*C.x = 1/3 = C.y\\n    vec3 x3 = x0 - D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\\n    // Permutations\\n    i = mod289(i);\\n    vec4 p = permute(permute(permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n    float n_ = 0.142857142857;// 1.0/7.0\\n    vec3  ns = n_ * D.wyz - D.xzx;\\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);//  mod(p,7*7)\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_);// mod(j,N)\\n    vec4 x = x_ *ns.x + ns.yyyy;\\n    vec4 y = y_ *ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n    vec4 b0 = vec4(x.xy, y.xy);\\n    vec4 b1 = vec4(x.zw, y.zw);\\n    vec4 s0 = floor(b0) * 2.0 + 1.0;\\n    vec4 s1 = floor(b1) * 2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n    vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\\n    vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\\n    vec3 p0 = vec3(a0.xy, h.x);\\n    vec3 p1 = vec3(a0.zw, h.y);\\n    vec3 p2 = vec3(a1.xy, h.z);\\n    vec3 p3 = vec3(a1.zw, h.w);\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot(m*m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\\n}\\n\\nfloat Turbulence(vec3 position, float minFreq, float maxFreq, float qWidth)\\n{\\n    float value = 0.0;\\n    float cutoff = clamp(0.5/qWidth, 0.0, maxFreq);\\n    float fade;\\n    float fOut = minFreq;\\n    for (int i=NoiseSteps; i>=0; i--)\\n    {\\n        if (fOut >= 0.5 * cutoff) break;\\n        fOut *= 2.0;\\n        value += abs(snoise(position * fOut))/fOut;\\n    }\\n    fade = clamp(2.0 * (cutoff-fOut)/cutoff, 0.0, 1.0);\\n    value += fade * abs(snoise(position * fOut))/fOut;\\n    return 1.0-value;\\n}\\n\\nfloat SphereDist(vec3 position)\\n{\\n    return length(position - ExpPosition) - Radius;\\n}\\n\\nvec4 Shade(float distance)\\n{\\n    float c1 = clamp(distance*5.0 + 0.5, 0.0, 1.0);\\n    float c2 = clamp(distance*5.0, 0.0, 1.0);\\n    float c3 = clamp(distance*3.4 - 0.5, 0.0, 1.0);\\n\\n    //    #define Color1 vec4(1.0, 1.0, 1.0, 1.0)   -- white\\n    //    #define Color2 vec4(0.2, 0.8, 1.0, 1.0) --- green\\n    //    #define Color3 vec4(0.2, 0.03, 1.0, 1.0)  -- blue\\n    //    #define Color4 vec4(0.05, 0.02, 0.02, 0.3) -- black transparent\\n\\n    vec4 original = vec4(color, 1.0);\\n    vec4 a = mix(Color1, Color3, c1);\\n    vec4 b = mix(a, Color4, c2);\\n    return mix(original, b, c3);\\n}\\n\\n// Draws the scene\\nfloat RenderScene(vec3 position, out float distance)\\n{\\n    float noise = Turbulence(position * NoiseFrequency + Animation*time, 0.1, 1.5, 0.03) * NoiseAmplitude;\\n    noise = clamp(abs(noise), 0.0, 1.0);\\n    distance = SphereDist(position) - noise;\\n    return noise;\\n}\\n\\n// Basic ray marching method.\\nvec4 March(vec3 rayOrigin, vec3 rayStep)\\n{\\n    vec3 position = rayOrigin;\\n    float distance;\\n    float displacement;\\n    for (int step = MarchSteps; step >=0; --step)\\n    {\\n        displacement = RenderScene(position, distance);\\n        if (distance < 0.05) break;\\n        position += rayStep * distance;\\n    }\\n    return mix(Shade(displacement), Background, float(distance >= 0.5));\\n}\\n\\nbool IntersectSphere(vec3 ro, vec3 rd, vec3 pos, float radius, out vec3 intersectPoint)\\n{\\n    vec3 relDistance = (ro - pos);\\n    float b = dot(relDistance, rd);\\n    float c = dot(relDistance, relDistance) - radius*radius;\\n    float d = b*b - c;\\n    intersectPoint = ro + rd*(-b - sqrt(d));\\n    return d >= 0.0;\\n}\\n\\nconst float circleThickness = 0.15;\\nconst float circleRadius = 0.78;\\n\\nvoid main()\\n{\\n    vec2 p = vUv * 2.0 - 1.0;\\n\\n//    gl_FragColor = vec4(1.0, 1.0, 1.0, length(p) < 1.0 ?  1.0 : 0.0);\\n//    return;\\n\\n    float rotx = 0.0;\\n    float roty = 0.0;\\n\\n    // camera\\n    vec3 ro = zoom * normalize(vec3(cos(roty), cos(rotx), sin(roty)));\\n    vec3 ww = normalize(vec3(0.0, 0.0, 0.0) - ro);\\n    vec3 uu = normalize(cross(vec3(0.0, 1.0, 0.0), ww));\\n    vec3 vv = normalize(cross(ww, uu));\\n    vec3 rd = normalize(p.x*uu + p.y*vv + 1.5 * ww);\\n//    vec3 rd = normalize(p.x*uu + p.y*vv + zoom_f * ww);\\n    vec4 col = Background;\\n    vec3 origin;\\n    if (IntersectSphere(ro, rd, ExpPosition, Radius + NoiseAmplitude * 6.0, origin))\\n    {\\n        col = March(origin, rd);\\n    }\\n\\n    if(saturation > 1.0) {\\n        float d = length(p);\\n        //  1.0 - smoothstep(radius-borderThickness, radius, d);\\n        float t = 1.0 - smoothstep(0.0, circleRadius, abs(circleThickness - d));\\n        col = mix(col * saturation, vec4(0.9, 0.9, 1.0, 0.5), clamp(t, 0.0, 0.5));\\n    }\\n\\n    gl_FragColor = col;\\n\\n    #if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n    // Doing a strict comparison with == 1.0 can cause noise artifacts\\n    // on some platforms. See issue #17623.\\n    gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n    #endif\\n}\\n\";","const EVENT_TYPE = Object.freeze({\n    CREATE: 'create',\n    DESTROY: 'destroy',\n\n    SLASH: 'slash',\n    IP_ADDRESS: 'ip_address',\n    STATUS: 'status',\n    VERSION: 'version',\n    FORCED_LEAVE: 'forced_to_leave',\n    REQUESTED_LEAVE: 'requested_to_leave',\n    AWARD: 'current_award',\n    BOND_CHANGE: 'bond',\n    OBSERVE_CHAIN: 'observe_chains',\n    ACTIVE_BLOCK_HEIGHT: 'active_block_height',\n})\n\nexport class NodeEvent {\n    constructor(type, node, prevNode, currValue, prevValue) {\n        this.type = type\n        this.node = node\n        this.prevNode = prevNode\n        this.currValue = currValue\n        this.prevValue = prevValue\n        this.isTramp = node ? node.address === '' : false\n    }\n\n    toString() {\n        const addr = this.node ? this.node.address : '?'\n        return `NodeEvent(${this.type}, ${addr}, ${this.currValue} => ${this.prevValue})`\n    }\n}\n\nNodeEvent.EVENT_TYPE = EVENT_TYPE\n","import _ from \"lodash\";\n\nfunction isGarbage(x) {\n    return x === undefined || x === null || isNaN(x)\n}\n\nexport class Version {\n    constructor(x, y, z) {\n        this.x = x\n        this.y = y\n        this.z = z\n    }\n\n    static fromString(v) {\n        const components = _.map(v.split('.'), x => parseInt(x))\n        const n = components.length\n        const x = components[0]\n        const y = n > 1 ? components[1] : 0\n        const z = n > 2 ? components[2] : 0\n        return new Version(x, y, z)\n    }\n\n    get isInvalid() {\n        return isGarbage(this.x) || isGarbage(this.y) || isGarbage(this.z)\n    }\n\n    greater(v2) {\n        return this.x > v2.x || this.y > v2.y || this.z > v2.z\n    }\n\n    less(v2) {\n        return this.x < v2.x || this.y < v2.y || this.z < v2.z\n    }\n\n    equal(v2) {\n        return this.x === v2.x && this.y === v2.y && this.z === v2.z\n    }\n\n    toString() {\n        return `${this.x}.${this.y}.${this.z}`\n    }\n\n    inc(xLimit = 10, yLimit = 10) {\n        this.z++\n        if (this.z >= xLimit) {\n            this.z = 0\n            this.y++\n            if (this.y >= yLimit) {\n                this.x++\n                this.y = 0\n            }\n        }\n        return this\n    }\n}\n","import _ from \"lodash\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport {Version} from \"@/helpers/data/Version\";\n\nexport const NodeStatus = {\n    Standby: 'Standby',\n    Whitelisted: 'Whitelisted',\n    Disabled: 'Disabled',\n    Active: 'Active',\n    Unknown: 'Unknown',\n}\n\nexport class NodeTracker {\n    constructor(prevNodeList, currNodeList) {\n        this.prev = prevNodeList\n        this.curr = currNodeList\n    }\n\n    extractEvents() {\n        const events = []\n        const addEvent = (t, node, prevNode, k) => {\n            k = k || 'address'\n            events.push(new NodeEvent(t, node, prevNode, node ? node[k] : '',\n                prevNode ? prevNode[k] : ''))\n        }\n\n        const addedNodeAddresses = _.difference(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of addedNodeAddresses) {\n            const node = this.curr.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.CREATE, node, node)\n        }\n\n        const removeNodeAddresses = _.difference(this.prev.nameSet, this.curr.nameSet)\n        for (const addr of removeNodeAddresses) {\n            const node = this.prev.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.DESTROY, node, node)\n        }\n\n        const EVENT_TYPES = NodeEvent.EVENT_TYPE\n\n        const keyTypeTable = {\n            'slashPoints': EVENT_TYPES.SLASH,\n            'bond': EVENT_TYPES.BOND_CHANGE,\n            'IPAddress': EVENT_TYPES.IP_ADDRESS,\n            'status': EVENT_TYPES.STATUS,\n            'height': EVENT_TYPES.ACTIVE_BLOCK_HEIGHT,\n            'currentAward': EVENT_TYPES.AWARD,\n            'observeChains': EVENT_TYPES.OBSERVE_CHAIN,\n            'version': EVENT_TYPES.VERSION,\n        }\n\n        const commonNodes = _.intersection(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of commonNodes) {\n            const prevNode = this.prev.byAddress[addr]\n            const currNode = this.curr.byAddress[addr]\n            const keys = _.union(_.keys(prevNode), _.keys(currNode));\n            const keysChanged = _.filter(keys, (key) => {\n                return !_.isEqual(prevNode[key], currNode[key]);\n            });\n            for (const key of keysChanged) {\n                const eventType = keyTypeTable[key]\n                if (eventType) {\n                    addEvent(eventType, currNode, prevNode, key)\n                }\n            }\n        }\n\n        return events\n    }\n}\n\nexport class DebugNodeJuggler {\n    constructor(period = 10) {\n        this.tick = 1\n        this.period = period\n        this.enabled = true\n        this.juggleStatus = true\n        this.juggleVersion = true\n    }\n\n    handleNodes(nodes) {\n        if (this.enabled) {\n            if (this.tick % this.period === 0) {\n                nodes = this._juggleNodes(nodes)\n            }\n            this.tick++\n        }\n        return nodes\n    }\n\n    _juggleNodes(nodes) {\n        if(this.juggleStatus) {\n            nodes = this._juggleNodesStatus(nodes)\n        }\n        if(this.juggleVersion) {\n            nodes = this._juggleNodesVersion(nodes)\n        }\n        return nodes\n    }\n\n    _juggleNodesStatus(nodes) {\n        const nodesIn = Random.getRandomIntRange(2, 7)\n        const nodesOut = Random.getRandomIntRange(2, 7)\n\n        console.warn(`Attention! _juggleNodes: IN: ${nodesIn}, OUT: ${nodesOut}!`)\n\n        nodes.filteredByStatus(NodeStatus.Active).sampleRandomly(nodesOut).setStatusAll(NodeStatus.Standby)\n        nodes.filteredByStatus(NodeStatus.Standby).sampleRandomly(nodesIn).setStatusAll(NodeStatus.Active)\n\n        return nodes\n    }\n\n    _nextVersion(vString) {\n        return Version.fromString(vString).inc(10, 100).toString()\n    }\n\n    _juggleNodesVersion(nodes) {\n        const nUpgrade = Random.getRandomIntRange(1, 5)\n        nodes.sampleRandomly(nUpgrade).nodes.forEach(node => {\n            const oldVersion = node.version\n            node.version = this._nextVersion(node.version)\n            console.warn(`Debug upgrade ${node.shortAddress}: ${oldVersion} => ${node.version}`)\n        })\n        return nodes\n    }\n}\n","import { createDerivedMaterial } from 'troika-three-utils'\n\nexport function createBillboardMaterial(baseMaterial, opts) {\n    return createDerivedMaterial(\n        baseMaterial,\n        Object.assign(\n            {\n                vertexMainOutro: `\n                    vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n                    vec3 scale = vec3(\n                      length(modelViewMatrix[0].xyz),\n                      length(modelViewMatrix[1].xyz),\n                      length(modelViewMatrix[2].xyz)\n                      );\n                    // size attenuation: scale *= -mvPosition.z * 0.2;\n                    mvPosition.xyz += position * scale;\n                    gl_Position = projectionMatrix * mvPosition;\n                    `\n            },\n            opts\n        )\n    )\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial, Vector3} from \"three\";\nimport {Random, Util} from \"@/helpers/MathUtil\";\nimport {Text} from 'troika-three-text'\nimport {Colors, Config} from \"@/config\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport StdVertexShader from '@/visual/shader/billboard.vert'\n// import StdVertexShader from '@/visual/shader/standard.vert'\n// import FragShader1 from '@/visual/shader/node_obj_3_rays.frag'\n// import FragShader1 from '@/visual/shader/node_obj_1.frag'\nimport FragShader1 from '@/visual/shader/node_obj_2.frag'\nimport {NodeStatus} from \"@/helpers/data/NodeTracker\";\nimport {randFloat} from \"three/src/math/MathUtils\";\nimport {clamp} from \"lodash\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\n\n\nconst noCfg = Config.Scene.NodeObject\nconst geomSize = noCfg.PlaneScale\n\n// const geometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\nconst geometry = new THREE.BoxGeometry(geomSize, geomSize, geomSize)\n// const geometry = new THREE.IcosahedronGeometry(noCfg.PlaneScale, 1)\n// const geometry = new THREE.PlaneGeometry(noCfg.PlaneScale, noCfg.PlaneScale)\nconst simpleGeometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\n\nconst SlashColor = 0xff3300\n\nconst NormalLabelZ = 2.42\n\nexport class NodeObject extends PhysicalObject {\n    constructor(node) {\n        super()\n\n        this.node = node\n        this.normalizedBond = this.node.bond / 1_000_000  // millions of Rune\n        this.mass = this.normalizedBond + 1.0\n\n        this.o = new THREE.Group()\n        this.o.name = this.name\n\n        this.attractors = []\n        // this.mass = this.normalizedBond * 2.0\n        this.friction = Config.Physics.BaseFriction\n\n        this._makeSphere()\n        this._makeLabel()\n\n        this._elevated = false\n    }\n\n    get name() {\n        return this.node.address\n    }\n\n    set elevated(v) {\n        v = Boolean(v)\n        if (this._elevated !== v) {\n            this._elevated = v\n\n            this.material.uniforms.saturation.value = this._elevated ? 1.5 : 1.0\n            this.material.uniformsNeedUpdate = true\n\n            // if(this.nameTextObj) {\n            //     this.nameTextObj.position.z = this._elevated ? 10.0 : NormalLabelZ\n            // }\n            // todo: add glow effect\n        }\n    }\n\n    get elevated() {\n        return this._elevated\n    }\n\n    _getSphereColor() {\n        let color = 0x111111;\n        const st = this.node.status\n        if (st === NodeStatus.Standby) {\n            color = 0x167a56\n        } else if (st === NodeStatus.Active) {\n            color = Random.getRandomSample([\n                Colors.LightningBlue,\n                Colors.YggdrasilGreen\n            ])\n        } else if (st === NodeStatus.Disabled) {\n            color = 0xee0000\n        } else if (st === NodeStatus.Whitelisted) {\n            color = 0x444444\n        } else if (st === NodeStatus.Unknown) {\n            color = 0x111144\n        }\n        return new THREE.Color(color)\n    }\n\n    _makeSphere() {\n        if (this.mesh) {\n            this.o.remove(this.mesh)\n            this.mesh = null\n        }\n\n        if (Config.Scene.NodeObject.Simple) {\n            this._makeSimpleSphere()\n        } else {\n            this._makeCoolSphere()\n        }\n        const scale = this.calculateScale\n\n        // this.mesh = new THREE.Sprite(this.material)\n        let z = randFloat(-0.1, 0.1)\n\n        this.mesh.name = this.name\n        this.mesh.renderOrder = 1\n        this.mesh.scale.setScalar(scale)\n        this.mesh.position.z = z\n        this.o.renderOrder = 1\n        this.o.add(this.mesh)\n    }\n\n    _makeSimpleSphere() {\n        // simpleGeometry\n        this.mesh = new THREE.Mesh(simpleGeometry, new THREE.MeshBasicMaterial({\n            color: this._getSphereColor()\n        }))\n    }\n\n    _makeCoolSphere() {\n        // material\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                \"time\": {value: Random.getRandomFloat(0.0, 100.0)},\n                \"saturation\": {value: 1.0},\n                \"color\": {value: this._getSphereColor()},\n            },\n            vertexShader: StdVertexShader,\n            fragmentShader: FragShader1,\n            transparent: true,\n            depthTest: true,\n            depthWrite: true,\n            // sizeAttenuation: true,\n        })\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        return this.mesh\n    }\n\n    get calculateScale() {\n        const scale = this.normalizedBond * noCfg.MaxScale\n        return Util.clamp(scale, noCfg.MinScale, noCfg.MaxScale)\n    }\n\n    get realObject() {\n        return this.o\n    }\n\n    get position() {\n        return this.o.position\n    }\n\n    _makeLabel() {\n        const address = this.node.address\n        if (address && address.length >= 4) {\n            const nameTextObj = this.nameTextObj = new Text()\n\n            nameTextObj.text = address.slice(-4)\n            nameTextObj.font = Config.Font.Main\n            nameTextObj.fontWeight = 900\n            nameTextObj.fontSize = 15\n            nameTextObj.position.z = NormalLabelZ\n            nameTextObj.color = this.node.status === NodeStatus.Active ? 0xFFFFFF : 0xBBBBBB;\n            nameTextObj.anchorX = 'center'\n            nameTextObj.anchorY = 'middle'\n            nameTextObj.outlineWidth = 2.0\n            nameTextObj.sync()\n            nameTextObj.renderOrder = 100\n            nameTextObj.name = this.name\n            nameTextObj.material = createBillboardMaterial(new MeshBasicMaterial())\n            nameTextObj.scale.setScalar(\n                clamp(this.normalizedBond * 1.1, 0.5, 1.5)\n            )\n            this.o.add(nameTextObj)\n            this.labelObj = nameTextObj\n        }\n    }\n\n    dispose() {\n        if (this.nameTextObj) {\n            this.nameTextObj.dispose()\n        }\n        this.material.dispose()\n    }\n\n    get radius() {\n        return Math.max(noCfg.MinRadius, this.mesh.scale.x * noCfg.PlaneScale * noCfg.RadiusFactor)\n    }\n\n    static estimateRadiusOfGroup(nodeObjList) {\n        let r = 0.0\n        for (const nodeObj of nodeObjList) {\n            r += nodeObj.radius\n        }\n        const n = nodeObjList.length\n        const avgRadius = r > 0 ? r / n : 0.0\n        const fitRadius = avgRadius * Math.sqrt(n)\n        return Math.max(0.1, fitRadius)\n    }\n\n    update(dt) {\n        super.update(dt);\n\n        if (this.material) {\n            this.material.uniforms.time.value += dt\n        }\n    }\n\n    // ----------------- R E A C T I O N S -------------------\n\n    react(event) {\n        this.node = event.node\n        if (event.type === NodeEvent.EVENT_TYPE.OBSERVE_CHAIN) {\n            this.reactChain()\n        } else if (event.type === NodeEvent.EVENT_TYPE.SLASH) {\n            this.reactSlash()\n        } else if (event.type === NodeEvent.EVENT_TYPE.STATUS) {\n            this.reactStatusChange(event.node.status)\n        }\n    }\n\n    reactChain() {\n        // this.mesh.rotateZ(1.0)\n        const pos = this.o.position.clone().normalize()\n        const perp = pos.cross(new Vector3(0, 0, 1)).multiplyScalar(100.0)\n        this.velocity.add(perp)\n    }\n\n    reactSlash() {\n        const slashForce = 100.0\n        this.shootOut(slashForce)\n        // this.velocity.set(Random.randomOnCircle(slashForce))\n\n        const savedColor = this.material.uniforms.color.value.clone()\n\n        if (this.material) {\n            this.material.uniforms.color.value.set(SlashColor)\n            this.material.uniformsNeedUpdate = true\n\n            setTimeout(() => {\n                this.material.uniforms.color.value.set(savedColor)\n                this.material.uniformsNeedUpdate = true\n            }, 100)\n        }\n    }\n\n    reactStatusChange(newStatus) {\n        console.log(`New status ${this.node.status} -> ${newStatus}`)\n        this._makeSphere()\n    }\n}\n","import _ from \"lodash\";\nimport RBush from \"rbush\";\n\nexport class Simulation {\n    constructor() {\n        this._objects = {}\n\n        this.repelForce = 0.0\n        this.rBush = new RBush()\n        this.repelEnabled = true\n    }\n\n    getByName(name) {\n        return this._objects[name]\n    }\n\n    addObject(name, physObj) {\n        const existing = this.getByName(name)\n        if (existing) {\n            console.warn('PhysObj already exists. No nothing')\n            return existing\n        }\n\n        this._objects[name] = physObj\n    }\n\n    removeObject(name) {\n        const physObj = this.getByName(name)\n        if (!physObj) {\n            console.error('PhysObj not found!')\n            return\n        }\n\n        physObj.dispose()\n        delete this._objects[name]\n    }\n\n    _repelForceCalculation(obj) {\n        let vicinity = this.rBush.search(obj.boundingBox)\n\n        for (const rBushLeaf of vicinity) {\n            if (rBushLeaf.o !== obj) {\n                obj.repel(rBushLeaf.o, this.repelForce)\n            }\n        }\n    }\n\n    _updateObject(physObj, delta) {\n        physObj.nullifyForce()\n        if(this.repelEnabled) {\n            this._repelForceCalculation(physObj)\n        }\n        physObj.update(delta)\n    }\n\n    update(dt) {\n        if (isNaN(dt)) {\n            return\n        }\n        this.rBush = new RBush()\n        this.rBush.load(_.map(_.values(this._objects), physObj => ({\n            ...physObj.boundingBox,\n            o: physObj\n        })))\n        _.forEach(_.values(this._objects), obj => this._updateObject(obj, dt))\n    }\n\n    doNSteps(n, dt = 0.016) {\n        for (let step = 0; step < n; ++step) {\n            this.update(dt)\n        }\n    }\n\n    get physicalObjects() {\n        return _.values(this._objects)\n    }\n\n    get objectPositions() {\n        return _.map(this.physicalObjects, 'position')\n    }\n\n    get allNames() {\n        return _.keys(this._objects)\n    }\n\n    dispose() {\n        this._objects = {}\n        this.rBush.clear()\n    }\n\n    get size() {\n        return _.size(this._objects)\n    }\n\n    get entries() {\n        return _.entries(this._objects)\n    }\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial} from \"three\";\nimport {Text} from 'troika-three-text'\nimport {Config} from \"@/config\";\nimport TWEEN from \"tween\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\n\nexport class TitleLabel3D extends THREE.Object3D {\n    constructor(text, scale = 20, rotAngle = -45, billboard = false) {\n        super();\n        this.text = text\n        const t = this.label = new Text()\n        t.font = Config.Font.Main\n        t.fontSize = 10\n        t.scale.set(scale, scale, scale)\n        t.color = 0xFFFFFF\n        t.fillOpacity = 1.0 // 0.5\n        t.anchorX = 'center'\n        t.anchorY = 'middle'\n        t.text = text\n        if (billboard) {\n            t.material = createBillboardMaterial(new MeshBasicMaterial({\n                transparent: true,\n            }))\n        }\n        t.rotateX(THREE.MathUtils.degToRad(rotAngle))\n        t.sync()\n        this.t = t\n        this.add(t)\n        this.animDuration = 500\n        this.animDistance = 1500\n        this.easeType = TWEEN.Easing.Back.Out\n    }\n\n    animateIn() {\n        this.t.position.z = this.animDistance\n        this.t.material.opacity = 0.0\n\n        new TWEEN.Tween(this.t.position)\n            .to({z: 0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 1.0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n    }\n\n    animateOut(kill = false) {\n        const expandedDuration = this.animDuration * 5\n        new TWEEN.Tween(this.t.position)\n            .to({z: -this.animDistance * 5}, expandedDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 0.0}, expandedDuration * 0.5)\n            .easing(this.easeType)\n            .start().onComplete(() => {\n            if (kill) {\n                if(this.parent) {\n                    this.parent.remove(this)\n                }\n            }\n        })\n    }\n}","import {TitleLabel3D} from \"@/visual/TitleLabel3D\";\n\nexport class ModeBase {\n    constructor(scene) {\n        this.scene = scene\n        this.labels = []\n        this.active = false\n        this.isFlat = true\n    }\n\n    handleObject(physObj) {\n        +physObj // do nothing\n    }\n\n    reactEvent(event, nodes) {\n        +event; +nodes\n    }\n\n    makeLabel(text, position, scale = 20, rotation = -45.0, bb = false) {\n        if (!text) {\n            return\n        }\n\n        const titleLabel = new TitleLabel3D(text, scale, rotation, bb)\n        titleLabel.position.copy(position)\n        this.scene.add(titleLabel)\n        this.labels.push(titleLabel)\n        return titleLabel\n    }\n\n    onEnter() {\n    }\n\n    _triggerOnEnter(a, b) {\n        this.onEnter(a, b)\n\n        this.active = true\n        this.labels.forEach(label => label.animateIn())\n    }\n\n    onLeave() {\n    }\n\n    _triggerOnLeave(a, b) {\n        this.onLeave(a, b)\n\n        this.active = false\n        this.clearLabels()\n    }\n\n    clearLabels() {\n        this.labels.forEach(label => label.animateOut(true))\n        this.labels = []\n    }\n\n    update(dt) {\n        +dt\n    }\n}","import {distanceXY} from \"@/helpers/3D\";\n// import * as THREE from \"three\";\n\nexport class Attractor {\n    constructor(position,\n                constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0,\n                radius = -1.0,\n                relaxRadius = 0.0) {\n        this.position = position\n        this.constCoeff = constCoeff\n        this.linearCoeff = linearCoeff\n        this.quadraticCoeff = quadraticCoeff\n        this.radius = radius\n        this.relaxRadius = relaxRadius\n    }\n\n    applyForceToDistance(physObj, distance, toPosition) {\n        const fromPosition = physObj.realObject.position\n        const f = this.getForce(distance, fromPosition, toPosition)\n        physObj.force.add(f)\n    }\n\n    getForce(distance, fromPosition, toPosition) {\n        const magnitude = this.constCoeff + distance * this.linearCoeff + distance * distance * this.quadraticCoeff\n        return toPosition.clone().sub(fromPosition).normalize().multiplyScalar(magnitude)\n    }\n\n    distance(physObj) {\n        const objPosition = physObj.realObject.position\n        return this.position.distanceTo(objPosition)\n    }\n\n    applyForce(physObj) {\n        const distance = this.distance(physObj)\n        const infiniteRadius = this.radius <= 0.0\n\n        if ((infiniteRadius || distance <= this.radius) && distance > this.relaxRadius) {\n            this.applyForceToDistance(physObj, distance, this.position)\n        }\n    }\n}\n\nAttractor.INFINITE = -1\n\nexport class AttractorFlat extends Attractor {\n    distance(physObj) {\n        return distanceXY(this.position, physObj.realObject.position)\n    }\n\n    applyForce(physObj) {\n        super.applyForce(physObj);\n        this.squishZ(physObj)\n    }\n\n    squishZ(phyObj) {\n        const zDist = phyObj.realObject.position.z - this.position.z\n        let fZ = 0.0\n        if(Math.abs(zDist) > 1.0) {\n            fZ = -zDist * 100.0\n        }\n        phyObj.force.z = fZ\n    }\n}","import _ from \"lodash\";\nimport {Section, Util} from \"@/helpers/MathUtil\";\nimport {AttractorFlat} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\n\n\nexport class AttractorShape extends AttractorFlat {\n    constructor(triangles, constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0, z = 0) {\n        const center = Util.centerOf(_.flatten(triangles))\n        super(new THREE.Vector3(center.x, center.y, 0.0),\n            constCoeff, linearCoeff, quadraticCoeff, 0, 0)\n        this.triangles = triangles\n        this.center = center\n        this.z = z\n    }\n\n    get allSectors() {\n        const sectors = []\n        for (const triangle of this.triangles) {\n            sectors.push(new Section(triangle[0], triangle[1]))\n            sectors.push(new Section(triangle[1], triangle[2]))\n            sectors.push(new Section(triangle[2], triangle[0]))\n        }\n        return sectors\n    }\n\n    applyForce(physObj) {\n        if (!this.triangles || !this.triangles.length) {\n            return\n        }\n        const objPosition = physObj.realObject.position\n        const p = {x: objPosition.x, y: objPosition.y}\n        const relaxed = _.some(this.triangles, tri => Util.pointInTriangle(p, tri))\n\n        this.squishZ(physObj)\n\n        if (relaxed) {\n            return\n        }\n\n        const nearestSector = _.minBy(this.allSectors, sector => sector.pDistance(p.x, p.y))\n        const nearestPoint = nearestSector.nearestPoint(p.x, p.y)\n        const distance = new Section(nearestPoint, p).length\n        this.applyForceToDistance(physObj, distance, new THREE.Vector3(nearestPoint.x, nearestPoint.y, this.z))\n    }\n}\n","export class THORChainLogoShape {\n    static original() {\n        return [\n            [\n                {x: 0, y: 0},\n                {x: 133, y: -133},\n                {x: -238, y: -291},\n            ],\n            [\n                {x: 0, y: 0},\n                {x: -133, y: 135},\n                {x: 291, y: 311},\n            ]\n        ]\n    }\n\n    static triangles(dx = 0, dy = 0, scale = 1.0) {\n        const transformed = []\n        for(const triangle of this.original()) {\n            const pts = []\n            for(const {x, y} of triangle) {\n                pts.push({\n                    x: x * scale + dx,\n                    y: y * scale + dy\n                })\n            }\n            transformed.push(pts)\n        }\n        return transformed\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {Random} from \"@/helpers/MathUtil\";\n\nexport class ModeNormal extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        const force = Config.Physics.BaseForce\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.8), force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.tcAttractor\n    }\n\n    onEnter(nodeObjList) {\n        const label = this.makeLabel('THORChain', new THREE.Vector3(0, -580, -10), 18)\n        label.t.opacity = 0.8;\n\n        super.onEnter();\n\n        nodeObjList.forEach(o => {\n            o.velocity.add(new THREE.Vector3(0, Random.getRandomFloat(100, 1000), 0))\n        })\n    }\n}","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {NodeStatus} from \"@/helpers/data/NodeTracker\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport _ from \"lodash\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\n\nconst ANY_STATUS = '*'\n\nexport class ModeStatus extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        const force = Config.Physics.BaseForce\n\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.6), force)\n\n        this.attractors = {\n            [NodeStatus.Active]: [\n                // new Attractor(new THREE.Vector3(0.0, 0, 0), force, 0, 0, 0, this._circleRadius),\n                this.tcAttractor,\n            ],\n            [NodeStatus.Standby]: [\n                new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force * 0.02),\n            ],\n            [ANY_STATUS]: [\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force * 0.02),\n            ],\n        }\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = null\n\n        const bestAttractors = this.attractors[physObj.node.status]\n        if (bestAttractors) {\n            physObj.attractors = bestAttractors\n        } else {\n            physObj.attractors = this.attractors[ANY_STATUS]\n        }\n    }\n\n    onEnter(nodeObj) {\n        const statusesCounted = _.countBy(nodeObj, 'node.status')\n        const standbyCount = statusesCounted[NodeStatus.Standby]\n        const activeCount = statusesCounted[NodeStatus.Active]\n        const otherCount = nodeObj.length - (standbyCount + activeCount)\n\n        this.makeLabel('Active', new THREE.Vector3(0, -500, 0), 20)\n        this.makeLabel('Standby', new THREE.Vector3(-this._sideDistance, -420, 0), 12)\n        this.makeLabel('Other', new THREE.Vector3(this._sideDistance, -420, 0), 12)\n\n        this.makeLabel(activeCount, new THREE.Vector3(0, -650, 0), 10, -45)\n        this.makeLabel(standbyCount, new THREE.Vector3(-this._sideDistance, -500, 0), 6, -45)\n        this.makeLabel(otherCount, new THREE.Vector3(this._sideDistance, -500, 0), 6, -45)\n\n        super.onEnter();\n    }\n}\n","import * as THREE from \"three\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {Config} from \"@/config\";\n\n\nclass VirtualObject extends PhysicalObject {\n    constructor(x, y, r, name, attractor, friction) {\n        super();\n        this.name = name\n        this.position = new THREE.Vector3(x, y, 0)\n        this._radius = r\n        this.attractors = attractor\n        this.friction = friction\n    }\n\n    get radius() {\n        return this._radius\n    }\n}\n\nconst fric = Config.Physics.BaseFriction\n\nexport class CirclePack {\n    constructor(force, boundRadius, repelForce = 600, friction = fric, iterSteps = 1) {\n        this.force = force\n        this.boundRadius = boundRadius\n        this.iterSteps = iterSteps\n        this.dt = 0.05\n        this.simulation = new Simulation()\n        this.simulation.repelForce = repelForce\n        this.friction = friction\n\n        this.metaAttractor = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, -1, 0)\n    }\n\n    addCircle(name, radius) {\n        this.simulation.addObject(\n            name,\n            new VirtualObject(\n                0,\n                0,\n                radius,\n                name,\n                this.metaAttractor,\n                this.friction,\n            )\n        )\n    }\n\n    arrangeAroundCenter() {\n        if (!this.simulation.size) {\n            return this\n        }\n\n        const deltaAngle = Math.PI * 2 / this.simulation.size\n        const r = this.boundRadius * 0.5 * 0.8\n        let angle = Math.PI * 0.5\n\n        for (const name of this.simulation.allNames) {\n            const obj = this.simulation.getByName(name)\n            if (obj) {\n                obj.position.x = r * Math.cos(angle)\n                obj.position.y = r * Math.sin(angle)\n            }\n\n            angle -= deltaAngle\n        }\n        return this\n    }\n\n    clear() {\n        this.simulation.dispose()\n    }\n\n    pack(dt, steps) {\n        if (!this.simulation.size) {\n            return this\n        }\n        dt = dt || this.dt\n        steps = steps || this.iterSteps\n        this.simulation.doNSteps(steps, dt)\n        return this\n    }\n\n    getResults() {\n        const results = {}\n        for (const [name, {position, radius}] of this.simulation.entries) {\n            results[name] = {\n                position, radius\n            }\n        }\n        return results\n    }\n}\n","import axios from \"axios\";\nimport lscache from \"lscache\";\n\n\nexport class IPAddressInfo {\n    constructor(j) {\n        this.ipAddress = j['ip']\n        this.countryCode = j['country_code']\n        this.country = j['country_name']\n        this.city = j['city']\n        this.latitude = j['latitude']\n        this.longitude = j['longitude']\n        this.providerName = j['org']\n        this.flag = IPAddressInfo.getFlagEmoji(this.countryCode)\n    }\n\n    static getFlagEmoji(countryCode) {\n        if(countryCode) {\n            const codePoints = countryCode\n                .toUpperCase()\n                .split('')\n                .map(char => 127397 + char.charCodeAt());\n            return String.fromCodePoint(...codePoints);\n        } else {\n            return ''\n        }\n    }\n}\n\n\nexport const UNKNOWN = 'UNKNOWN'\n\n\nexport class IPAddressInfoLoader {\n    constructor(expireMinutes = 24 * 60) {\n        this.expireMinutes = expireMinutes\n        this._key = 'IPInfo2'\n    }\n\n    url(ip) {\n        return `https://settings.thornode.org/api/node/ip/${ip}`\n    }\n\n    async loadFromService(ip) {\n        const r = await axios.get(this.url(ip))\n        console.info(`Loaded IP info for (${ip}) => ${r.status}`)\n        return new IPAddressInfo(r.data)\n    }\n\n    loadFromCache(ip) {\n        return lscache.get(`${this._key}:${ip}`)\n    }\n\n    saveToCache(data) {\n        if (!data || !data.ipAddress) {\n            console.warn('no data to save!')\n            return\n        }\n        const ip = data.ipAddress\n        lscache.set(`${this._key}:${ip}`, data, this.expireMinutes)\n    }\n\n    async load(ip) {\n        let data = this.loadFromCache(ip)\n        if (data) {\n            return data\n        }\n        data = await this.loadFromService(ip)\n        this.saveToCache(data)\n        return data\n    }\n\n    static refineProviderName(name) {\n        if (name === undefined) {\n            return UNKNOWN\n        }\n\n        name = name.toUpperCase()\n        name = name.replace('ONLINE GMBH', '')\n        for (const component of name.split('-')) {\n            if (component !== 'AS') {\n                return component\n            }\n        }\n\n        return name\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {NodeObject} from \"@/visual/NodeObject\";\n\n\nexport class ModeProvider extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n        this.attractors = {}\n        this.force = Config.Physics.BaseForce\n        this.circlePacker = new CirclePack(this.force, 1400, 300, 0.02, 1)\n    }\n\n    update() {\n        // this.circlePacker.pack(dt)\n        this._transferAttractorsPositionFromPacker()\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = IPAddressInfoLoader.refineProviderName(\n                physObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            )\n            physObj.attractors = (this.attractors[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(objList) {\n        this._createProviderAttractors(objList)\n        super.onEnter();\n    }\n\n    _createProviderAttractors(objList) {\n        const providers = {}\n\n        let mostPopularProvider = null\n        let mostPopularCount = 0\n\n        for (const nodeObj of objList) {\n            const nativeName = nodeObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            const provider = IPAddressInfoLoader.refineProviderName(nativeName)\n\n            if(!providers[provider]) {\n                providers[provider] = [nodeObj]\n            } else {\n                const list = providers[provider]\n                list.push(nodeObj)\n                if(list.length > mostPopularCount) {\n                    mostPopularProvider = provider\n                    mostPopularCount = list.length\n                }\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        const sortedEntries = _.sortBy(_.entries(providers), [(pair) => pair[1].length])\n        // const sortedEntries = _.entries(providers)\n        for (const [name, items] of sortedEntries) {\n            if(name === mostPopularProvider) {\n                continue\n            }\n\n            this._makeAttractor(name, items, true)\n        }\n        this.circlePacker.arrangeAroundCenter()\n        this._transferAttractorsPositionFromPacker()\n\n        if(mostPopularProvider) {\n            this._makeAttractor(mostPopularProvider, providers[mostPopularProvider], false)\n        }\n\n        this._makeLabels(providers, mostPopularProvider)\n    }\n\n    _makeAttractor(name, items, addCircle) {\n        const circleRadius = NodeObject.estimateRadiusOfGroup(items) * 0.9\n        // console.log('prov', name, circleRadius)\n\n        if(addCircle) {\n            this.circlePacker.addCircle(name, circleRadius)\n        }\n\n        this.attractors[name] = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, 0, circleRadius)\n        return circleRadius\n    }\n\n    _makeLabelForGroup(providers, name, position) {\n        const countNodes = providers[name].length\n        const title = `${name} (${countNodes})`\n        this.makeLabel(title, new THREE.Vector3(position.x, position.y - 180.0, 60.0), 5)\n    }\n\n    _makeLabels(providers, mostPopularName) {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            this._makeLabelForGroup(providers, name, position)\n        }\n\n        if(mostPopularName) {\n            this._makeLabelForGroup(providers, mostPopularName, new THREE.Vector3())\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport {Config} from \"@/config\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\n\nexport class ModeVersion extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        this.force = Config.Physics.BaseForce\n        this.attractors = {}\n        this.circlePacker = new CirclePack(this.force, 1200, 300, Config.Physics.BaseFriction, 1)\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n    }\n\n    reactEvent(event, nodeObjects) {\n        // fixme: if there are multiple new versions, then it re-creates attractors multiple times per tick!!\n        if(event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            if(!this.attractors[event.currValue]) {\n                console.log(`New version detected: ${event.currValue}`)\n                this.clearLabels()\n                this._createVersionAttractors(nodeObjects)\n            }\n        }\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = physObj.node.version\n            physObj.attractors = (this.attractors[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(objList) {\n        this._createVersionAttractors(objList)\n        this.makeLabel('Versions', new THREE.Vector3(0, -630, -10), 14)\n    }\n\n    _createVersionAttractors(objList) {\n        const versions = {}\n        let mostPopularVersion = '', mostPopularList = []\n        for (const nodeObj of objList) {\n            const version = nodeObj.node.version\n            if (version === '') {\n                continue\n            }\n\n            if (!versions[version]) {\n                versions[version] = []\n            }\n\n            const currentList = versions[version]\n            currentList.push(nodeObj)\n\n            if (currentList.length > mostPopularList.length) {\n                mostPopularList = currentList\n                mostPopularVersion = version\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        for (const [version, items] of _.sortBy(_.entries(versions), [(o) => o[0]])) {\n            const circleRadius = NodeObject.estimateRadiusOfGroup(items)\n\n            this.attractors[version] = new Attractor(new THREE.Vector3(),\n                this.force, 0, 0, 0, circleRadius)\n\n            if (version !== mostPopularVersion) {\n                this.circlePacker.addCircle(version, circleRadius)\n            }\n        }\n        this.circlePacker.arrangeAroundCenter()\n\n        const popularRadius = NodeObject.estimateRadiusOfGroup(mostPopularList)\n        this.circlePacker.addCircle(mostPopularVersion, popularRadius)\n\n        this._transferAttractorsPositionFromPacker()\n        this._makeLabels()\n    }\n\n    _makeLabels() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [version, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[version]\n            if (attr) {\n                const text = version === '0.0.0' ? 'Unknown' : `v. ${version}`\n                this.makeLabel(text,\n                    new THREE.Vector3(position.x, position.y - attr.relaxRadius * 1.1 - 20.0, 50.0),\n                    2.5)\n            }\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Config} from \"@/config\";\nimport {shortRune} from \"@/helpers/MathUtil\";\n\nexport class ModeBond extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.nameToAttractor = {}\n        this.force = Config.Physics.BaseForce\n\n        this.center = new THREE.Vector3(0, 120)\n        this._noBondAttractor = new Attractor(this.center, this.force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.nameToAttractor[physObj.node.address]\n    }\n\n    onEnter(nodeObjects) {\n        const label = this.makeLabel('Bonds', new THREE.Vector3(0, -630, -10), 14)\n        label.t.opacity = 0.8;\n\n        nodeObjects = _.sortBy(nodeObjects, 'node.bond')\n\n        const n = nodeObjects.length\n\n        this.nameToAttractor = {}\n\n        if (n === 0) {\n            return\n        }\n\n        this._positionateOnSpiral(nodeObjects)\n\n        super.onEnter();\n    }\n\n    _positionateOnSpiral(nodeObjects) {\n        const n = nodeObjects.length\n        let angle = 0.0\n        let radius = 34.0\n        // let gap = 3.0\n        const xScale = 1.5\n\n        let deltaRadius = 5.9;\n        let deltaAngle = 0.5;\n        const deltaDeltaRadius = 0.995;\n        const deltaDeltaAngle = 0.991;\n\n        for (let i = 0; i < n; ++i) {\n            const x = this.center.x + xScale * radius * Math.cos(angle)\n            const y = this.center.y + radius * Math.sin(angle)\n            if(this._addAttractor(nodeObjects[i], x, y)) {\n                radius += deltaRadius;\n                angle += deltaAngle;\n                deltaRadius *= deltaDeltaRadius\n                deltaAngle *= deltaDeltaAngle\n            }\n        }\n    }\n\n    _positionateOnGrid(nodeObjects) {\n        const n = nodeObjects.length\n\n        const columns = Math.ceil(Math.sqrt(n))\n        const rows = Math.ceil(n / columns)\n\n        const gapSize = 100.0\n        const width = columns * gapSize\n        const height = rows * gapSize\n        const halfWidth = 0.5 * width\n        const halfHeight = 0.5 * height\n\n        for (let i = 0; i < n; ++i) {\n            const col = i % columns\n            const row = Math.floor(i / columns)\n            const x = gapSize * col - halfWidth\n            const y = gapSize * row - halfHeight\n            this._addAttractor(nodeObjects[i], x, y)\n        }\n    }\n\n    _addAttractor(nodeObject, x, y) {\n        const bond = nodeObject.node.bond\n        if(bond > 1.0) {\n            const z = 0.0\n            this.nameToAttractor[nodeObject.node.address] = new Attractor(new THREE.Vector3(x, y, z),\n                this.force, 0, 0, -1, 10.0)\n\n            this.makeLabel(shortRune(bond), new THREE.Vector3(x, y - nodeObject.radius - 10.0, -10), 1)\n            return true\n        } else {\n            this.nameToAttractor[nodeObject.node.address] = this._noBondAttractor\n            return false\n        }\n    }\n}\n","export default \"//uniform float time;\\n//uniform float saturation;\\n//uniform vec3 color;\\n\\nvarying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nconst vec3 ATMO_COLOR = vec3(0.3, 0.6, 1.0);\\nconst vec3 FORWARD = vec3(0.0, 0.0, 1.0);\\n\\nuniform sampler2D globeTexture;\\n\\nvoid main(void) {\\n    float intensity = 1.05 - dot(vNormal, FORWARD);\\n    vec3 atmo = clamp(ATMO_COLOR * pow(intensity, 1.5), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n//    vec3 atmo = vec3(0.0, 0.0, 0.0);\\n    gl_FragColor = vec4(atmo + texture2D(globeTexture, vUv).xyz, 1.0);\\n    //    gl_FragColor = texture2D(globeTexture, vUv);\\n}\\n\\n\";","export default \"varying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nvoid main()\\n{\\n    vUv = uv;\\n    vNormal = normalMatrix * normalize(normal);\\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {longLatTo3D} from \"@/helpers/3D\";\nimport TWEEN from \"tween\";\nimport _ from \"lodash\";\n\nimport AtmosphereFragmentShader from '@/visual/shader/globe_atmo_textured.frag'\nimport StdVertexShader from '@/visual/shader/standard.vert'\n\nexport class ModeGeo extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.isFlat = false\n\n        this.force = Config.Physics.BaseForce * 1.2\n        this._banishAttractor = new Attractor(new THREE.Vector3(0, 0, 0), this.force)\n\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n    }\n\n    handleObject(physObj) {\n        const attr = this._nameToAttractor[physObj.name]\n        physObj.attractors = attr ? [attr] : [this._banishAttractor]\n    }\n\n    onEnter(nodeObjects, group) {\n        // this.makeLabel('Geo', new THREE.Vector3(0, -630, -10), 14, 0, true)\n        super.onEnter();\n\n        group.repelEnabled = false\n\n        this._createAttractorsStacked(nodeObjects)\n\n        if (Config.Scene.Globe.Enabled) {\n            this._makeGlobe()\n            this._putInGlobe()\n        }\n    }\n\n    onLeave(nodeObjects, group) {\n        this._destroyGlobe()\n        _.forEach(nodeObjects, nodeObj => nodeObj.shootOut(2000))\n        super.onLeave();\n        group.repelEnabled = true\n    }\n\n    _makeGlobe() {\n        if (this.globeMesh) {\n            return\n        }\n        const textureLoader = new THREE.TextureLoader()\n\n        const globeConfig = Config.Scene.Globe\n        const geometry = new THREE.SphereGeometry(globeConfig.Radius, globeConfig.Details, globeConfig.Details);\n        // const basicMaterial = new THREE.MeshPhongMaterial({\n        //     color: 0x555555,\n        //     // depthWrite: true,\n        //     // depthTest: true,\n        // });\n\n        const material = new THREE.ShaderMaterial({\n            name: 'AtmosphereShaderMaterial',\n            fragmentShader: AtmosphereFragmentShader,\n            vertexShader: StdVertexShader,\n            uniforms: {\n                globeTexture: {\n                    value: textureLoader.load(Config.Scene.Globe.TextureMap)\n                }\n            },\n            // side: THREE.FrontSide,\n            // depthWrite: true,\n            // depthTest: true,\n        })\n\n        this.globeMesh = new THREE.Mesh(geometry, material);\n        this.globeMesh.renderOrder = 9999\n        this.scene.add(this.globeMesh)\n\n        // const dummyMesh = new THREE.Mesh(geometry, material)\n        // dummyMesh.scale.setScalar(0.9)\n        // this.globeMesh.add(dummyMesh)\n\n        // if(globeConfig.InnerAtmosphere.Enabled) {\n        //     const innerAtmoMaterial = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {\n        //             globeTexture: {\n        //                 value: textureLoader.load(Config.Scene.Globe.TextureMap)\n        //             }\n        //         },\n        //         // side: THREE.FrontSide,\n        //         // depthWrite: true,\n        //         // depthTest: true,\n        //     })\n        //\n        //     this.innerAtmoMesh = new THREE.Mesh(geometry, innerAtmoMaterial)\n        //     // this.innerAtmoMesh.scale.setScalar(1.1)\n        //     this.globeMesh.add(this.innerAtmoMesh)\n        // }\n\n        if (globeConfig.Clouds.Opacity > 0) {\n            const materialClouds = new THREE.MeshPhongMaterial({\n                map: textureLoader.load(globeConfig.Clouds.Texture),\n                side: THREE.DoubleSide,\n                opacity: globeConfig.Clouds.Opacity,\n                transparent: true,\n                depthWrite: false,\n                blending: THREE.AdditiveBlending,\n            });\n            this.cloudMesh = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh)\n\n            this.cloudMesh2 = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh2.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh2)\n        }\n\n        // if(globeConfig.Atmosphere) {\n        //     const materialAtmosphere = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {},\n        //         side: THREE.FrontSide,\n        //         depthWrite: false\n        //     })\n        //     this.atmosphereMesh = new THREE.Mesh(geometry, materialAtmosphere)\n        //     this.atmosphereMesh.scale.setScalar(globeConfig.Atmosphere.ElevationScale)\n        //     this.globeMesh.add(this.atmosphereMesh)\n        // }\n    }\n\n    _putInGlobe() {\n        this.globeMesh.scale.set(0.01, 0.01, 0.01)\n        new TWEEN.Tween(this.globeMesh.scale)\n            .to(new THREE.Vector3(1, 1, 1))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    _destroyGlobe() {\n        if (!this.globeMesh) {\n            return\n        }\n        const g = this.globeMesh\n\n        new TWEEN.Tween(g.scale)\n            .to(new THREE.Vector3(0.01, 0.01, 0.01))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                g.parent.remove(g)\n            })\n            .start()\n\n        this.globeMesh = null\n    }\n\n    update(dt) {\n        super.update(dt);\n        if (this.cloudMesh) {\n            this.cloudMesh.rotation.y += 0.02 * dt\n        }\n        if (this.cloudMesh2) {\n            this.cloudMesh2.rotation.y -= 0.04 * dt\n        }\n    }\n\n    _createAttractors(nodeObjects) {\n        const r = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let attractorHere = this._coordToAttractor[key]\n                if (!attractorHere) {\n                    const position3d = longLatTo3D(info.longitude, info.latitude, r)\n                    attractorHere = this._coordToAttractor[key] = new Attractor(position3d,\n                        this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                }\n                this._nameToAttractor[nodeObject.node.address] = attractorHere\n\n            }\n        }\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n\n    _createAttractorsStacked(nodeObjects) {\n        this._nameToAttractor = {}\n        this._coordToStack = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let stackObj = this._coordToStack[key]\n                if (!stackObj) {\n                    this._coordToStack[key] = stackObj = {\n                        stack: [],\n                        longitude: info.longitude,\n                        latitude: info.latitude,\n                    }\n                }\n                stackObj.stack.push(nodeObject)\n                // this._nameToAttractor[nodeObject.node.address] = attractorHere\n            }\n        }\n\n        const basicRadius = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        for (const {stack, longitude, latitude} of _.values(this._coordToStack)) {\n            const sortedStack = _.sortBy(stack, nodeObject => -nodeObject.node.bond)\n            let radius = basicRadius\n            for (const nodeObj of sortedStack) {\n                const position3d = longLatTo3D(longitude, latitude, radius)\n                this._nameToAttractor[nodeObj.node.address] = new Attractor(position3d,\n                    this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                radius += nodeObj.radius * 2.1\n            }\n        }\n\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n}\n","import {Random} from \"@/helpers/MathUtil\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {Config} from \"@/config\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {ModeNormal} from \"@/visual/modes/ModeNormal\";\nimport {ModeStatus} from \"@/visual/modes/ModeStatus\";\nimport {ModeProvider} from \"@/visual/modes/ModeProvider\";\nimport {ModeVersion} from \"@/visual/modes/ModeVersion\";\nimport {ModeBond} from \"@/visual/modes/ModeBond\";\nimport {ModeGeo} from \"@/visual/modes/ModeGeo\";\nimport * as THREE from \"three\";\n// import {VisNetwork} from \"@/visual/VisNetwork\";\n\nexport const NodeGroupModes = Object.freeze({\n    Normal: 'normal',\n    Status: 'status',\n    Provider: 'provider',\n    Version: 'version',\n    Bond: 'bond',\n    Geo: 'geo',\n})\n\nexport class NodeGroup extends Simulation {\n    constructor(parent) {\n        super()\n\n        this.holder = new THREE.Group()\n        parent.add(this.holder)\n\n        this._currentIdent = 0\n        this.parent = parent\n\n        this._modeNormal = new ModeNormal(this.parent)\n        this._modeStatus = new ModeStatus(this.parent)\n        this._modeProvider = new ModeProvider(this.parent)\n        this._modeVersion = new ModeVersion(this.parent)\n        this._modeBond = new ModeBond(this.parent)\n        this._modeGeo = new ModeGeo(this.parent)\n\n        this._selector = {\n            [NodeGroupModes.Normal]: this._modeNormal,\n            [NodeGroupModes.Status]: this._modeStatus,\n            [NodeGroupModes.Provider]: this._modeProvider,\n            [NodeGroupModes.Version]: this._modeVersion,\n            [NodeGroupModes.Bond]: this._modeBond,\n            [NodeGroupModes.Geo]: this._modeGeo,\n        }\n\n        this._selectedModeHandler = this._modeNormal\n        this.mode = NodeGroupModes.Normal\n\n        this.repelForce = Config.Physics.RepelForce\n\n        // this._visNet = new VisNetwork()\n        // this.parent.add(this._visNet)\n    }\n\n    genIdent(node) {\n        return node.address ?? String(this._currentIdent++)\n    }\n\n    _placeNodeObject(nodeObject) {\n        // const pos = Random.randomVector(this._startPositionBounds)\n        const pos = Random.randomOnCircle(2000.0)\n        nodeObject.o.position.copy(pos)\n        this.holder.add(nodeObject.o)\n    }\n\n    createNewNode(node) {\n        const ident = this.genIdent(node)\n        const existing = this.getByName(ident)\n        if (existing) {\n            console.warn('NodeObject already exists. No nothing')\n            return existing\n        }\n\n        console.info(`Create node ${ident}.`)\n\n        const nodeObject = new NodeObject(node)\n        this._placeNodeObject(nodeObject)\n        this.addObject(ident, nodeObject)\n        return nodeObject\n    }\n\n    destroyNode(node) {\n        const nodeAddress = node.address ?? node\n        const nodeObject = this.getByName(nodeAddress)\n        if (!nodeObject) {\n            console.error('node not found!')\n            return\n        }\n\n        console.info(`Destroy node ${nodeAddress}.`)\n        nodeObject.dispose()\n        this.holder.remove(nodeObject.o)\n        super.removeObject(nodeAddress)\n    }\n\n    set mode(newMode) {\n        if(this._mode === newMode) {\n            return\n        }\n\n        this._mode = newMode\n\n        // dispose old\n        this._selectedModeHandler._triggerOnLeave(this.physicalObjects, this)\n\n        // pick new\n        this._selectedModeHandler = this._selector[this._mode]\n\n        // enter the new one\n        this._selectedModeHandler._triggerOnEnter(this.physicalObjects, this)\n\n        console.log(`Set Mode: ${newMode}`)\n    }\n\n    _updateObject(obj, delta) {\n        if(obj) {\n            this._selectedModeHandler.handleObject(obj)\n            super._updateObject(obj, delta)\n        }\n    }\n\n    reactEvent(event) {\n        const delay = Random.getRandomFloat(0, Config.DataSource.ReactRandomDelay)\n        setTimeout(() => {\n            const obj = this.getByName(event.node.address)\n            if (obj) {\n                obj.react(event)\n                this._selectedModeHandler.reactEvent(event, this.physicalObjects)\n            }\n        }, delay)\n    }\n\n    update(dt) {\n        this._selectedModeHandler.update(dt)\n\n        super.update(dt)\n\n        // this._visNet.update(dt)\n        // this._visNet.updatePositions(this.rBush, this.objectPositions)\n    }\n\n    dispose() {\n        super.dispose()\n        clearObject(this.holder)\n        for (const otherObj of this.physicalObjects) {\n            otherObj.dispose()\n        }\n    }\n\n    setElevatedNode(name) {\n        for(const obj of this.physicalObjects) {\n            obj.elevated = (obj.name === name)\n        }\n    }\n\n    get isCurrentModeFlat() {\n        return this._selectedModeHandler.isFlat\n    }\n}\n","export const SEC_PER_BLOCK = 6.0\n\nexport const THOR_DECIMAL = Math.pow(10, 8)\nexport const THOR_DECIMAL_INV = 1.0 / THOR_DECIMAL\n\nexport function thorToFloat(x) {\n    return parseFloat(x) * THOR_DECIMAL_INV\n}\n","import _ from \"lodash\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {SEC_PER_BLOCK} from \"@/helpers/THORUtil\";\n\nexport class NodeSet {\n    constructor(nodes, calculate = true) {\n        this.nodes = nodes || []\n\n        this.total = this.nodes.length\n\n        if (calculate) {\n            this._nodesWithNames = _.filter(this.nodes, (item) => item.address)\n            this.byAddress = _.keyBy(this._nodesWithNames, 'address')\n            this.nameSet = _.keys(this.byAddress)\n\n            this.totalBond = _.sumBy(this.nodes, (node) => node.bond)\n            this.maxSlashNode = _.maxBy(this.nodes, (node) => node.slashPoints)\n            this.trampCount = this.total - this._nodesWithNames.length\n            this.maxAgeNode = _.maxBy(_.filter(this.nodes, node => node.activeBlockHeight && node.activeBlockHeight > 0),\n                node => node.activeBlockHeight)\n\n            this.ranks = {\n                bond: this._makeRanking('bond', 'desc'),\n                slash: this._makeRanking('slashPoints'),\n                age: this._makeRanking('activeBlockHeight'),\n                award: this._makeRanking('currentAward')\n            }\n\n            this.topHeights = this.calculateTopBlockHeight(3)\n            this.topVersion = this.calculateTopVersion()\n        }\n    }\n\n    _makeRanking(criteria, order = 'asc') {\n        const sortedArr = _.orderBy(this._nodesWithNames, [criteria], [order])\n        const names = _.map(sortedArr, 'address')\n        const ranks = Array.from(Array(sortedArr.length), (_, i) => i + 1)\n        return Object.fromEntries(_.zip(names, ranks))\n    }\n\n    findByAddress(address) {\n        return this.byAddress[address]\n    }\n\n    sortedNodes(attribute, asc = true) {\n        const f = asc ? 1 : -1\n        return new NodeSet(_.sortBy(this.nodes, (node) => f * node[attribute]))\n    }\n\n    filteredByStatus(status) {\n        return new NodeSet(_.filter(this.nodes, (node) => node.status === status))\n    }\n\n    get sortedByBond() {\n        return this.sortedNodes('bond')\n    }\n\n    get sortedByAge() {\n        return this.sortedNodes('statusSince')\n    }\n\n    sampleRandomly(n) {\n        return new NodeSet(_.sampleSize(this.nodes, n))\n    }\n\n    setStatusAll(status) {\n        _.forEach(this.nodes, n => n.status = status)\n    }\n\n    bondPercentOfTotal(bond) {\n        return (bond / this.totalBond * 100.0).toFixed(2)\n    }\n\n    get length() {\n        return this.total\n    }\n\n    _calculateTopBlockOneChain(nMin, heights) {\n        const heightSorted = _.map(Object.keys(heights), h => parseInt(h))\n        heightSorted.sort().reverse()\n        for (const height of heightSorted) {\n            const occurrences = heights[height]\n            if (occurrences >= nMin) {\n                return height\n            }\n        }\n        return null\n    }\n\n    calculateTopBlockHeight(nMin = 2) {\n        const allChains = Array.from(new Set(_.flatten(_.map(this._nodesWithNames, n => _.keys(n.observeChains)))))\n        const counters = _.map(\n            allChains, chain => _.countBy(this._nodesWithNames, n => n.observeChains[chain] ?? 0)\n        )\n\n        return _.zipObject(\n            allChains,\n            _.map(allChains, (chain, i) => this._calculateTopBlockOneChain(nMin, counters[i]))\n        )\n    }\n\n    calculateTopVersion() {\n        if (this.nodes.length === 0) {\n            return null\n        }\n        let topVersion = Version.fromString(this.nodes[0].version)\n        for (let i = 1; i < this.nodes.length; ++i) {\n            const currentVersion = Version.fromString(this.nodes[i].version)\n            if (currentVersion.greater(topVersion)) {\n                topVersion = currentVersion\n            }\n        }\n        return topVersion.toString()\n    }\n\n    estimateTimestampAtBlock(topThorHeight, no) {\n        const blockDiff = topThorHeight - no\n        return Date.now() - blockDiff * SEC_PER_BLOCK * 1000.0\n    }\n}\n","import {thorToFloat} from \"@/helpers/THORUtil\";\n\nexport class NodeInfo {\n    constructor(node) {\n        if (!node) {\n            node = {\n                status: 'Unknown',\n                jail: {},\n                bond_providers: {},\n                preflight_status: {},\n            }\n        }\n\n        this.address = node.node_address\n        this.status = node.status\n        this.bond = thorToFloat(node.bond)\n        this.activeBlockHeight = +node.active_block_height\n        this.bondAddress = node.bond_address\n        this.statusSince = +node.status_since\n        this.requestedToLeave = !!node.requested_to_leave\n        this.forcedToLeave = !!node.forced_to_leave\n        this.leaveHeight = +node.leave_height\n        this.IPAddress = node.ip_address\n        this.version = node.version\n        this.slashPoints = +node.slash_points\n        this.jail = {\n            address: node.jail.node_address,\n            releaseHeight: +node.jail.release_height,\n            reason: node.jail.reason,\n        }\n        this.currentAward = thorToFloat(node.current_award)\n\n        this.observeChains = {}\n\n        if (node['observe_chains']) {\n            for (let {chain, height} of node['observe_chains']) {\n                this.observeChains[chain] = +height\n            }\n        }\n\n        this.preflightStatus = {\n            status: node.preflight_status.status,\n            reason: node.preflight_status.reason,\n            code: +node.preflight_status.code\n        }\n\n        this.bondProviders = {\n            address: node.bond_providers['node_address'],\n            fee: (+node.bond_providers['node_operator_fee']) / 10000.0,\n            providers: []\n        }\n\n        if (node.bond_providers.providers) {\n            for (let {bond_address, bond} of node.bond_providers.providers) {\n                this.bondProviders.providers.push({\n                    bond_address,\n                    bond: thorToFloat(bond)\n                })\n            }\n        }\n\n        // post init\n        this.shortAddress = this.address ? this.address.substring(this.address.length - 4) : '?'\n\n        this.IPInfo = {\n            flag: '🏳️'\n        }\n\n        // this.requestedToLeave = true\n        // this.forcedtoLeave = true\n    }\n}\n","import axios from \"axios\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport _ from \"lodash\";\nimport {IPAddressInfoLoader} from \"@/helpers/data/IPAddressInfo\";\n\n\nexport class URLDataSource {\n    constructor(baseUrl, period) {\n        this.period = period\n        this.baseUrl = baseUrl\n        this._isRunning = false\n        this._timer = 0\n        this.callback = () => 0\n        this.ipAddressLoader = new IPAddressInfoLoader()\n    }\n\n    run() {\n        if (this._isRunning) {\n            console.warn(`${this.toString()} is already running`)\n            return\n        }\n        this._isRunning = true\n\n        console.info(`${this.toString()} started!`)\n\n        this._tick().then()\n\n        this._timer = setInterval(() => {\n            this._tick().then()\n        }, this.period)\n    }\n\n    stop() {\n        if (this._isRunning) {\n            clearInterval(this._timer)\n            this._timer = 0\n            this._isRunning = false\n            console.info(`${this.toString()} stopped.`)\n        }\n    }\n\n    toString() {\n        return `URLDataSource(${this.baseUrl}, ${this.period} sec)`\n    }\n\n    get isRunning() {\n        return this._isRunning\n    }\n\n    async dataProcess(rawData) {\n        return rawData\n    }\n\n    get url() {\n        return this.baseUrl\n    }\n\n    async _tick() {\n        try {\n            const data = await axios.get(this.url, {\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            })\n            if (this.callback) {\n                const result = await this.dataProcess(data.data)\n                this.callback(result)\n            }\n        } catch (e) {\n            console.error(`${this.toString()} tick failed: ${e}`)\n            throw e\n        }\n    }\n}\n\nexport class NodeDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/nodes'\n    }\n\n    async dataProcess(rawData) {\n        const nodeSet = new NodeSet(\n            _.map(rawData, json => new NodeInfo(json))\n        )\n\n        for(const node of nodeSet.nodes) {\n            if(node.IPAddress) {\n                try {\n                    node.IPInfo = await this.ipAddressLoader.load(node.IPAddress)\n                } catch (e) {\n                    console.error(`failed to load IPInfo for ${node.IPAddress}`)\n                }\n            }\n        }\n        return nodeSet\n    }\n}\n\nexport class LastBlockDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/lastblock'\n    }\n\n    async dataProcess(rawData) {\n        const chainHeights = {}\n        for(const chainItem of rawData) {\n            chainHeights['THOR'] = +chainItem['thorchain']\n            chainHeights[chainItem['chain']] = +chainItem['last_observed_in']\n        }\n        return chainHeights\n    }\n}\n","export const DataStorage = {\n    lastBlock: {\n        'THOR': 0,\n    },\n    lastNodes: []\n}\n","import {NodeGroup} from \"@/visual/NodeGroup\";\nimport {DebugNodeJuggler, NodeTracker} from \"@/helpers/data/NodeTracker\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {LastBlockDataSource, NodeDataSource} from \"@/helpers/data/URLDataSource\";\nimport {Config} from \"@/config\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\n\nexport class MainScene {\n    constructor(scene) {\n        this.scene = scene\n        this.prevNodes = new NodeSet([], false)\n        this.nodes = new NodeSet([], false)\n\n        this.nodeGroup = new NodeGroup(this.scene)\n\n        this._firstTime = true\n        this._runDataSource()\n\n        this._fullyLoaded = false\n\n        this._nodeJuggler = new DebugNodeJuggler(3)\n        this._nodeJuggler.enabled = Config.DataSource.NodeJuggler.Enabled\n\n        // this._debugSection()\n    }\n\n    _runDataSource() {\n        const baseUrl = Config.DataSource.NodesURL\n        this.nodeDataSource = new NodeDataSource(baseUrl, Config.DataSource.Nodes.PollPeriod)\n        this.nodeDataSource.callback = this.handleData.bind(this)\n        this.nodeDataSource.run()\n\n        this.lastBlockSource = new LastBlockDataSource(baseUrl, Config.DataSource.LastBlock.PollPeriod)\n        this.lastBlockSource.callback = (lastBlock) => {\n            DataStorage.lastBlock = lastBlock\n        }\n        this.lastBlockSource.run()\n    }\n\n    handleData(nodes) {\n        if (!nodes) {\n            console.error('No nodes to handle!')\n            return\n        }\n\n        if(!this._fullyLoaded) {\n            this._fullyLoaded = true\n            emitter.emit(EventTypes.FullyLoaded)\n        }\n\n        nodes = this._nodeJuggler.handleNodes(nodes)\n\n        DataStorage.lastNodes = nodes\n\n        emitter.emit(EventTypes.DataSourceTick, nodes)\n\n        this.prevNodes = this.nodes\n        this.nodes = nodes\n        const tracker = new NodeTracker(this.prevNodes, this.nodes)\n        const events = tracker.extractEvents()\n\n        console.info(`Handle Data tick! Total: ${events.length} events.`)\n\n        for (const event of events) {\n            const node = event.node\n            if (node.address) {\n                if (event.type === NodeEvent.EVENT_TYPE.CREATE) {\n                    this.nodeGroup.createNewNode(node)\n                } else if (event.type === NodeEvent.EVENT_TYPE.DESTROY) {\n                    this.nodeGroup.destroyNode(node)\n                } else {\n                    this.nodeGroup.reactEvent(event)\n                }\n            }\n        }\n\n        if (this._firstTime) {\n            for (let i = 0; i < Config.Physics.Startup.SimulationSteps; ++i) {\n                this.nodeGroup.update(Config.Physics.Startup.DeltaTime)\n            }\n            this._firstTime = false\n        }\n\n        if (events.length) {\n            emitter.emit(EventTypes.Activity)\n        }\n    }\n\n    update(delta) {\n        this.nodeGroup.update(delta)\n    }\n\n    dispose() {\n        this.nodeDataSource.stop()\n        this.lastBlockSource.stop()\n        this.nodeGroup.dispose()\n        clearObject(this.scene)\n    }\n\n    findNodeByAddress(address) {\n        return this.nodes.byAddress[address]\n    }\n\n    pick(name) {\n        const node = this.findNodeByAddress(name)\n        console.log(node)\n    }\n}\n","export default \"/*\\n * Copyright 2014 Roman Bobniev (FatumR)\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvarying vec2 vUv;\\nuniform float time;\\n\\n#define OCTAVES  8.0\\n\\n\\nfloat rand(vec2 co){\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nfloat rand2(vec2 co){\\n    return fract(cos(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\n// Rough Value noise implementation\\nfloat valueNoiseSimple(vec2 vl) {\\n    float minStep = 1.0;\\n\\n    vec2 grid = floor(vl);\\n    vec2 gridPnt1 = grid;\\n    vec2 gridPnt2 = vec2(grid.x, grid.y + minStep);\\n    vec2 gridPnt3 = vec2(grid.x + minStep, grid.y);\\n    vec2 gridPnt4 = vec2(gridPnt3.x, gridPnt2.y);\\n\\n    float s = rand2(grid);\\n    float t = rand2(gridPnt3);\\n    float u = rand2(gridPnt2);\\n    float v = rand2(gridPnt4);\\n\\n    float x1 = smoothstep(0., 1., fract(vl.x));\\n    float interpX1 = mix(s, t, x1);\\n    float interpX2 = mix(u, v, x1);\\n\\n    float y = smoothstep(0., 1., fract(vl.y));\\n    float interpY = mix(interpX1, interpX2, y);\\n\\n    return interpY;\\n}\\n\\n\\nfloat fractalNoise(vec2 vl) {\\n    float persistance = 2.0;\\n    float amplitude = 0.5;\\n    float rez = 0.0;\\n    vec2 p = vl;\\n\\n    for (float i = 0.0; i < OCTAVES; i++) {\\n        rez += amplitude * valueNoiseSimple(p);\\n        amplitude /= persistance;\\n        p *= persistance;\\n    }\\n    return rez;\\n}\\n\\nfloat complexFBM(vec2 p) {\\n    float slow = time / 2.5;\\n    float fast = time / .5;\\n    vec2 offset1 = vec2(slow, 0.);// Main front\\n    vec2 offset2 = vec2(sin(fast)* 0.1, 0.);// sub fronts\\n\\n    return\\n    fractalNoise(p + offset1 + fractalNoise(\\n    p + fractalNoise(\\n    p + 2. * fractalNoise(p - offset2)\\n    )\\n    )\\n    );\\n}\\n\\nconst vec3 blueColor = vec3(0.029411765, 0.207843137, 0.250392157);\\nconst vec3 blackColor2 = vec3(0.00803922, 0.0203921569, 0.015686275);\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n    uv = uv * vec2(2.0, 0.5) - 1.0;\\n\\n    vec3 rez = mix(blackColor2, blueColor, complexFBM(uv));\\n    gl_FragColor = vec4(rez, 1.0);\\n}\";","import * as THREE from \"three\";\n\nconst defaultQuad = new THREE.PlaneBufferGeometry(2, 2, 1, 1);\nconst defaultVertexShader = `\t\nuniform vec4 uSize; \t\t//w h t l \nvarying vec2 vUv;\n\nvoid main(){\n\tvUv = uv;\n\tvec2 transformed = \n\t    position.xy * uSize.xy \n\t    - vec2(1.,-1.) + vec2( uSize.x ,  -uSize.y ) \n\t    + vec2( uSize.w , - uSize.z ) * 2.;\n\tgl_Position = vec4( transformed , 1. , 1. );\n}\n`;\n\nconst defaultFragmentShader = `\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n// uniform float time;\n\nvoid main(){\n\tgl_FragColor = texture2D( uTexture , vUv );\n}\t\n`;\n\nexport default class ScreenQuad extends THREE.Mesh {\n    constructor({\n                    width = 1,        \t//100%\n                    height = 1,\t\t\t//100%\n                    top = 0,\n                    left = 0,\n                    texture = null,\n                    fragmentShader = false\n                } = {}) {\n        super(defaultQuad, new THREE.ShaderMaterial({\n            uniforms: {\n                uTexture: {\n                    type: 't',\n                    value: texture\n                },\n                uSize: {\n                    type: 'v4',\n                    value: new THREE.Vector4(1, 1, 0, 0)\n                },\n                time: {value: 0.0},\n            },\n            vertexShader: defaultVertexShader,\n            fragmentShader: fragmentShader ? fragmentShader : defaultFragmentShader,\n            depthWrite: false\n        }));\n        this.frustumCulled = false;\n        this.renderOrder = -1;\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n\n        //cleanup\n        this._pixels = [false, false, false, false]; //w h t l\n        this._componentSetters = [\n            this.setWidth,\n            this.setHeight,\n            this.setTop,\n            this.setLeft\n        ];\n        this._components = [\n            'width',\n            'height',\n            'top',\n            'left'\n        ];\n        this.screenSize = new THREE.Vector2(1, 1);\n        this.setSize(width, height);\n        this.setOffset(top, left);\n    }\n\n    update(dt) {\n        this.material.uniforms.time.value += dt;\n    }\n\n    setScreenSize(width, height) {\n        // this.material.uniforms.uScreenSize.value.set( width , height , 1 / width , 1 / height );\n        this.screenSize.set(width, height);\n        this._pixels.forEach((p, pi) => {\n            //if a component is set in pixels, update the uniform\n            if (p) this._componentSetters[pi].call(this, this[this._components[pi]]);\n        });\n    }\n\n    setSize(width, height) {\n        this.setWidth(width);\n        this.setHeight(height);\n    }\n\n    setWidth(v) {\n        this.width = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.x = parseInt(v) / this.screenSize.x;\n            this._pixels[0] = true;\n        } else {\n            this.material.uniforms.uSize.value.x = v;\n            this._pixels[0] = false;\n        }\n    }\n\n    setHeight(v) {\n        this.height = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.y = parseInt(v) / this.screenSize.y;\n            this._pixels[1] = true;\n        } else {\n            this.material.uniforms.uSize.value.y = v;\n            this._pixels[1] = false;\n        }\n    }\n\n    setOffset(top, left) {\n        // this.material.uniforms.uSize.value.z = top;\n        // this.material.uniforms.uSize.value.w = left;\n        this.setLeft(left);\n        this.setTop(top);\n    }\n\n    setTop(v) {\n        this.top = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.z = parseInt(v) / this.screenSize.y;\n            this._pixels[2] = true;\n        } else {\n            this.material.uniforms.uSize.value.z = v;\n            this._pixels[2] = false;\n        }\n    }\n\n    setLeft(v) {\n        this.left = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.w = parseInt(v) / this.screenSize.x;\n            this._pixels[3] = true;\n        } else {\n            this.material.uniforms.uSize.value.w = v;\n            this._pixels[3] = false;\n        }\n    }\n}","// import BgShader from '@/visual/shader/bg_1.frag'\nimport BgShader from '@/visual/shader/bg_smoke.frag'\n// import BgShader from '@/visual/shader/bg_basic_swirl.frag'\nimport ScreenQuad from \"@/visual/helpers/ScreenQuad\";\nimport _ from \"lodash\";\nimport * as THREE from \"three\";\n\nclass BackgroundBase {\n    constructor(scene) {\n        this.scene = scene\n    }\n\n    install() {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    update(dt) {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    setSize(w, h) {\n    }\n}\n\nexport class Background extends BackgroundBase {\n    constructor(scene) {\n        super(scene);\n        this.quad = new ScreenQuad({\n            fragmentShader: BgShader\n        });\n    }\n\n    install() {\n        this.scene.add(this.quad)\n    }\n\n    update(dt) {\n        this.quad.update(dt)\n    }\n\n    setSize(w, h) {\n        if(this.quad) {\n            this.quad.setScreenSize(w, h)\n        }\n    }\n}\n\nexport class BlackgroundStaticBox extends BackgroundBase {\n    constructor(scene, baseUrl, ext='jpg') {\n        super(scene);\n        this.ext = ext\n        this.baseUrl = baseUrl\n    }\n\n    install() {\n        const ext = this.ext\n        const urls = _.map([\n            `right.${ext}`, `left.${ext}`,\n            `top.${ext}`, `bottom.${ext}`,\n            `front.${ext}`, `back.${ext}`\n        ], (name) => `${this.baseUrl}/${name}`);\n\n        this.scene.background = new THREE.CubeTextureLoader().load(urls)\n    }\n}\n","<template>\n    <div class=\"control-panel\">\n        <button @click=\"setSceneMode(mode.value)\"\n                :class=\"isButtonSelectedClass(mode.value)\"\n                v-for=\"mode in modes\" :key=\"mode.value\">\n            {{ mode.text }}\n        </button>\n    </div>\n</template>\n\n<script>\n\nimport {NodeGroupModes} from \"@/visual/NodeGroup\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'ControlPanel',\n    components: {},\n    emits: ['mode-selected'],\n    props: {},\n    data() {\n        return {\n            selectedMode: NodeGroupModes.Normal,\n            activeOnly: false,\n        }\n    },\n    computed: {\n        modes() {\n            return [\n                {value: NodeGroupModes.Normal, text: 'NORMAL'},\n                {value: NodeGroupModes.Status, text: 'STATUS'},\n                {value: NodeGroupModes.Provider, text: 'PROVIDER'},\n                {value: NodeGroupModes.Version, text: 'VERSION'},\n                {value: NodeGroupModes.Bond, text: 'BOND'},\n                {value: NodeGroupModes.Geo, text: 'GEO'},\n            ]\n        }\n    },\n    methods: {\n        isButtonSelectedClass(modeName) {\n            return {\n                'button-selected': this.selectedMode === modeName\n            }\n        },\n\n        setSceneMode(value) {\n            this.selectedMode = value\n            this.$emit('mode-selected', value)\n        },\n    },\n    mounted() {\n        if(Config.Scene.InitialMode) {\n            setTimeout(() => this.setSceneMode(Config.Scene.InitialMode), 1000.0)\n        }\n    }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.control-panel {\n    position: absolute;\n    bottom: 4px;\n    right: 4px;\n}\n\n.button-selected {\n    border-width: 2px;\n    opacity: 1;\n}\n\n.float-right {\n    float: right;\n}\n\n</style>\n","import { render } from \"./ControlPanel.vue?vue&type=template&id=19a2d274&scoped=true\"\nimport script from \"./ControlPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ControlPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ControlPanel.vue?vue&type=style&index=0&id=19a2d274&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19a2d274\"]])\n\nexport default __exports__","<template>\n    <Transition name=\"shrink\">\n        <div class=\"window\" @keyup.esc.prevent=\"close\" tabindex=\"0\" ref=\"modal\">\n            <div class=\"close-button\" @click=\"close\" v-tippy content=\"Close it\"></div>\n            <h1>Node details</h1>\n            <h2>\n                <font-awesome-icon class=\"icon\"\n                    icon=\"fa-solid fa-arrow-right\"\n                    v-if=\"node.requestedToLeave\"\n                    content=\"Requested to leave!\"\n                    v-tippy\n                />\n\n                <font-awesome-icon class=\"icon\"\n                    icon=\"fa-solid fa-arrow-down-up-lock\"\n                    v-if=\"node.forcedToLeave\"\n                    content=\"Forced to leave!\"\n                    v-tippy\n                />\n\n                {{ node.address }}\n                <button class=\"copy-button\" @click=\"copyNodeAddress\" content=\"Copy address\" v-tippy>\n                    <font-awesome-icon icon=\"fa-solid fa-copy\"/>\n                </button>\n            </h2>\n\n            <div class=\"prop-grid\">\n                <div class=\"prop-box\">\n                    <div class=\"category\">Status</div>\n                    {{ statusEmoji }}\n                    <span :class=\"nodeStatusClass\">{{ node.status }}</span>\n                </div>\n                <div class=\"prop-box\">\n                    <div class=\"category\">Since</div>\n                    <div class=\"value\">\n                        <span v-if=\"isOldest\" v-tippy content=\"The oldest active node\">⌛</span>\n                        {{ statusSince }} <small>(#{{ ageRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">💽 Version</div>\n                    <div class=\"value\">\n                        <span v-if=\"isUpToDataVersion\" v-tippy content=\"Latest version\">👌</span>\n                        <span v-else v-tippy content=\"Consider upgrading your node!\">⚠️</span>\n                        {{ node.version }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">🕸️ IP address</div>\n                    <div class=\"value\">\n                        <a :href=\"ipAddressInfoLink\" target=\"_blank\">\n                            {{ node.IPAddress }}\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">📍 Location</div>\n                    <div class=\"value\">\n                        {{ node.IPInfo?.flag }}\n                        {{ node.IPInfo?.country }},\n                        {{ node.IPInfo?.city || 'unknown city' }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">☁️ Provider</div>\n                    <div class=\"value\">{{ providerName }} </div>\n                </div>\n\n                <div class=\"prop-box\" v-else>\n                    <div class=\"value\">Unknown IP address</div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🌐 Explorer</div>\n                    <div class=\"value\">\n                        <a :href=\"`https://viewblock.io/thorchain/address/${node.address}`\"\n                           target=\"_blank\">Viewblock – {{ node.shortAddress }}</a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🔒 Bond</div>\n                    <div class=\"value\">\n                        {{ nodeBond }}\n                        <small>(#{{ nodeBondRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🏆 Awards</div>\n                    <div class=\"value\">\n                        {{ award }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">😈 Slash points</div>\n                    <div class=\"value\">\n                        {{ node.slashPoints }} pts.\n                        <small>(#{{ slashPointsRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-for=\"[chain, height] of Object.entries(node.observeChains)\" :key=\"chain\">\n                    <div class=\"category\">{{ chain }}</div>\n                    <div class=\"value\">\n                        <span :title=\"height\" v-if=\"chainLag(chain)\" class=\"chain-lag\">\n                            🩸 {{ chainLag(chain) }} blocks behind!\n                        </span>\n                        <span v-else>\n                            Up to date\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Transition>\n\n</template>\n\n<script>\n\nimport {NodeStatus} from \"@/helpers/data/NodeTracker\";\nimport {shortRune} from \"@/helpers/MathUtil\";\nimport copy from \"copy-to-clipboard\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\n\nconst STATUS_PROPS = {\n    [NodeStatus.Active]: {\n        emoji: '✅',\n        class: 'status-active'\n    },\n    [NodeStatus.Standby]: {\n        emoji: '⏳',\n        class: 'status-standby',\n    },\n    [NodeStatus.Disabled]: {\n        emoji: '🔴',\n        class: 'status-disabled',\n    },\n    [NodeStatus.Whitelisted]: {\n        emoji: '📄',\n        class: 'status-whitelisted',\n    },\n}\n\nexport default {\n    name: 'NodeDetailsWindow',\n    emits: ['close'],\n    props: [\n        'node',\n        'nodeSet'\n    ],\n    data() {\n        return {}\n    },\n    computed: {\n        topThorHeight() {\n            return DataStorage.lastBlock['THOR']\n        },\n        hasIP() {\n            return this.node.IPAddress && this.node.IPAddress !== ''\n        },\n        statusEmoji() {\n            return STATUS_PROPS[this.node.status]?.emoji\n        },\n        nodeStatusClass() {\n            return STATUS_PROPS[this.node.status]?.class\n        },\n        statusSince() {\n            const timestamp = this.nodeSet.estimateTimestampAtBlock(this.topThorHeight, this.node.statusSince)\n            try {\n                return (new Date(timestamp)).toISOString().slice(0, 10)\n            } catch {\n                return 'N/A'\n            }\n        },\n        isOldest() {\n            return true\n        },\n        ageRank() {\n            return this.nodeSet.ranks.age[this.node.address]\n        },\n        award() {\n            return shortRune(Math.round(this.node.currentAward))\n        },\n        nodeBond() {\n            return shortRune(Math.round(this.node.bond))\n        },\n        nodeBondRank() {\n            return this.nodeSet.ranks.bond[this.node.address]\n        },\n        nodeBondPercent() {\n            return this.nodeSet.bondPercentOfTotal(this.node.bond)\n        },\n        ipAddressInfoLink() {\n            return `https://www.infobyip.com/ip-${this.node.IPAddress}.html`\n        },\n        slashPointsRank() {\n            return this.nodeSet.ranks.slash[this.node.address]\n        },\n        chainLag() {\n            return (chain) => (this.nodeSet.topHeights[chain] ?? 0) - (this.node.observeChains[chain] ?? 0)\n        },\n        providerName() {\n            const nativeName = this.node?.IPInfo?.providerName ?? UNKNOWN\n            return IPAddressInfoLoader.refineProviderName(nativeName)\n        },\n        isUpToDataVersion() {\n            return this.node.version === this.nodeSet.topVersion\n        }\n    },\n    methods: {\n        copyNodeAddress() {\n            copy(this.node.address)\n        },\n        close() {\n            this.$emit('close')\n        }\n    },\n    mounted() {\n        this.$refs.modal.focus()\n    },\n    // watch: {\n    //     nodeSet(ns) {\n    //         console.warn('node set changed', ns.ranks.bond)\n    //     }\n    // }\n}\n\n</script>\n\n<style lang=\"scss\">\n\n// todo: different variant for Portrait orientation\n.window {\n    position: fixed;\n    left: 5%;\n    top: 50%;\n    transform: translate(0%, -50%);\n\n    border: 1px solid #097a7b;\n    border-radius: 12px;\n\n    background-color: rgba(0, 0, 0, 0.72);\n    backdrop-filter: blur(8px);\n    color: turquoise;\n    padding: 20px;\n\n    //max-width: 50vw;\n\n    font-size: 10pt;\n}\n\n.close-button {\n    float: right;\n    overflow: hidden;\n    position: relative;\n    border: none;\n    padding: 0;\n    width: 2em;\n    height: 2em;\n    border-radius: 50%;\n    background: transparent;\n    color: turquoise;\n    font: inherit;\n    text-indent: 100%;\n    cursor: pointer;\n\n    &:focus {\n        outline: solid 0 transparent;\n        box-shadow: 0 0 0 2px #8ed0f9\n    }\n\n    &:hover {\n        background: rgba(29, 161, 142, .1)\n    }\n\n    &:before, &:after {\n        position: absolute;\n        top: 15%;\n        left: calc(50% - .0625em);\n        width: .125em;\n        height: 70%;\n        border-radius: .125em;\n        transform: rotate(45deg);\n        background: currentcolor;\n        content: ''\n    }\n\n    &:after {\n        transform: rotate(-45deg);\n    }\n}\n\nh1 {\n    margin: 0;\n    padding: 0;\n    color: white;\n}\n\n.category {\n    font-family: EXO2, monospace;\n    //font-weight: bolder;\n    color: white;\n    font-size: 9pt;\n}\n\n.value {\n    font-family: EXO2, monospace;\n    font-size: 10pt;\n}\n\n.prop-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 4px;\n    color: white;\n    //font-size: 7pt;\n}\n\n.prop-box {\n    background-color: rgba(1, 0, 0, 0.5);\n    color: turquoise;\n    border-radius: 5px;\n    padding: 6px;\n    border: 1px dashed #16504a;\n    font-size: 14pt;\n}\n\n.status-standby {\n    color: #b4b4b4;\n}\n\n.status-disabled {\n    color: red;\n}\n\n.status-active {\n    color: #9cffb2;\n}\n\n.status-whitelisted {\n    color: white;\n}\n\n.chain-lag {\n    color: orangered;\n}\n\n.copy-button {\n    display: inline-block;\n    background: rgba(0, 0, 0, 0.5);\n    //border-radius: 10px;\n    padding: 4px;\n    font-size: 10pt;\n    color: white;\n}\n\n.icon {\n    padding: 2px;\n}\n\nsmall {\n    color: #34bfb1;\n}\n\n</style>\n","import { render } from \"./NodeDetailsWindow.vue?vue&type=template&id=77aeb700\"\nimport script from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\nexport * from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\n\nimport \"./NodeDetailsWindow.vue?vue&type=style&index=0&id=77aeb700&lang=scss\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport CameraControls from \"camera-controls\";\nimport TWEEN from \"tween\";\n\nexport class CameraController {\n    constructor(domElement, center = new THREE.Vector3()) {\n        this.domElement = domElement\n        this.center = center\n        this._createCamera()\n        this._createCameraControl()\n        this._animating = false\n        this.controlsEnabled = true\n    }\n\n    reset() {\n        this.controls.reset()\n    }\n\n    _createCamera() {\n        this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight,\n            0.001, Config.Controls.Camera.Distance.Max * 2);\n        // this.camera = new THREE.OrthographicCamera()\n        this.camera.position.z = Config.Controls.Camera.Distance.Start\n    }\n\n    _createCameraControl() {\n        const controls = this.controls = new CameraControls(this.camera, this.domElement);\n        const cfg = Config.Controls.Camera\n\n        controls.dragToOffset = true\n        controls.minDistance = cfg.Distance.Min\n        controls.maxDistance = cfg.Distance.Max\n        this.camera.position.z = cfg.Distance.Start\n\n        controls.minAzimuthAngle = THREE.MathUtils.degToRad(-cfg.AzimuthAngleLimit)\n        controls.maxAzimuthAngle = THREE.MathUtils.degToRad(cfg.AzimuthAngleLimit)\n\n        controls.minPolarAngle = THREE.MathUtils.degToRad(-cfg.PolarAngleLimit + 90)\n        controls.maxPolarAngle = THREE.MathUtils.degToRad(cfg.PolarAngleLimit + 90)\n\n        controls.update(0)\n    }\n\n    update(delta) {\n        if (this.controlsEnabled && !this._animating && !this.cameraInspectsObject) {\n            this.controls.update(delta);\n        }\n        // todo: if we look at the object, keep tracking it while it moves around\n    }\n\n    onResize() {\n        const canvas = this.domElement;\n        const width = canvas.clientWidth;\n        const height = canvas.clientHeight;\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n\n    _getEndQuaternion(target, lookAtThis) {\n        const currPos = this.camera.position.clone()\n        const currQ = this.camera.quaternion.clone()\n\n        this.camera.position.copy(target)\n        this.camera.lookAt(lookAtThis)\n\n        const endQuaternion = this.camera.quaternion.clone()\n\n        this.camera.position.copy(currPos)\n        this.camera.quaternion.copy(currQ)\n\n        return endQuaternion\n    }\n\n    cameraLookAtNode(nodeObj, flat) {\n        if (!this.cameraInspectsObject) {\n            this.oldCameraPos = this.camera.position.clone()\n            this.oldCameraQuaternion = this.camera.quaternion.clone()\n            this.cameraInspectsObject = true\n        }\n\n        this._animating = true\n\n        const cfg = Config.Controls.Camera.Animation\n\n        const that = this\n\n        let target\n        let targetLookAt\n\n        if(flat) {\n            target = nodeObj.o.position.clone().add(new THREE.Vector3(0, 0, cfg.DistanceWhenZoomed))\n            targetLookAt = nodeObj.o.position.clone()\n        } else {\n            const deltaVector = nodeObj.o.position.clone().normalize().multiplyScalar(cfg.DistanceWhenZoomed)\n            target = nodeObj.o.position.clone().add(deltaVector)\n            targetLookAt = nodeObj.o.position.clone()\n        }\n\n        new TWEEN.Tween(this.camera.position)\n            .to(target, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                that._animating = false\n            })\n            .start();\n\n        const endQuaternion = this._getEndQuaternion(target, targetLookAt)\n        new TWEEN.Tween(this.camera.quaternion)\n            .to(endQuaternion, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    restoreCamera() {\n        if (this.cameraInspectsObject) {\n            this.cameraInspectsObject = false\n            this._animating = true\n\n            const that = this\n            const animTime = Config.Controls.Camera.Animation.Duration\n            new TWEEN.Tween(this.camera.position)\n                .to(this.oldCameraPos, Config.Controls.Camera.Animation.Duration)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .onUpdate(function () {\n                    // that.camera.position.copy(this);\n                    // that.camera.lookAt(that.center)\n                })\n                .onComplete(() => {\n                    that._animating = false\n                })\n                .start();\n\n            const endQuaternion = this._getEndQuaternion(this.oldCameraPos, this.center)\n            new TWEEN.Tween(this.camera.quaternion)\n                .to(endQuaternion, animTime)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .start()\n        }\n    }\n\n    dispose() {\n        this.controls.dispose()\n    }\n}\n","<template>\n    <div class=\"loading-indicator\">Loading.<span>{{ dots }}</span> </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'LoadingIndicator',\n    data() {\n        return {\n            dots: ''\n        }\n    },\n    methods: {\n        tick() {\n            this.dots += '.'\n            if(this.dots.length >= 3) {\n                this.dots = ''\n            }\n        }\n    },\n    mounted() {\n        this.timer = setInterval(this.tick, 200.0)\n    },\n    beforeUnmount() {\n        clearInterval(this.timer)\n    }\n}\n\n</script>\n\n<style scoped>\n    .loading-indicator {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 1.5rem;\n        color: white;\n    }\n</style>","import { render } from \"./LoadingIndicator.vue?vue&type=template&id=3618bf7b&scoped=true\"\nimport script from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingIndicator.vue?vue&type=style&index=0&id=3618bf7b&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3618bf7b\"]])\n\nexport default __exports__","import { render } from \"./MainScreen.vue?vue&type=template&id=c4bbd362\"\nimport script from \"./MainScreen.vue?vue&type=script&lang=js\"\nexport * from \"./MainScreen.vue?vue&type=script&lang=js\"\n\nimport \"./MainScreen.vue?vue&type=style&index=0&id=c4bbd362&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4e003472\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4e003472&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue'\nimport App from './App.vue'\nimport CameraControls from \"camera-controls\";\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\n\n/* import specific icons */\nimport {faCopy, faArrowDownUpLock, faArrowRight} from '@fortawesome/free-solid-svg-icons'\n\nimport * as THREE from 'three';\nimport {emitter} from \"@/helpers/EventTypes\";\n\nimport { plugin as VueTippy } from 'vue-tippy'\nimport 'tippy.js/dist/tippy.css' // optional for styling\nimport 'tippy.js/themes/translucent.css'\nimport {isWebGL2Supported} from \"webgl-detector\";\n\nif(!isWebGL2Supported()) {\n    alert('WebGL is not supported!')\n}\n\nCameraControls.install({THREE});\n\n/* add icons to the library */\nlibrary.add(faCopy, faArrowRight, faArrowDownUpLock)\n\nconst app = createApp(App);\napp.component('font-awesome-icon', FontAwesomeIcon)\napp.use(VueTippy, {\n    directive: \"tippy\", // => v-tippy\n    component: 'tippy', // => <tippy/>\n    flipDuration: 0,\n    defaultProps: {\n        placement: 'top'\n    },\n    popperOptions: {\n        modifiers: {\n            preventOverflow: {\n                enabled: false\n            }\n        }\n    }\n})\napp.config.globalProperties.emitter = emitter;\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthorviz\"] = self[\"webpackChunkthorviz\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6046); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_MainScreen","class","_createElementBlock","_createElementVNode","ref","tabindex","onKeypress","$options","onMousemove","onMouseenter","onMouseleave","onClick","_createVNode","_component_FPSCounter","$data","_component_LoadingIndicator","key","_component_ControlPanel","onModeSelected","_KeepAlive","_component_NodeDetailsWindow","node","onClose","Live","Config","DataSource","NodesURL","Nodes","PollPeriod","LastBlock","ReactRandomDelay","NodeJuggler","Enabled","Font","Main","Effects","Bloom","Strength","Threshold","Radius","Controls","Camera","Distance","Min","Max","Start","AzimuthAngleLimit","PolarAngleLimit","MouseMoveStrength","Animation","Duration","DistanceWhenZoomed","Shift","X","Scene","InitialMode","Background","Sky","SkyBox","SkyBoxExt","NodeObject","Simple","PlaneScale","MinRadius","MaxScale","MinScale","ScaleFactor","RadiusFactor","Globe","Details","NodeElevation","TextureMap","Clouds","ElevationScale","Opacity","Texture","Atmosphere","InnerAtmosphere","Physics","BaseForce","RepelForce","Startup","SimulationSteps","DeltaTime","BaseFriction","MaxSpeedSq","Math","pow","Attractor","Flat","DeltaZ","Debug","ShowFPS","Renderer","LogZBuffer","Colors","LightningBlue","YggdrasilGreen","MidgardTurqoise","NightBlack","_toDisplayString","Number","toFixed","countObjects","parent","numOfMeshes","traverse","clearObject","obj","remove","apply","children","longLatTo3D","long","lat","r","phi","PI","theta","spherical","THREE","setFromSpherical","distanceXY","v1","v2","dx","x","dy","y","sqrt","EventTypes","FullyLoaded","DataSourceTick","Activity","emitter","mitt","name","props","updatePeriod","type","default","data","fps","objCount","activityIndicator","lastUpdateTime","methods","pokeActivity","this","setTimeout","update","delta","scene","Date","now","unmounted","off","mounted","on","__exports__","defaultValue","undefined","Random","max","floor","random","min","array","index","getRandomInt","length","splice","xMin","xMax","yMin","yMax","zMin","zMax","Vector3","getRandomFloat","cx","cy","phase","cos","sin","ceil","Section","constructor","p1","p2","whichSide","A","B","C","D","sign","center","nearestPoint","dot","len_sq","param","pDistance","xo","yo","nearestPoint1","Util","group","sumX","_","item","sumY","p3","pt","threePts","v3","d1","_signHelper","d2","d3","hasNeg","hasPos","shortNumber","mantissa","postFix","numbro","format","average","RUNE","shortRune","PhysicalObject","mass","force","velocity","friction","attractors","dt","forEach","attr","applyForce","acceleration","multiplyScalar","copy","clone","add","clamp","lengthSq","setLength","realObject","position","nullifyForce","set","radius","applyForceTo","direction","repel","physObj","forceMult","thisPos","otherPos","d","distanceTo","minDistance","lineDir","sub","normalize","negate","boundingBox","minX","minY","maxX","maxY","shootOut","o","EVENT_TYPE","Object","freeze","CREATE","DESTROY","SLASH","IP_ADDRESS","STATUS","VERSION","FORCED_LEAVE","REQUESTED_LEAVE","AWARD","BOND_CHANGE","OBSERVE_CHAIN","ACTIVE_BLOCK_HEIGHT","NodeEvent","prevNode","currValue","prevValue","isTramp","address","toString","addr","isGarbage","isNaN","Version","z","v","components","split","parseInt","n","isInvalid","greater","less","equal","inc","xLimit","yLimit","NodeStatus","Standby","Whitelisted","Disabled","Active","Unknown","NodeTracker","prevNodeList","currNodeList","prev","curr","extractEvents","events","addEvent","t","k","push","addedNodeAddresses","nameSet","byAddress","removeNodeAddresses","EVENT_TYPES","keyTypeTable","commonNodes","currNode","keys","keysChanged","eventType","DebugNodeJuggler","period","tick","enabled","juggleStatus","juggleVersion","handleNodes","nodes","_juggleNodes","_juggleNodesStatus","_juggleNodesVersion","nodesIn","getRandomIntRange","nodesOut","console","warn","filteredByStatus","sampleRandomly","setStatusAll","_nextVersion","vString","fromString","nUpgrade","oldVersion","version","shortAddress","createBillboardMaterial","baseMaterial","opts","createDerivedMaterial","assign","vertexMainOutro","noCfg","geomSize","geometry","simpleGeometry","SlashColor","NormalLabelZ","super","normalizedBond","bond","_makeSphere","_makeLabel","_elevated","elevated","Boolean","material","uniforms","saturation","value","uniformsNeedUpdate","_getSphereColor","color","st","status","getRandomSample","mesh","_makeSimpleSphere","_makeCoolSphere","scale","calculateScale","randFloat","renderOrder","setScalar","vertexShader","StdVertexShader","fragmentShader","FragShader1","transparent","depthTest","depthWrite","nameTextObj","Text","text","slice","font","fontWeight","fontSize","anchorX","anchorY","outlineWidth","sync","MeshBasicMaterial","labelObj","dispose","nodeObjList","nodeObj","avgRadius","fitRadius","time","react","event","reactChain","reactSlash","reactStatusChange","pos","perp","cross","slashForce","savedColor","newStatus","log","Simulation","_objects","repelForce","rBush","RBush","repelEnabled","getByName","addObject","existing","removeObject","error","_repelForceCalculation","vicinity","search","rBushLeaf","_updateObject","load","doNSteps","step","physicalObjects","objectPositions","allNames","clear","size","entries","TitleLabel3D","rotAngle","billboard","label","fillOpacity","rotateX","animDuration","animDistance","easeType","TWEEN","animateIn","opacity","to","easing","start","animateOut","kill","expandedDuration","onComplete","ModeBase","labels","active","isFlat","handleObject","reactEvent","makeLabel","rotation","bb","titleLabel","onEnter","_triggerOnEnter","a","b","onLeave","_triggerOnLeave","clearLabels","constCoeff","linearCoeff","quadraticCoeff","relaxRadius","applyForceToDistance","distance","toPosition","fromPosition","f","getForce","magnitude","objPosition","infiniteRadius","INFINITE","AttractorFlat","squishZ","phyObj","zDist","fZ","abs","AttractorShape","triangles","centerOf","allSectors","sectors","triangle","p","relaxed","tri","pointInTriangle","nearestSector","sector","THORChainLogoShape","transformed","original","pts","ModeNormal","_circleRadius","tcAttractor","ANY_STATUS","ModeStatus","_sideDistance","bestAttractors","statusesCounted","standbyCount","activeCount","otherCount","VirtualObject","attractor","_radius","fric","CirclePack","boundRadius","iterSteps","simulation","metaAttractor","addCircle","arrangeAroundCenter","deltaAngle","angle","pack","steps","getResults","results","IPAddressInfo","j","ipAddress","countryCode","country","city","latitude","longitude","providerName","flag","getFlagEmoji","codePoints","toUpperCase","map","char","charCodeAt","String","fromCodePoint","UNKNOWN","IPAddressInfoLoader","expireMinutes","_key","url","ip","axios","info","loadFromCache","lscache","saveToCache","loadFromService","replace","component","ModeProvider","_attractorBanish","circlePacker","_transferAttractorsPositionFromPacker","groupName","refineProviderName","IPInfo","objList","_createProviderAttractors","providers","mostPopularProvider","mostPopularCount","nativeName","provider","list","sortedEntries","pair","items","_makeAttractor","_makeLabels","circleRadius","estimateRadiusOfGroup","_makeLabelForGroup","countNodes","title","mostPopularName","packedPositions","ModeVersion","nodeObjects","_createVersionAttractors","versions","mostPopularVersion","mostPopularList","currentList","popularRadius","ModeBond","nameToAttractor","_noBondAttractor","_positionateOnSpiral","xScale","deltaRadius","deltaDeltaRadius","deltaDeltaAngle","i","_addAttractor","_positionateOnGrid","columns","rows","gapSize","width","height","halfWidth","halfHeight","col","row","nodeObject","ModeGeo","_banishAttractor","_nameToAttractor","_coordToAttractor","_createAttractorsStacked","_makeGlobe","_putInGlobe","_destroyGlobe","globeMesh","textureLoader","globeConfig","AtmosphereFragmentShader","globeTexture","materialClouds","side","blending","cloudMesh","cloudMesh2","g","_createAttractors","IPAddress","attractorHere","position3d","_coordToStack","stackObj","stack","basicRadius","sortedStack","NodeGroupModes","Normal","Status","Provider","Bond","Geo","NodeGroup","holder","_currentIdent","_modeNormal","_modeStatus","_modeProvider","_modeVersion","_modeBond","_modeGeo","_selector","_selectedModeHandler","mode","genIdent","_placeNodeObject","randomOnCircle","createNewNode","ident","destroyNode","nodeAddress","newMode","_mode","delay","otherObj","setElevatedNode","isCurrentModeFlat","SEC_PER_BLOCK","THOR_DECIMAL","THOR_DECIMAL_INV","thorToFloat","parseFloat","NodeSet","calculate","total","_nodesWithNames","totalBond","maxSlashNode","slashPoints","trampCount","maxAgeNode","activeBlockHeight","ranks","_makeRanking","slash","age","award","topHeights","calculateTopBlockHeight","topVersion","calculateTopVersion","criteria","order","sortedArr","names","Array","from","fromEntries","findByAddress","sortedNodes","attribute","asc","sortedByBond","sortedByAge","bondPercentOfTotal","_calculateTopBlockOneChain","nMin","heights","heightSorted","h","sort","reverse","occurrences","allChains","Set","observeChains","counters","chain","currentVersion","estimateTimestampAtBlock","topThorHeight","no","blockDiff","NodeInfo","jail","bond_providers","preflight_status","node_address","active_block_height","bondAddress","bond_address","statusSince","status_since","requestedToLeave","requested_to_leave","forcedToLeave","forced_to_leave","leaveHeight","leave_height","ip_address","slash_points","releaseHeight","release_height","reason","currentAward","current_award","preflightStatus","code","bondProviders","fee","substring","URLDataSource","baseUrl","_isRunning","_timer","callback","ipAddressLoader","run","_tick","then","setInterval","stop","clearInterval","isRunning","rawData","headers","result","dataProcess","e","NodeDataSource","nodeSet","json","LastBlockDataSource","chainHeights","chainItem","DataStorage","lastBlock","lastNodes","MainScene","prevNodes","nodeGroup","_firstTime","_runDataSource","_fullyLoaded","_nodeJuggler","nodeDataSource","handleData","bind","lastBlockSource","emit","tracker","findNodeByAddress","pick","defaultQuad","defaultVertexShader","defaultFragmentShader","ScreenQuad","top","left","texture","uTexture","uSize","frustumCulled","_pixels","_componentSetters","setWidth","setHeight","setTop","setLeft","_components","screenSize","setSize","setOffset","setScreenSize","pi","call","w","BackgroundBase","install","quad","BgShader","_Fragment","_renderList","_hoisted_2","emits","selectedMode","activeOnly","computed","modes","isButtonSelectedClass","modeName","setSceneMode","$emit","content","_hoisted_31","_Transition","onKeyup","_hoisted_1","$props","_component_font_awesome_icon","icon","_hoisted_4","_hoisted_6","_hoisted_10","_hoisted_12","_hoisted_16","_hoisted_19","_hoisted_21","href","target","_hoisted_23","_hoisted_25","_hoisted_28","_hoisted_32","_hoisted_34","_hoisted_36","_hoisted_38","_hoisted_41","_hoisted_44","_hoisted_48","_hoisted_49","STATUS_PROPS","emoji","hasIP","statusEmoji","nodeStatusClass","timestamp","toISOString","isOldest","ageRank","round","nodeBond","nodeBondRank","nodeBondPercent","ipAddressInfoLink","slashPointsRank","chainLag","isUpToDataVersion","copyNodeAddress","close","$refs","modal","focus","CameraController","domElement","_createCamera","_createCameraControl","_animating","controlsEnabled","reset","controls","camera","window","innerWidth","innerHeight","CameraControls","cfg","dragToOffset","maxDistance","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","cameraInspectsObject","onResize","canvas","clientWidth","clientHeight","aspect","updateProjectionMatrix","_getEndQuaternion","lookAtThis","currPos","currQ","quaternion","lookAt","endQuaternion","cameraLookAtNode","flat","oldCameraPos","oldCameraQuaternion","that","targetLookAt","deltaVector","restoreCamera","animTime","onUpdate","dots","timer","beforeUnmount","LoadingIndicator","NodeDetailsWindow","ControlPanel","FPSCounter","isLoading","showFps","mouseEnterX","mouseEnterY","tickCounter","sceneMode","fullyLoaded","nodeDetailsVisible","nodeToViewDetails","zoomedToNode","shallowRef","onKeyDown","cameraController","onMouseMove","clientX","clientY","rotate","pickedName","_pickObject","onMouseEnter","onMouseLeave","thoughtful","raycaster","pickPosition","getCanvasRelativePosition","setFromCamera","intersectedObjects","intersectObjects","namedObjects","pickedObject","startsWith","_onPickNodeObject","rect","getBoundingClientRect","resizeRendererToDisplaySize","renderer","needResize","composer","_width","_height","bloomPass","bg","render","clock","getDelta","document","visibilityState","requestAnimationFrame","makeSkybox","makeRenderer","antialias","logarithmicDepthBuffer","devicePixelRatio","setPixelRatio","renderScene","RenderPass","EffectComposer","addPass","bloomCfg","UnrealBloomPass","buildScene","onFullyLoaded","onDataArrived","onCloseDetails","MainScreen","created","preloading","preloadFont","characters","isWebGL2Supported","alert","library","faCopy","faArrowRight","faArrowDownUpLock","app","createApp","App","FontAwesomeIcon","use","VueTippy","directive","flipDuration","defaultProps","placement","popperOptions","modifiers","preventOverflow","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","getter","__esModule","definition","defineProperty","enumerable","get","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}