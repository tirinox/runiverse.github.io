{"version":3,"file":"js/app.f8258622.js","mappings":"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","sources":["webpack://thorviz/./src/App.vue","webpack://thorviz/./src/components/MainScreen.vue","webpack://thorviz/./src/config.js","webpack://thorviz/./src/components/parts/FPSCounter.vue","webpack://thorviz/./src/helpers/3D.js","webpack://thorviz/./src/helpers/EventTypes.js","webpack://thorviz/./src/components/parts/FPSCounter.vue?9287","webpack://thorviz/./src/helpers/MathUtil.js","webpack://thorviz/./src/helpers/physics/PhysicalObject.js","webpack://thorviz/./src/visual/shader/billboard.vert","webpack://thorviz/./src/visual/shader/node_obj_2.frag","webpack://thorviz/./src/helpers/TextBillboard.js","webpack://thorviz/./src/helpers/NodeEvent.js","webpack://thorviz/./src/helpers/THORUtil.js","webpack://thorviz/./src/helpers/data/NodeInfo.js","webpack://thorviz/./src/visual/NodeObject.js","webpack://thorviz/./src/helpers/physics/Simulation.js","webpack://thorviz/./src/visual/TitleLabel3D.js","webpack://thorviz/./src/visual/modes/ModeBase.js","webpack://thorviz/./src/helpers/physics/Attractor.js","webpack://thorviz/./src/helpers/physics/AttractorShape.js","webpack://thorviz/./src/helpers/physics/TCLogoShape.js","webpack://thorviz/./src/visual/modes/ModeNormal.js","webpack://thorviz/./src/visual/modes/ModeStatus.js","webpack://thorviz/./src/helpers/physics/CirclePack.js","webpack://thorviz/./src/helpers/data/IPAddressInfo.js","webpack://thorviz/./src/visual/modes/ModeProvider.js","webpack://thorviz/./src/helpers/data/Version.js","webpack://thorviz/./src/visual/modes/ModeVersion.js","webpack://thorviz/./src/visual/modes/ModeBond.js","webpack://thorviz/./src/visual/shader/globe_atmo_textured.frag","webpack://thorviz/./src/visual/shader/standard.vert","webpack://thorviz/./src/visual/modes/ModeGeo.js","webpack://thorviz/./src/visual/NodeGroup.js","webpack://thorviz/./src/helpers/data/NodeTracker.js","webpack://thorviz/./src/helpers/data/NodeSet.js","webpack://thorviz/./src/helpers/data/URLDataSource.js","webpack://thorviz/./src/helpers/data/Storage.js","webpack://thorviz/./src/visual/MainScene.js","webpack://thorviz/./src/visual/shader/bg_smoke.frag","webpack://thorviz/./src/visual/helpers/ScreenQuad.js","webpack://thorviz/./src/visual/helpers/Background.js","webpack://thorviz/./src/components/parts/ControlPanel.vue","webpack://thorviz/./src/components/parts/ControlPanel.vue?8974","webpack://thorviz/./src/components/NodeDetailsWindow.vue","webpack://thorviz/./src/components/NodeDetailsWindow.vue?1c42","webpack://thorviz/./src/visual/CameraController.js","webpack://thorviz/./src/components/parts/LoadingIndicator.vue","webpack://thorviz/./src/components/parts/LoadingIndicator.vue?a62b","webpack://thorviz/./src/visual/helpers/TrailRenderer.js","webpack://thorviz/./src/visual/helpers/TrailTesting.js","webpack://thorviz/./src/visual/TrailTestScene.js","webpack://thorviz/./src/visual/NodeObjTestScene.js","webpack://thorviz/./src/components/MainScreen.vue?8f35","webpack://thorviz/./src/App.vue?7ccd","webpack://thorviz/./src/main.js","webpack://thorviz/webpack/bootstrap","webpack://thorviz/webpack/runtime/chunk loaded","webpack://thorviz/webpack/runtime/compat get default export","webpack://thorviz/webpack/runtime/define property getters","webpack://thorviz/webpack/runtime/global","webpack://thorviz/webpack/runtime/hasOwnProperty shorthand","webpack://thorviz/webpack/runtime/make namespace object","webpack://thorviz/webpack/runtime/node module decorator","webpack://thorviz/webpack/runtime/jsonp chunk loading","webpack://thorviz/webpack/startup"],"sourcesContent":["<template>\n    <MainScreen></MainScreen>\n</template>\n\n<script>\nimport MainScreen from \"@/components/MainScreen\";\nimport {preloadFont} from \"troika-three-text\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'App',\n    components: {\n        MainScreen,\n    },\n    data() {\n        return {}\n    },\n    computed: {},\n    created() {\n        document.title = 'THORViz'\n        this.preloading()\n    },\n    methods: {\n        preloading() {\n            preloadFont(\n                {\n                    font: Config.Font.Main,\n                    characters: 'abcdefghijklmnopqrstuvwxyz1234567890'\n                },\n                () => {\n                    console.log('font loading done')\n                }\n            )\n        }\n    }\n}\n</script>\n\n<style>\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: normal;\n    src: local('Norse'), url('../public/fonts/Norse-KaWl.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'Norse';\n    font-style: normal;\n    font-weight: bold;\n    src: local('Norse-Bold'), url('../public/fonts/NorseBold-2Kge.otf') format('opentype');\n}\n\n@font-face {\n    font-family: 'EXO2';\n    src: url('../public/fonts/Exo2-VariableFont_wght.ttf') format('truetype');\n}\n\n@supports(padding:max(0px)) {\n    body, header, footer {\n        padding-left: min(0vmin, env(safe-area-inset-left));\n        padding-right: min(0vmin, env(safe-area-inset-right));\n    }\n}\n\nhtml, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: 'EXO2', monospace;\n    background: black;\n    color: turquoise;\n}\n\na {\n    color: turquoise;\n}\n\na:visited {\n    text-decoration: none;\n}\n\n</style>\n","<template>\n    <div class=\"container\">\n        <!-- 3D -->\n        <div class=\"canvas-container\">\n            <canvas\n                ref=\"canvas\"\n                class=\"canvas-full\"\n                tabindex=\"1\"\n                @keypress.prevent=\"onKeyDown\"\n                @mousemove=\"onMouseMove\"\n                @mouseenter=\"onMouseEnter\"\n                @mouseleave=\"onMouseLeave\"\n                @click.prevent=\"onClick\"\n            >\n            </canvas>\n            <FPSCounter\n                v-show=\"showFps\"\n                ref=\"fps\"\n            >\n            </FPSCounter>\n\n            <LoadingIndicator v-if=\"isLoading\"></LoadingIndicator>\n\n            <ControlPanel @mode-selected=\"setSceneMode\" v-if=\"fullyLoaded\"></ControlPanel>\n        </div>\n\n        <!-- UI -->\n        <div class=\"ui-container\">\n            <keep-alive>\n                <NodeDetailsWindow\n                    v-if=\"nodeDetailsVisible\"\n                    :node=\"nodeToViewDetails\"\n                    :node-set=\"nodeSet\"\n                    :is-left=\"nodeDetailsIsLeft\"\n                    @close=\"onCloseDetails\">\n                </NodeDetailsWindow>\n            </keep-alive>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\nimport \"@/css/common.css\"\nimport * as THREE from \"three\"\nimport {Config} from \"@/config\";\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport {UnrealBloomPass} from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport FPSCounter from \"@/components/parts/FPSCounter\";\nimport {MainScene} from \"@/visual/MainScene\";\nimport TWEEN from \"tween.js\";\nimport {Background} from \"@/visual/helpers/Background\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport ControlPanel from \"@/components/parts/ControlPanel\";\nimport NodeDetailsWindow from \"@/components/NodeDetailsWindow\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport {CameraController} from \"@/visual/CameraController\";\nimport LoadingIndicator from \"@/components/parts/LoadingIndicator\";\nimport _ from \"lodash\";\nimport {shallowRef} from \"vue\";\nimport {TrailTestScene} from \"@/visual/TrailTestScene\";\nimport {NodeObjTestScene} from \"@/visual/NodeObjTestScene\";\n\nexport default {\n    name: 'MainScreen',\n    components: {LoadingIndicator, NodeDetailsWindow, ControlPanel, FPSCounter},\n    props: {},\n\n    data() {\n        return {\n            isLoading: true,\n\n            showFps: Config.Debug.ShowFPS,\n\n            mouseEnterX: 0,\n            mouseEnterY: 0,\n\n            tickCounter: 0,\n\n            sceneMode: 'normal',\n\n            fullyLoaded: false,\n\n            nodeDetailsVisible: false,\n            nodeDetailsIsLeft: true,\n            nodeToViewDetails: new NodeInfo(),\n            zoomedToNode: false,\n\n            nodeSet: shallowRef(),\n        }\n    },\n\n    methods: {\n        onKeyDown(event) {\n            if (event.code === 'KeyR') {\n                this.cameraController.reset()\n            } else if (event.code === 'KeyF') {\n                this.showFps = !this.showFps\n            } else if (event.code === 'KeyH') {\n                console.log('help?')\n            }\n            // event.target.blur();\n        },\n\n        choseWindowSide(mouseEvent) {\n            this.nodeDetailsIsLeft = !(mouseEvent.clientX < window.innerWidth * 0.5)\n        },\n\n        onMouseMove(event) {\n            const x = event.clientX\n            const y = event.clientY\n            if (!this.mouseEnterX) {\n                this.mouseEnterX = x\n                this.mouseEnterY = y\n                return\n            }\n            const scale = Config.Controls.Camera.MouseMoveStrength\n            const dx = this.mouseEnterX - x\n            const dy = this.mouseEnterY - y\n            this.mouseEnterX = x\n            this.mouseEnterY = y\n            this.cameraController.controls.rotate(dx * scale, dy * scale)\n\n            const pickIntersection = this._pickObject(event)\n            if(pickIntersection) {\n                const pickedName = pickIntersection?.object?.name\n                this.content.nodeGroup.setElevatedNode(pickedName)\n\n                this.choseWindowSide(event)\n\n                if (!this.zoomedToNode) {\n                    this.nodeDetailsVisible = !!pickedName\n                    if (this.nodeDetailsVisible) {\n                        this.nodeToViewDetails = this.content.findNodeByAddress(pickedName)\n                    }\n                }\n            } else if(!this.zoomedToNode) {\n                this.nodeDetailsVisible = false\n                // this.nodeToViewDetails = this.content.findNodeByAddress(null)\n            }\n        },\n\n        onMouseEnter(event) {\n            this.mouseEnterX = event.clientX\n            this.mouseEnterY = event.clientY\n        },\n\n        onMouseLeave() {\n        },\n\n        _pickObject(event, thoughtful = false) {\n            if (!this.raycaster || !this.content.nodeGroup) {\n                return null\n            }\n\n            const pickPosition = this.getCanvasRelativePosition(event)\n\n            // cast a ray through the frustum\n            this.raycaster.setFromCamera(pickPosition, this.cameraController.camera);\n            // get the list of objects the ray intersected\n            const intersectedObjects = this.raycaster.intersectObjects(this.content.nodeGroup.holder.children, true);\n            if (thoughtful) {\n                console.log('Objects hit by the ray caster: ' + intersectedObjects.length)\n            }\n\n            const namedObjects = _.filter(intersectedObjects, o => o.object.name && o.object.name !== '')\n            return namedObjects.length ? namedObjects[0] : null\n        },\n\n        onClick(event) {\n            const pickedObject = this._pickObject(event, true)\n            if (pickedObject && pickedObject.object) {\n                const nodeAddress = pickedObject.object.name\n                if (nodeAddress && nodeAddress.startsWith('thor')) {\n                    this.choseWindowSide(event)\n                    this._onPickNodeObject(nodeAddress)\n                }\n            } else {\n                this.nodeDetailsVisible = false\n                this.zoomedToNode = false\n                this.cameraController.restoreCamera()\n            }\n        },\n\n        _onPickNodeObject(nodeAddress) {\n            console.log('Picked node:', nodeAddress)\n            this.content.pick(nodeAddress)\n\n            this.nodeToViewDetails = this.content.findNodeByAddress(nodeAddress)\n            this.nodeDetailsVisible = true\n\n            const nodeObj = this.content.nodeGroup.getByName(nodeAddress)\n            if (nodeObj) {\n                this.zoomedToNode = true\n                this.cameraController.cameraLookAtNode(nodeObj, this.content.nodeGroup.isCurrentModeFlat)\n            }\n        },\n\n        getCanvasRelativePosition(event) {\n            const rect = this.canvas.getBoundingClientRect()\n            const pos = {\n                x: event.clientX - rect.left,\n                y: event.clientY - rect.top,\n            }\n            return {\n                x: (pos.x / this.canvas.clientWidth) * 2 - 1,\n                y: -(pos.y / this.canvas.clientHeight) * 2 + 1\n            }\n        },\n\n        resizeRendererToDisplaySize() {\n            const renderer = this.renderer\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n\n            const needResize = this.composer._width !== width || this.composer._height !== height;\n            if (needResize) {\n                renderer.setSize(width, height, false);\n                if (this.bloomPass) {\n                    this.bloomPass.setSize(width, height);\n                }\n                this.composer.setSize(width, height);\n                if (this.bg) {\n                    this.bg.setSize(width, height)\n                }\n\n                this.cameraController.onResize()\n            }\n\n            return needResize;\n        },\n\n        render() {\n            // try {\n            let delta = this.clock.getDelta();\n\n            if (document.visibilityState === 'hidden') {\n                return\n            } else if (delta > 0.4) {\n                delta = 0.01\n            }\n\n            this.resizeRendererToDisplaySize(this.renderer)\n            TWEEN.update()\n            if(this.$refs.fps) {\n                this.$refs.fps.update(delta, this.scene)\n            }\n            this.cameraController.update(delta)\n            this.content.update(delta)\n            if (this.bg) {\n                this.bg.update(delta)\n            }\n            this.composer.render(delta)\n            // } catch (e) {\n            //     console.error('Render error! ' + e)\n            // }\n\n            requestAnimationFrame(this.render);\n        },\n\n        makeSkybox() {\n            if (Config.Scene.Background.Enabled) {\n                // this.bg = new Background(this.scene)\n                // this.bg = new BlackgroundStaticBox(this.scene, Config.Scene.Sky.SkyBox, Config.Scene.Sky.SkyBoxExt)\n                this.bg = new Background(this.scene)\n                this.bg.install()\n            }\n        },\n\n        makeRenderer(canvas) {\n            let renderer = this.renderer = new THREE.WebGLRenderer({\n                canvas,\n                antialias: false,\n                logarithmicDepthBuffer: Config.Renderer.LogZBuffer,\n            });\n\n            if (devicePixelRatio) {\n                console.log(`Renderer: Setting devicePixelRatio = ${devicePixelRatio}.`)\n                renderer.setPixelRatio(devicePixelRatio)\n            }\n\n            const renderScene = new RenderPass(this.scene, this.cameraController.camera);\n\n            this.composer = new EffectComposer(renderer);\n            this.composer.addPass(renderScene);\n\n            const bloomCfg = Config.Effects.Bloom\n            if (bloomCfg.Enabled) {\n                this.bloomPass = new UnrealBloomPass(\n                    new THREE.Vector2(window.innerWidth, window.innerHeight),\n                    bloomCfg.Strength,\n                    bloomCfg.Radius,\n                    bloomCfg.Threshold)\n                this.composer.addPass(this.bloomPass);\n            }\n        },\n\n        buildScene() {\n            this.scene.add(this.cameraController.camera)\n            this.makeSkybox()\n\n            const mode = Config.Scene.DebugMode\n            if(mode === 'nodeobj') {\n                this.content = new NodeObjTestScene(this.scene, this.cameraController.camera)\n            } else if(mode === 'trail') {\n                this.content = new TrailTestScene(this.scene, this.cameraController.camera)\n            } else {\n                this.content = new MainScene(this.scene, this.cameraController.camera)\n            }\n        },\n\n        setSceneMode(mode) {\n            this.sceneMode = mode\n            if (this.content.nodeGroup) {\n                this.content.nodeGroup.mode = mode\n            }\n        },\n\n        onFullyLoaded() {\n            console.log('fully loaded! removing loading screen...')\n            this.isLoading = false\n            this.fullyLoaded = true\n        },\n\n        onDataArrived(nodeSet) {\n            this.nodeSet = nodeSet\n        },\n\n        onCloseDetails() {\n            this.zoomedToNode = false\n            this.nodeDetailsVisible = false\n            this.nodeToViewDetails = new NodeInfo()\n            this.cameraController.restoreCamera()\n        },\n    },\n\n    mounted() {\n        this.canvas = this.$refs.canvas\n\n        this.clock = new THREE.Clock()\n        this.scene = new THREE.Scene()\n\n        this.cameraController = new CameraController(this.canvas)\n        this.makeRenderer(this.canvas)\n        this.resizeRendererToDisplaySize()\n        this.buildScene()\n\n        this.raycaster = new THREE.Raycaster()\n        emitter.on(EventTypes.FullyLoaded, this.onFullyLoaded)\n        emitter.on(EventTypes.DataSourceTick, this.onDataArrived)\n\n        requestAnimationFrame(this.render);\n    },\n\n    unmounted() {\n        this.content.dispose()\n        this.cameraController.dispose()\n        emitter.off(EventTypes.FullyLoaded)\n        emitter.off(EventTypes.DataSourceTick)\n    }\n}\n\n</script>\n\n<style>\n\n.container {\n    position: relative;\n}\n\n.canvas-container {\n    position: absolute;\n    z-index: 8;\n}\n\n.ui-container {\n    position: absolute;\n    z-index: 10;\n}\n\n.canvas-full {\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n}\n\ncanvas {\n}\n\n*:focus {\n    outline: none;\n}\n\n</style>\n","const IsProduction = process.env.NODE_ENV !== 'development'\nconsole.log('Env = ', process.env.NODE_ENV)\n\nconst Live = true\n\nexport const Config = {\n    DataSource: {\n        NodesURL: (Live ?\n            'https://thornode.ninerealms.com' :\n            'http://localhost:8080/data/samplenodes.json'),\n\n        Nodes: {\n            PollPeriod: 3000.0, // msec\n        },\n\n        LastBlock: {\n            PollPeriod: 10000.0, // msec\n        },\n\n        ReactRandomDelay: 500.0, // msec\n        NodeJuggler: {\n            Enabled: !IsProduction\n        }\n    },\n    Font: {\n        // Main: 'fonts/NorseBold-2Kge.otf'\n        Main: 'fonts/Exo2-VariableFont_wght.ttf'\n    },\n    Effects: {\n        Bloom: {\n            Enabled: true,\n            Strength: 0.65,\n            Threshold: 0.5,\n            Radius: 1.2,\n        }\n    },\n    Controls: {\n        Camera: {\n            Distance: {\n                Min: 800,\n                Max: 2900,\n                Start: 2000,\n            },\n            AzimuthAngleLimit: 180,\n            PolarAngleLimit: 180,\n            MouseMoveStrength: 0.0002,\n\n            Animation: {\n                Duration: 500.0,\n                DistanceWhenZoomed: 300.0,\n                Shift: {\n                    X: -200.0\n                }\n            }\n        },\n    },\n    Scene: {\n        DebugMode: false, // 'nodeobj',\n\n        InitialMode: IsProduction ? 'normal' : 'bond',\n\n        Background: {\n            Enabled: IsProduction,\n        },\n        Sky: {\n            SkyBox: 'texture/skybox/star',\n            SkyBoxExt: 'png',\n        },\n        NodeObject: {\n            Simple: false,\n            PlaneScale: 1.0,\n            MinRadius: 12.0,\n            MaxScale: 80.0,\n            MinScale: 10.0,\n            ScaleFactor: 1.0,\n            RadiusFactor: 0.3,\n            Animation: {\n                // todo use this configs!\n                ReactStatus: {\n                    DurationIn: 500, // ms\n                    DurationOut: 1250,\n                    BloatScale: 1.5,\n                },\n                ReactSlash: {\n                    Force: 100.0,\n                    RedDuration: 150.0, // ms\n                }\n            }\n        },\n        Globe: {\n            Enabled: true,\n            Details: 64,\n            Radius: 600.0,\n            NodeElevation: 20.0,\n            TextureMap: 'texture/globe/2k_earth_nightmap.jpeg',\n            // TextureMap: 'texture/globe/2k_earth_daymap.jpeg',\n            Clouds: {\n                ElevationScale: 1.005,\n                Opacity: 0.05,\n                Texture: 'texture/globe/earth_atmo.jpeg',\n            },\n            Atmosphere: {\n                ElevationScale: 1.15,\n            },\n            InnerAtmosphere: {\n                Enabled: true,\n            }\n        },\n    },\n    Physics: {\n        BaseForce: 3500.0,\n        RepelForce: 200.0, // 2000\n        Startup: {\n            SimulationSteps: 10,\n            DeltaTime: 0.1\n        },\n        BaseFriction: 0.07, //0.04\n        MaxSpeedSq: Math.pow(15000, 2),\n        Attractor: {\n            Flat: {\n                DeltaZ: 1.0,\n            }\n        },\n\n    },\n    Debug: {\n        ShowFPS: false,\n    },\n    Renderer: {\n        LogZBuffer: true,\n        // LogZBuffer: false,\n    },\n}\n\nexport const Colors = {\n    LightningBlue: 0x00CCFF,\n    YggdrasilGreen: 0x33FF99,\n    MidgardTurqoise: 0x23DCC8,\n    NightBlack: 0x101921\n}\n","<template>\n    <div class=\"fps-counter\">\n        <span><strong>{{ Number(fps).toFixed(2) }}</strong> FPS, {{ objCount }} objects</span>\n        <span class=\"activity\" v-show=\"activityIndicator\">•</span>\n    </div>\n</template>\n\n<script>\n\nimport {countObjects} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\n\nexport default {\n    name: 'FPSCounter',\n    props: {\n        updatePeriod: {\n            type: Number,\n            default: 1.0\n        }\n    },\n    data() {\n        return {\n            fps: 0.0,\n            objCount: 0,\n            activityIndicator: false,\n            lastUpdateTime: 0.0\n        }\n    },\n    methods: {\n        pokeActivity() {\n            this.activityIndicator = true\n            setTimeout(() => {\n                this.activityIndicator = false\n            }, 100)\n        },\n\n        update(delta, scene) {\n            if (delta > 0 && +Date.now() - this.updatePeriod * 1000 > this.lastUpdateTime) {\n                this.fps = 1.0 / delta\n                this.objCount = countObjects(scene)\n                this.lastUpdateTime = +Date.now()\n            }\n        },\n    },\n    unmounted() {\n        emitter.off(EventTypes.Activity, this.pokeActivity)\n    },\n    mounted() {\n        emitter.on(EventTypes.Activity, this.pokeActivity)\n    }\n}\n\n</script>\n\n<style scoped>\n\n.fps-counter {\n    text-align: left;\n    font-size: 14pt;\n    color: whitesmoke;\n    position: absolute;\n    margin: 10px;\n    left: 0;\n    top: 0;\n}\n</style>","import * as THREE from \"three\";\n\nexport function countObjects(parent) {\n    let numOfMeshes = 0;\n    parent.traverse(function () {\n        numOfMeshes++;\n    });\n    return numOfMeshes\n}\n\nexport function clearObject(obj) {\n    if (obj) {\n        obj.remove.apply(obj, obj.children);\n    }\n}\n\nexport function longLatTo3D(long, lat, r = 1) {\n    // const phi = (lat + 180.0) * PI180\n    // const theta = (long + 180.0) / PI180\n    // const x = -r * Math.cos(phi) * Math.cos(theta)\n    // const y = r * Math.cos(phi) * Math.sin(theta)\n    // const z = r * Math.sin(phi)\n\n    const phi = Math.PI * (0.5 - (lat / 180));\n    const theta = Math.PI * (0.5 + long / 180);\n    const spherical = new THREE.Spherical(r, phi, theta);\n    return new THREE.Vector3().setFromSpherical(spherical);\n}\n\nexport function distanceXY(v1, v2) {\n    const dx = v1.x - v2.x\n    const dy = v1.y - v2.y\n    return Math.sqrt(\n        dx * dx + dy * dy\n    )\n}\n","import mitt from \"mitt\";\n\nexport const EventTypes = {\n    FullyLoaded: 'fully_loaded',\n    DataSourceTick: 'data_source_tick',\n    Activity: 'activity',\n}\n\nexport const emitter = mitt();\n\nexport function dbgEmmitAfter(name, after_ms = 1000) {\n    setTimeout(() => {\n        emitter.emit(name)\n    }, after_ms)\n}\n\nexport function dbgSimulateLoaded() {\n    dbgEmmitAfter(EventTypes.FullyLoaded, 100)\n}\n","import { render } from \"./FPSCounter.vue?vue&type=template&id=27eb1626&scoped=true\"\nimport script from \"./FPSCounter.vue?vue&type=script&lang=js\"\nexport * from \"./FPSCounter.vue?vue&type=script&lang=js\"\n\nimport \"./FPSCounter.vue?vue&type=style&index=0&id=27eb1626&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27eb1626\"]])\n\nexport default __exports__","import {Vector3} from \"three\";\nimport _ from \"lodash\";\nimport numbro from 'numbro';\n\nexport function defaultValue(x, defaultValue) {\n    return x === undefined ? defaultValue : x\n}\n\nexport function dec2hex(dec) {\n    return dec.toString(16).padStart(2, \"0\")\n}\n\nexport class Random {\n    static getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    static getRandomFloat(min, max) {\n        return Math.random() * (max - min) + min\n    }\n\n    static getRandomSample(array) {\n        if (!array) {\n            return null\n        }\n        const index = Random.getRandomInt(array.length)\n        return array[index]\n    }\n\n    static removeRandomItem(array) {\n        if (Math.random() > 0.5) {\n            const index = Random.getRandomInt(array.length)\n            array.splice(index, 1)\n        }\n        return array\n    }\n\n    static randomVector({xMin, xMax, yMin, yMax, zMin, zMax}) {\n        xMin = defaultValue(+xMin, -10)\n        xMax = defaultValue(+xMax, 10)\n        yMin = defaultValue(+yMin, -10)\n        yMax = defaultValue(+yMax, 10)\n        zMin = defaultValue(+zMin, -10)\n        zMax = defaultValue(+zMax, 10)\n\n        return new Vector3(\n            Random.getRandomFloat(xMin, xMax),\n            Random.getRandomFloat(yMin, yMax),\n            Random.getRandomFloat(zMin, zMax),\n        )\n    }\n\n    static randomOnCircle(r = 100, cx = 0, cy = 0) {\n        const phase = Random.getRandomFloat(0, 2 * Math.PI)\n        return new Vector3(\n            cx + r * Math.cos(phase),\n            cy + r * Math.sin(phase)\n        )\n    }\n\n    static getRandomIntRange(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;  // [min, max)\n    }\n\n    // generateId :: Integer -> String\n    static generateId(len) {\n        const arr = new Uint8Array((len || 20) / 2)\n        window.crypto.getRandomValues(arr)\n        return Array.from(arr, dec2hex).join('')\n    }\n}\n\nexport class Section {\n    constructor(p1, p2) {\n        this.p1 = p1\n        this.p2 = p2\n    }\n\n    get dx() {\n        return this.p2.x - this.p1.x\n    }\n\n    get dy() {\n        return this.p2.y - this.p1.y\n    }\n\n    whichSide(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n        return Math.sign(A * C - B * D);\n    }\n\n    get center() {\n        return {\n            x: 0.5 * (this.p1.x + this.p2.x),\n            y: 0.5 * (this.p1.y + this.p2.y)\n        }\n    }\n\n    nearestPoint(x, y) {\n        const A = x - this.p1.x;\n        const B = y - this.p1.y;\n        const C = this.dx;\n        const D = this.dy;\n\n        const dot = A * C + B * D;\n        const len_sq = C * C + D * D;\n        let param = -1;\n        if (len_sq !== 0) {\n            param = dot / len_sq;\n        }\n\n        if (param < 0) {\n            x = this.p1.x\n            y = this.p1.y\n        } else if (param > 1) {\n            x = this.p2.x\n            y = this.p2.y\n        } else {\n            x = this.p1.x + param * C;\n            y = this.p1.y + param * D;\n        }\n        return {x, y}\n    }\n\n    pDistance(xo, yo) {\n        const nearestPoint1 = this.nearestPoint(xo, yo)\n        return new Section(nearestPoint1, {x: xo, y: yo}).length\n    }\n\n    get length() {\n        const dx = this.dx\n        const dy = this.dy\n        return Math.sqrt(dx * dx + dy * dy)\n    }\n}\n\nexport class Util {\n    static clamp(x, xMin, xMax) {\n        return Math.min(+xMax, Math.max(+xMin, +x))\n    }\n\n    static centerOf(group) {\n        if (!group || !group.length) {\n            return\n        }\n        let sumX = _.sumBy(group, item => item.x)\n        let sumY = _.sumBy(group, item => item.y)\n        return {\n            x: sumX / group.length,\n            y: sumY / group.length\n        }\n    }\n\n    static _signHelper(p1, p2, p3) {\n        return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n    }\n\n    static pointInTriangle(pt, threePts) {\n        const [v1, v2, v3] = threePts\n        const d1 = Util._signHelper(pt, v1, v2);\n        const d2 = Util._signHelper(pt, v2, v3);\n        const d3 = Util._signHelper(pt, v3, v1);\n\n        const hasNeg = (d1 < 0) || (d2 < 0) || (d3 < 0);\n        const hasPos = (d1 > 0) || (d2 > 0) || (d3 > 0);\n\n        return !(hasNeg && hasPos);\n    }\n}\n\nexport function shortNumber(x, mantissa = 2, postFix = '') {\n    return numbro(x).format({\n        average: true,\n        mantissa,\n    }) + postFix\n}\n\nexport function fullNumber(x, postFix) {\n    return numbro(x).format({\n        thousandSeparated: true\n    }) + postFix\n}\n\nexport const RUNE = 'Rune'\n\nexport function shortRune(x, mantissa = 2) {\n    return shortNumber(x, mantissa, ' ' + RUNE)\n}\n\nexport function fullRune(x) {\n    return fullNumber(x, ' ' + RUNE)\n}\n\nexport function smoothStep(min, max, value) {\n    var x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}","import {Vector3} from \"three\";\nimport {Util} from \"@/helpers/MathUtil\";\nimport {Config} from \"@/config\";\n\nexport class PhysicalObject {\n    constructor() {\n        this.mass = 1.0\n        this.force = new Vector3()\n        this.velocity = new Vector3()\n        this.friction = 0.0\n        this.attractors = []\n    }\n\n    update(dt) {\n        if (this.attractors.forEach) {\n            this.attractors.forEach(attr => attr.applyForce(this))\n        } else if (this.attractors.applyForce) {\n            this.attractors.applyForce(this)\n        }\n\n        const acceleration = this.force.multiplyScalar(this.mass)\n        this.velocity.copy(this.velocity.clone().add(acceleration.multiplyScalar(dt)))\n        this.velocity.multiplyScalar(Util.clamp(1.0 - this.friction, 0.0, 1.0))\n        if (this.velocity.lengthSq() > Config.Physics.MaxSpeedSq) {\n            this.velocity.setLength(Math.sqrt(Config.Physics.MaxSpeedSq))\n        }\n        this.realObject.position.add(this.velocity.clone().multiplyScalar(dt))\n    }\n\n    nullifyForce() {\n        this.force.set(0.0, 0.0, 0.0)\n    }\n\n    get radius() {\n        return 1.0\n    }\n\n    applyForceTo(direction, force) {\n        this.force.add(direction.copy().multiplyScalar(force))\n    }\n\n    get realObject() {\n        return this\n    }\n\n    repel(physObj, forceMult = 100.0) {\n        if (physObj === this) {\n            return\n        }\n\n        const thisPos = this.realObject.position\n        const otherPos = physObj.realObject.position\n\n        const d = thisPos.distanceTo(otherPos)\n        const minDistance = (this.radius + physObj.radius)\n        if (d < minDistance) {\n            const lineDir = thisPos\n                .clone()\n                .sub(otherPos)\n                .normalize()\n                .multiplyScalar(forceMult)\n            this.force.add(lineDir)\n            physObj.force.add(lineDir.negate())\n        }\n    }\n\n    get boundingBox() {\n        const x = this.realObject.position.x\n        const y = this.realObject.position.y\n        const r = this.radius\n        return {\n            minX: x - r,\n            minY: y - r,\n            maxX: x + r,\n            maxY: y + r,\n        }\n    }\n\n    shootOut(force = 1) {\n        const velocity = this.o.position.clone().normalize().multiplyScalar(force)\n        this.velocity.copy(velocity)\n    }\n}","export default \"#ifdef USE_LOGDEPTHBUF\\n#ifdef USE_LOGDEPTHBUF_EXT\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#else\\nuniform float logDepthBufFC;\\n#endif\\n#endif\\n\\n// optional: pass 2D rotation angle as an uniform\\nuniform float rotation;\\n// optional: pass 2D center point as an uniform\\nuniform vec2 center;\\n\\nvarying vec2 vUv;\\n\\n// optional: use this define to scale the model according to distance from the camera\\n#define USE_SIZEATTENUATION\\n\\n// [skipped includes]\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    // discard rotation and scale\\n    vec4 mvPosition = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);\\n\\n    // extract model's scale\\n    vec2 scale;\\n    scale.x = length(vec3(modelMatrix[0].x, modelMatrix[0].y, modelMatrix[0].z));\\n    scale.y = length(vec3(modelMatrix[1].x, modelMatrix[1].y, modelMatrix[1].z));\\n\\n    // if not defined, keep model the same size regardless of distance from the camera\\n    #ifndef USE_SIZEATTENUATION\\n    bool isPerspective = isPerspectiveMatrix(projectionMatrix);\\n    if (isPerspective) scale *= - mvPosition.z;\\n    #endif\\n\\n    // if center is not passed as uniform, create vec2 center = vec2(0.0);\\n\\n    // aligned with the camera [and scaled]\\n    vec2 alignedPosition = (position.xy - center) * scale;\\n\\n    // if rotation is not passed as uniform, skip the next block\\n\\n    // rotate 2D\\n    vec2 rotatedPosition;\\n    rotatedPosition.x = cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y;\\n    rotatedPosition.y = sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y;\\n\\n    // billboard\\n    mvPosition.xy += rotatedPosition;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    // [skipped includes]\\n    #ifdef USE_LOGDEPTHBUF\\n        #ifdef USE_LOGDEPTHBUF_EXT\\n    vFragDepth = 1.0 + gl_Position.w;\\n//    vIsPerspective = float(isPerspectiveMatrix(projectionMatrix));\\n    vIsPerspective = 1.0;\\n        #else\\n//    if (isPerspectiveMatrix(projectionMatrix)) {\\n        gl_Position.z = log2(max(EPSILON, gl_Position.w + 1.0)) * logDepthBufFC - 1.0;\\n        gl_Position.z *= gl_Position.w;\\n//    }\\n        #endif\\n    #endif\\n}\";","export default \"// port from http://glslsandbox.com/e#8625.0 by Duke\\n// Fireball\\n// Awd\\n// @AlexWDunn\\n\\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\nuniform float logDepthBufFC;\\nvarying float vFragDepth;\\nvarying float vIsPerspective;\\n#endif\\n\\nuniform float time;\\n\\nuniform float saturation;\\nuniform float transitionShininess;\\nuniform float rust;\\n\\nuniform vec3 color;\\n\\nvarying vec2 vUv;\\n\\n#define saturate(oo) clamp(oo, 0.0, 1.0)\\n\\n// Quality Settings\\n#define MarchSteps 4\\n// Scene Settings\\n#define ExpPosition vec3(0.0)\\n#define Radius 1.0\\n#define Background vec4(0.0, 0.0, 0.0, 0.0)\\n// Noise Settings\\n#define NoiseSteps 1\\n#define NoiseAmplitude 0.06\\n//#define NoiseFrequency 4.0\\n#define NoiseFrequency 2.0\\n#define Animation vec3(0.0, -3.0, 0.5)\\n\\n// Colour Gradient\\n#define Color1 vec4(1.0, 1.0, 1.0, 1.0)\\n#define Color2 vec4(0.2, 0.8, 1.0, 1.0)\\n#define Color3 vec4(0.2, 0.03, 1.0, 1.0)\\n#define Color4 vec4(0.05, 0.02, 0.02, 0.3)\\n\\nconst float zoom = 2.8f;// 2.5 full\\n\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n//\\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\\nvec4 permute(vec4 x) { return mod289(((x * 34.0) + 1.0) * x); }\\nvec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }\\n\\nfloat snoise(vec3 v)\\n{\\n    const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\\n    const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\\n    // First corner\\n    vec3 i = floor(v + dot(v, C.yyy));\\n    vec3 x0 = v - i + dot(i, C.xxx);\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min(g.xyz, l.zxy);\\n    vec3 i2 = max(g.xyz, l.zxy);\\n    vec3 x1 = x0 - i1 + C.xxx;\\n    vec3 x2 = x0 - i2 + C.yyy;// 2.0*C.x = 1/3 = C.y\\n    vec3 x3 = x0 - D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\\n    // Permutations\\n    i = mod289(i);\\n    vec4 p = permute(permute(permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\\n    // Gradients: 7x7 points over a square, mapped onto an octahedron.\\n    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n    float n_ = 0.142857142857;// 1.0/7.0\\n    vec3 ns = n_ * D.wyz - D.xzx;\\n    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);//  mod(p,7*7)\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_);// mod(j,N)\\n    vec4 x = x_ * ns.x + ns.yyyy;\\n    vec4 y = y_ * ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n    vec4 b0 = vec4(x.xy, y.xy);\\n    vec4 b1 = vec4(x.zw, y.zw);\\n    vec4 s0 = floor(b0) * 2.0 + 1.0;\\n    vec4 s1 = floor(b1) * 2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n    vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\\n    vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\\n    vec3 p0 = vec3(a0.xy, h.x);\\n    vec3 p1 = vec3(a0.zw, h.y);\\n    vec3 p2 = vec3(a1.xy, h.z);\\n    vec3 p3 = vec3(a1.zw, h.w);\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\\n}\\n\\n\\n\\nfloat Turbulence(vec3 position, float minFreq, float maxFreq, float qWidth)\\n{\\n    float value = 0.0;\\n    float cutoff = clamp(0.5 / qWidth, 0.0, maxFreq);\\n    float fade;\\n    float fOut = minFreq;\\n    for (int i = NoiseSteps; i >= 0; i--)\\n    {\\n        if (fOut >= 0.5 * cutoff) break;\\n        fOut *= 2.0;\\n        value += abs(snoise(position * fOut)) / fOut;\\n    }\\n    fade = clamp(2.0 * (cutoff - fOut) / cutoff, 0.0, 1.0);\\n    value += fade * abs(snoise(position * fOut)) / fOut;\\n    return 1.0 - value;\\n}\\n\\nfloat SphereDist(vec3 position)\\n{\\n    return length(position - ExpPosition) - Radius;\\n}\\n\\nvec4 Shade(float distance)\\n{\\n    float c1 = clamp(distance * 5.0 + 0.5, 0.0, 1.0);\\n    float c2 = clamp(distance * 5.0, 0.0, 1.0);\\n    float c3 = clamp(distance * 3.4 - 0.5, 0.0, 1.0);\\n\\n    //    #define Color1 vec4(1.0, 1.0, 1.0, 1.0)   -- white\\n    //    #define Color2 vec4(0.2, 0.8, 1.0, 1.0) --- green\\n    //    #define Color3 vec4(0.2, 0.03, 1.0, 1.0)  -- blue\\n    //    #define Color4 vec4(0.05, 0.02, 0.02, 0.3) -- black transparent\\n\\n    vec4 original = vec4(color, 1.0);\\n    vec4 a = mix(Color1, Color3, c1);\\n    vec4 b = mix(a, Color4, c2);\\n    return mix(original, b, c3);\\n}\\n\\n// Draws the scene\\nfloat RenderScene(vec3 position, out float distance)\\n{\\n    float noise = Turbulence(position * NoiseFrequency + Animation * time, 0.1, 1.5, 0.03) * NoiseAmplitude;\\n    noise = clamp(abs(noise), 0.0, 1.0);\\n    distance = SphereDist(position) - noise;\\n    return noise;\\n}\\n\\n// Basic ray marching method.\\nvec4 March(vec3 rayOrigin, vec3 rayStep)\\n{\\n    vec3 position = rayOrigin;\\n    float distance;\\n    float displacement;\\n    for (int step = MarchSteps; step >= 0; --step)\\n    {\\n        displacement = RenderScene(position, distance);\\n        if (distance < 0.05) break;\\n        position += rayStep * distance;\\n    }\\n    return mix(Shade(displacement), Background, float(distance >= 0.5));\\n}\\n\\nbool IntersectSphere(vec3 ro, vec3 rd, vec3 pos, float radius, out vec3 intersectPoint)\\n{\\n    vec3 relDistance = (ro - pos);\\n    float b = dot(relDistance, rd);\\n    float c = dot(relDistance, relDistance) - radius * radius;\\n    float d = b * b - c;\\n    intersectPoint = ro + rd * (-b - sqrt(d));\\n    return d >= 0.0;\\n}\\n\\nvec2 fade(vec2 t) {return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);}\\n\\nfloat cnoise(vec2 P) {\\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n    Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\\n    vec4 ix = Pi.xzxz;\\n    vec4 iy = Pi.yyww;\\n    vec4 fx = Pf.xzxz;\\n    vec4 fy = Pf.yyww;\\n    vec4 i = permute(permute(ix) + iy);\\n    vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\\n    vec4 gy = abs(gx) - 0.5;\\n    vec4 tx = floor(gx + 0.5);\\n    gx = gx - tx;\\n    vec2 g00 = vec2(gx.x, gy.x);\\n    vec2 g10 = vec2(gx.y, gy.y);\\n    vec2 g01 = vec2(gx.z, gy.z);\\n    vec2 g11 = vec2(gx.w, gy.w);\\n    vec4 norm = 1.79284291400159 - 0.85373472095314 *\\n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\\n    g00 *= norm.x;\\n    g01 *= norm.y;\\n    g10 *= norm.z;\\n    g11 *= norm.w;\\n    float n00 = dot(g00, vec2(fx.x, fy.x));\\n    float n10 = dot(g10, vec2(fx.y, fy.y));\\n    float n01 = dot(g01, vec2(fx.z, fy.z));\\n    float n11 = dot(g11, vec2(fx.w, fy.w));\\n    vec2 fade_xy = fade(Pf.xy);\\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n    return 2.3 * n_xy;\\n}\\n\\nvec4 doRust(vec4 col, float rust, vec2 uv) {\\n    float noise = cnoise(uv * 9.0 + time * 0.1);\\n    float step = smoothstep(rust - 0.05, rust + 0.05, noise);\\n    float n = cnoise(uv * 10.0 + cnoise(vec2(time, uv.x))) + 0.3;\\n    return col * step + vec4(n * 0.5, 0.1, 0.1, col.a) * (1. - step);\\n}\\n\\nconst float circleThickness = 0.15;\\nconst float circleRadius = 0.78;\\n\\nvoid main()\\n{\\n    vec2 p = vUv * 2.0 - 1.0;\\n\\n    // camera\\n    vec3 ro = zoom * vec3(.7, .7, 0.0);\\n    vec3 ww = normalize(vec3(0.0, 0.0, 0.0) - ro);\\n    vec3 uu = normalize(cross(vec3(0.0, 1.0, 0.0), ww));\\n    vec3 vv = normalize(cross(ww, uu));\\n    vec3 rd = normalize(p.x * uu + p.y * vv + 1.5 * ww);\\n    //    vec3 rd = normalize(p.x*uu + p.y*vv + zoom_f * ww);\\n    vec4 col = Background;\\n    vec3 origin;\\n    if (IntersectSphere(ro, rd, ExpPosition, Radius + NoiseAmplitude * 6.0, origin))\\n    {\\n        col = March(origin, rd);\\n    }\\n\\n    // After FX\\n\\n    float d = length(p);\\n    if (saturation > 1.0) {\\n        //  1.0 - smoothstep(radius-borderThickness, radius, d);\\n        float t = 1.0 - smoothstep(0.0, circleRadius, abs(circleThickness - d));\\n        col = mix(col * saturation, vec4(0.9, 0.9, 1.0, 0.5), clamp(t, 0.0, 0.5));\\n    }\\n\\n    if (transitionShininess > 0.0) {\\n        vec4 shineColor = vec4(0.8, 0.9, 1.0, 1.0);\\n        col += shineColor * transitionShininess * clamp(1.0 - d * 0.9, 0.0, col.a);\\n    }\\n//\\n//    if (rust > 0.0) {\\n//\\n//    }\\n\\n    col = doRust(col, rust, p);\\n\\n    gl_FragColor = col;\\n\\n    // Z buffer\\n    #if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n    // Doing a strict comparison with == 1.0 can cause noise artifacts\\n    // on some platforms. See issue #17623.\\n    gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2(vFragDepth) * logDepthBufFC * 0.5;\\n    #endif\\n}\\n\";","import { createDerivedMaterial } from 'troika-three-utils'\n\nexport function createBillboardMaterial(baseMaterial, opts) {\n    return createDerivedMaterial(\n        baseMaterial,\n        Object.assign(\n            {\n                vertexMainOutro: `\n                    vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n                    vec3 scale = vec3(\n                      length(modelViewMatrix[0].xyz),\n                      length(modelViewMatrix[1].xyz),\n                      length(modelViewMatrix[2].xyz)\n                      );\n                    // size attenuation: scale *= -mvPosition.z * 0.2;\n                    mvPosition.xyz += position * scale;\n                    gl_Position = projectionMatrix * mvPosition;\n                    `\n            },\n            opts\n        )\n    )\n}\n","const EVENT_TYPE = Object.freeze({\n    CREATE: 'create',\n    DESTROY: 'destroy',\n\n    SLASH: 'slash',\n    IP_ADDRESS: 'ip_address',\n    STATUS: 'status',\n    VERSION: 'version',\n    FORCED_LEAVE: 'forced_to_leave',\n    REQUESTED_LEAVE: 'requested_to_leave',\n    AWARD: 'current_award',\n    BOND_CHANGE: 'bond',\n    OBSERVE_CHAIN: 'observe_chains',\n    ACTIVE_BLOCK_HEIGHT: 'active_block_height',\n})\n\nexport class NodeEvent {\n    constructor(type, node, prevNode, currValue, prevValue, nodeSet) {\n        this.type = type\n        this.node = node\n        this.prevNode = prevNode\n        this.currValue = currValue\n        this.prevValue = prevValue\n        this.nodeSet = nodeSet\n        this.isTramp = node ? node.address === '' : false\n    }\n\n    toString() {\n        const addr = this.node ? this.node.address : '?'\n        return `NodeEvent(${this.type}, ${addr}, ${this.currValue} => ${this.prevValue})`\n    }\n}\n\nNodeEvent.EVENT_TYPE = EVENT_TYPE\n","export const SEC_PER_BLOCK = 6.0\n\nexport const THOR_DECIMAL = Math.pow(10, 8)\nexport const THOR_DECIMAL_INV = 1.0 / THOR_DECIMAL\n\nexport function thorToFloat(x) {\n    return parseFloat(x) * THOR_DECIMAL_INV\n}\n","import {thorToFloat} from \"@/helpers/THORUtil\";\n\nexport class NodeInfo {\n    constructor(node) {\n        if (!node) {\n            node = {\n                status: 'Unknown',\n                jail: {},\n                bond_providers: {},\n                preflight_status: {},\n            }\n        }\n\n        this.address = node.node_address\n        this.status = node.status\n        this.bond = thorToFloat(node.bond)\n        this.activeBlockHeight = +node.active_block_height\n        this.bondAddress = node.bond_address\n        this.statusSince = +node.status_since\n        this.requestedToLeave = !!node.requested_to_leave\n        this.forcedToLeave = !!node.forced_to_leave\n        this.leaveHeight = +node.leave_height\n        this.IPAddress = node.ip_address\n        this.version = node.version\n        this.slashPoints = +node.slash_points\n        if(node.jail) {\n            this.jail = {\n                address: node.jail.node_address,\n                releaseHeight: +node.jail.release_height,\n                reason: node.jail.reason,\n            }\n        }\n        this.currentAward = thorToFloat(node.current_award)\n\n        this.observeChains = {}\n\n        if (node['observe_chains']) {\n            for (let {chain, height} of node['observe_chains']) {\n                this.observeChains[chain] = +height\n            }\n            // no TERRA any more...\n            delete this.observeChains['TERRA']\n        }\n\n        if(node.preflight_status) {\n            this.preflightStatus = {\n                status: node.preflight_status.status,\n                reason: node.preflight_status.reason,\n                code: +node.preflight_status.code\n            }\n        }\n\n        if(node.bond_providers) {\n            this.bondProviders = {\n                address: node.bond_providers['node_address'],\n                fee: (+node.bond_providers['node_operator_fee']) / 10000.0,\n                providers: []\n            }\n\n            if (node.bond_providers.providers) {\n                for (let {bond_address, bond} of node.bond_providers.providers) {\n                    this.bondProviders.providers.push({\n                        bond_address,\n                        bond: thorToFloat(bond)\n                    })\n                }\n            }\n        }\n\n        // post init\n        this.shortAddress = this.address ? this.address.substring(this.address.length - 4) : '?'\n\n        this.IPInfo = {\n            flag: '🏳️'\n        }\n\n        // this.requestedToLeave = true\n        // this.forcedtoLeave = true\n    }\n\n    get isActive() {\n        return this.status === NodeStatus.Active\n    }\n\n    get isStandby() {\n        return this.status === NodeStatus.Standby || this.status === NodeStatus.Ready\n    }\n}\n\nexport const NodeStatus = {\n    Standby: 'Standby',\n    Ready: 'Ready',\n    Whitelisted: 'Whitelisted',\n    Disabled: 'Disabled',\n    Active: 'Active',\n    Unknown: 'Unknown',\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial, Vector3} from \"three\";\nimport {Random, smoothStep, Util} from \"@/helpers/MathUtil\";\nimport {Text} from 'troika-three-text'\nimport {Colors, Config} from \"@/config\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport StdVertexShader from '@/visual/shader/billboard.vert'\n// import StdVertexShader from '@/visual/shader/standard.vert'\n// import FragShader1 from '@/visual/shader/node_obj_3_rays.frag'\n// import FragShader1 from '@/visual/shader/node_obj_1.frag'\nimport FragShader1 from '@/visual/shader/node_obj_2.frag'\nimport {randFloat} from \"three/src/math/MathUtils\";\nimport {clamp} from \"lodash\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\nimport TWEEN from \"tween.js\";\n\n\nconst noCfg = Config.Scene.NodeObject\nconst geomSize = noCfg.PlaneScale\n\n// const geometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\nconst geometry = new THREE.BoxGeometry(geomSize, geomSize, geomSize)\n// const geometry = new THREE.IcosahedronGeometry(noCfg.PlaneScale, 1)\n// const geometry = new THREE.PlaneGeometry(noCfg.PlaneScale, noCfg.PlaneScale)\nconst simpleGeometry = new THREE.SphereGeometry(noCfg.PlaneScale * 0.5, 10, 10)\n\nconst SlashColor = 0xff3300\n\nconst NormalLabelZ = 42.42\n\nconst CirclePackFactor = 1 / Math.sqrt(0.72)\n\nexport class NodeObject extends PhysicalObject {\n    constructor(node) {\n        super()\n\n        this.node = node\n        this.normalizedBond = this.node.bond / 1_000_000  // millions of Rune\n        this.mass = this.normalizedBond + 1.0\n\n        this.o = new THREE.Group()\n        this.o.name = this.name\n\n        this.attractors = []\n        this.mass = 1.0 + this.normalizedBond * 2.0\n        this.friction = Config.Physics.BaseFriction\n\n        this._makeSphere()\n        this._makeLabel()\n\n        this._reactingToSlash = false\n        this._elevated = false\n    }\n\n    get name() {\n        return this.node.address\n    }\n\n    set elevated(v) {\n        v = Boolean(v)\n        if (this._elevated !== v) {\n            this._elevated = v\n\n            this.material.uniforms.saturation.value = this._elevated ? 1.5 : 1.0\n            this.material.uniformsNeedUpdate = true\n        }\n    }\n\n    get elevated() {\n        return this._elevated\n    }\n\n    _getSphereColor() {\n        let color = 0x111111;\n        const st = this.node.status\n        if (st === NodeStatus.Standby) {\n            color = 0x167a56\n        } else if (st === NodeStatus.Ready) {\n            color = 0x167a8f\n        } else if (st === NodeStatus.Active) {\n            color = Random.getRandomSample([\n                Colors.LightningBlue,\n                Colors.YggdrasilGreen\n            ])\n        } else if (st === NodeStatus.Disabled) {\n            color = 0xee0000\n        } else if (st === NodeStatus.Whitelisted) {\n            color = 0x444444\n        } else if (st === NodeStatus.Unknown) {\n            color = 0x111144\n        }\n        return new THREE.Color(color)\n    }\n\n    _makeSphere() {\n        if (!this.mesh) {\n            if (Config.Scene.NodeObject.Simple) {\n                this._makeSimpleSphere()\n            } else {\n                this._makeCoolSphere()\n            }\n        }\n\n        if (this.material.uniforms) {\n            this.material.uniforms.color.value = this._getSphereColor()\n            this.material.uniformsNeedUpdate = true\n        }\n\n        this.mesh.name = this.name\n        this.mesh.renderOrder = 1\n\n        const scale = this.calculateScale\n        this.mesh.scale.setScalar(scale)\n\n        this.mesh.position.z = randFloat(-0.1, 0.1)\n        this.o.renderOrder = 1\n        this.o.add(this.mesh)\n    }\n\n    _makeSimpleSphere() {\n        // simpleGeometry\n        this.material = new THREE.MeshBasicMaterial({\n            color: this._getSphereColor()\n        })\n        this.mesh = new THREE.Mesh(simpleGeometry, this.material)\n    }\n\n    _makeCoolSphere() {\n        if (!this.material) {\n            this._makeMaterial()\n        }\n\n        this.mesh = new THREE.Mesh(geometry, this.material);\n        return this.mesh\n    }\n\n    _makeMaterial() {\n        // material\n\n        const initRust = -1.0\n\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                \"time\": {value: Random.getRandomFloat(0.0, 100.0)},\n                \"saturation\": {value: 1.0},\n                \"color\": {value: this._getSphereColor()},\n                \"transitionShininess\": {value: 0.0},\n                \"rust\": {value: initRust},\n            },\n            vertexShader: StdVertexShader,\n            fragmentShader: FragShader1,\n            transparent: true,\n            depthTest: true,\n            depthWrite: true,\n            // sizeAttenuation: true,\n        })\n    }\n\n    get calculateScale() {\n        const scale = this.normalizedBond * noCfg.MaxScale\n        return Util.clamp(scale, noCfg.MinScale, noCfg.MaxScale)\n    }\n\n    get realObject() {\n        return this.o\n    }\n\n    get position() {\n        return this.o.position\n    }\n\n    _makeLabel() {\n        const address = this.node.address\n        if (address && address.length >= 4) {\n            const nameTextObj = this.nameTextObj = new Text()\n\n            nameTextObj.text = address.slice(-4)\n            nameTextObj.font = Config.Font.Main\n            nameTextObj.fontWeight = 900\n            nameTextObj.fontSize = 15\n            nameTextObj.position.z = NormalLabelZ\n            nameTextObj.color = this.node.status === NodeStatus.Active ? 0xFFFFFF : 0xBBBBBB;\n            nameTextObj.anchorX = 'center'\n            nameTextObj.anchorY = 'middle'\n            nameTextObj.outlineWidth = 2.0\n            nameTextObj.sync()\n            nameTextObj.renderOrder = 100\n            nameTextObj.name = this.name\n            nameTextObj.material = createBillboardMaterial(new MeshBasicMaterial())\n            nameTextObj.scale.setScalar(\n                clamp(this.normalizedBond * 1.1, 0.5, 1.5)\n            )\n            this.o.add(nameTextObj)\n            this.labelObj = nameTextObj\n        }\n    }\n\n    dispose() {\n        if (this.nameTextObj) {\n            this.nameTextObj.dispose()\n        }\n        this.material.dispose()\n    }\n\n    get radius() {\n        return Math.max(noCfg.MinRadius, this.mesh.scale.x * noCfg.PlaneScale * noCfg.RadiusFactor)\n    }\n\n    static estimateRadiusOfGroup(nodeObjList) {\n        let sum_r2 = 0.0\n        for (const nodeObj of nodeObjList) {\n            sum_r2 += nodeObj.radius * nodeObj.radius\n        }\n        const r = Math.sqrt(sum_r2)\n        return Math.max(0.1, CirclePackFactor * r)\n    }\n\n    update(dt) {\n        super.update(dt);\n\n        if (this.material) {\n            this.material.uniforms.time.value += dt\n        }\n\n        // todo: remove debug\n        // if (Math.random() > 0.99) {\n        //     this._animateTransitionShininess()\n        // }\n    }\n\n    updateFromCamera(camera) {\n        const dir = camera.position.clone().sub(this.position)\n        dir.normalize().multiplyScalar(NormalLabelZ)\n        this.nameTextObj.position.copy(dir)\n    }\n\n    // ----------------- R E A C T I O N S -------------------\n\n    react(event) {\n        this.node = event.node\n        if (event.type === NodeEvent.EVENT_TYPE.OBSERVE_CHAIN) {\n            this.reactChain(event.nodeSet)\n        } else if (event.type === NodeEvent.EVENT_TYPE.SLASH) {\n            this.reactSlash()\n        } else if (event.type === NodeEvent.EVENT_TYPE.STATUS) {\n            this.reactStatusChange(event.node.status)\n        } else if(event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            this.reactVersion()\n        }\n\n        // if(Math.random() > 0.8) {\n        //     this.reactSlash()\n        // }\n    }\n\n    reactChain(nodeSet) {\n        // update: node appearance according chain lag\n\n        this.material.uniforms.rust.value = this._getRust(nodeSet)\n        this.material.uniformsNeedUpdate = true\n\n        const chainReactionVelocity = 1.0 // 100\n        // this.mesh.rotateZ(1.0)\n        const pos = this.o.position.clone().normalize()\n        const perp = pos.cross(new Vector3(0, 0, 1)).multiplyScalar(chainReactionVelocity)\n        this.velocity.add(perp)\n    }\n\n    reactVersion() {\n        this._animateTransitionShininess()\n    }\n\n    reactSlash() {\n        if(this._reactingToSlash || !this.material) {\n            return\n        }\n\n        const slashForce = 100.0\n        this.shootOut(slashForce)\n        // this.velocity.set(Random.randomOnCircle(slashForce))\n\n        this._animateScale(0.82, 200, 600)\n\n        this._reactingToSlash = true\n\n        const savedColor = this.material.uniforms.color.value.clone()\n\n        this.material.uniforms.color.value.set(SlashColor)\n        this.material.uniformsNeedUpdate = true\n\n        setTimeout(() => {\n            this.material.uniforms.color.value.set(savedColor)\n            this.material.uniformsNeedUpdate = true\n            this._reactingToSlash = false\n        }, 100)\n    }\n\n    reactStatusChange(newStatus) {\n        console.log(`New status ${this.node.status} -> ${newStatus}`)\n        this._animateTransitionShininess()\n    }\n\n    _getRust(nodeSet) {\n        const {max} = nodeSet.getChainHeightLagAllSeconds(this.node)\n        const a = smoothStep(0, 86400, max)\n        return 2.0 * clamp(a, 0.0, 0.95) - 1.0\n    }\n\n    _animateScale(targetScaleOfNormal,\n                  durationIn = 1000,\n                  durationOut = 1000,\n                  easing =TWEEN.Easing.Sinusoidal.InOut ) {\n        const normalScale = this.calculateScale\n        const targetScale = targetScaleOfNormal * normalScale\n        new TWEEN.Tween(this.mesh.scale)\n            .to(new THREE.Vector3(targetScale, targetScale, targetScale), durationIn)\n            .easing(easing)\n            .start()\n            .chain(\n                new TWEEN.Tween(this.mesh.scale)\n                    .to(new THREE.Vector3(normalScale, normalScale, normalScale), durationOut)\n                    .easing(easing)\n            )\n    }\n\n    _animateTransitionShininess() {\n        const durationIn = 500.0\n        const durationOut = durationIn * 2.5\n        const easing = TWEEN.Easing.Sinusoidal.InOut\n\n        new TWEEN.Tween(this.material.uniforms.transitionShininess)\n            .to({value: 1.0}, durationIn)\n            .easing(easing)\n            .start().onComplete(() => {\n            this._makeSphere()\n        }).chain(\n            new TWEEN.Tween(this.material.uniforms.transitionShininess)\n                .to({value: 0.0}, durationOut)\n                .easing(easing)\n        )\n\n        this._animateScale(1.5, durationIn, durationOut)\n    }\n}\n","import _ from \"lodash\";\nimport RBush from \"rbush\";\n\nexport class Simulation {\n    constructor() {\n        this._objects = {}\n\n        this.repelForce = 0.0\n        this.rBush = new RBush()\n        this.repelEnabled = true\n    }\n\n    getByName(name) {\n        return this._objects[name]\n    }\n\n    addObject(name, physObj) {\n        const existing = this.getByName(name)\n        if (existing) {\n            console.warn('PhysObj already exists. No nothing')\n            return existing\n        }\n\n        this._objects[name] = physObj\n    }\n\n    removeObject(name) {\n        const physObj = this.getByName(name)\n        if (!physObj) {\n            console.error('PhysObj not found!')\n            return\n        }\n\n        physObj.dispose()\n        delete this._objects[name]\n    }\n\n    _repelForceCalculation(obj) {\n        let vicinity = this.rBush.search(obj.boundingBox)\n\n        for (const rBushLeaf of vicinity) {\n            if (rBushLeaf.o !== obj) {\n                obj.repel(rBushLeaf.o, this.repelForce)\n            }\n        }\n    }\n\n    _updateObject(physObj, delta) {\n        physObj.nullifyForce()\n        if(this.repelEnabled) {\n            this._repelForceCalculation(physObj)\n        }\n        physObj.update(delta)\n    }\n\n    update(dt) {\n        if (isNaN(dt)) {\n            return\n        }\n        this.rBush = new RBush()\n        this.rBush.load(_.map(_.values(this._objects), physObj => ({\n            ...physObj.boundingBox,\n            o: physObj\n        })))\n        _.forEach(_.values(this._objects), obj => this._updateObject(obj, dt))\n    }\n\n    doNSteps(n, dt = 0.016) {\n        for (let step = 0; step < n; ++step) {\n            this.update(dt)\n        }\n    }\n\n    get physicalObjects() {\n        return _.values(this._objects)\n    }\n\n    get objectPositions() {\n        return _.map(this.physicalObjects, 'position')\n    }\n\n    get allNames() {\n        return _.keys(this._objects)\n    }\n\n    dispose() {\n        this._objects = {}\n        this.rBush.clear()\n    }\n\n    get size() {\n        return _.size(this._objects)\n    }\n\n    get entries() {\n        return _.entries(this._objects)\n    }\n}\n","import * as THREE from \"three\";\nimport {MeshBasicMaterial} from \"three\";\nimport {Text} from 'troika-three-text'\nimport {Config} from \"@/config\";\nimport TWEEN from \"tween.js\";\nimport {createBillboardMaterial} from \"@/helpers/TextBillboard\";\n\nexport class TitleLabel3D extends THREE.Object3D {\n    constructor(text, scale = 20, rotAngle = -45, billboard = false) {\n        super();\n        this.text = text\n        const t = this.label = new Text()\n        t.font = Config.Font.Main\n        t.fontSize = 10\n        t.scale.set(scale, scale, scale)\n        t.color = 0xFFFFFF\n        t.fillOpacity = 1.0 // 0.5\n        t.anchorX = 'center'\n        t.anchorY = 'middle'\n        t.textAlign = 'center'\n        t.text = text\n        if (billboard) {\n            t.material = createBillboardMaterial(new MeshBasicMaterial({\n                transparent: true,\n            }))\n        }\n        t.rotateX(THREE.MathUtils.degToRad(rotAngle))\n        t.sync()\n        this.t = t\n        this.add(t)\n        this.animDuration = 500\n        this.animDistance = 1500\n        this.easeType = TWEEN.Easing.Back.Out\n    }\n\n    set color(c) {\n        this.t.color = c\n    }\n\n    get color() {\n        return this.t.color\n    }\n\n    set opacity(o) {\n        this.t.material.opacity = o\n    }\n\n    get opacity() {\n        return this.t.material.opacity\n    }\n\n    animateIn() {\n        this.t.position.z = this.animDistance\n        this.opacity = 0.0\n\n        new TWEEN.Tween(this.t.position)\n            .to({z: 0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 1.0}, this.animDuration)\n            .easing(this.easeType)\n            .start()\n    }\n\n    animateOut(kill = false) {\n        const expandedDuration = this.animDuration * 5\n        new TWEEN.Tween(this.t.position)\n            .to({z: -this.animDistance * 5}, expandedDuration)\n            .easing(this.easeType)\n            .start()\n\n        new TWEEN.Tween(this.t.material)\n            .to({opacity: 0.0}, expandedDuration * 0.5)\n            .easing(this.easeType)\n            .start().onComplete(() => {\n            if (kill) {\n                if (this.parent) {\n                    this.parent.remove(this)\n                }\n            }\n        })\n    }\n}","import {TitleLabel3D} from \"@/visual/TitleLabel3D\";\nimport _ from \"lodash\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport TWEEN from \"tween.js\";\n\nexport class ModeBase {\n    constructor(scene) {\n        this.scene = scene\n        this.active = false\n        this.isFlat = true\n        this._labelsHash = {}\n    }\n\n    handleObject(physObj) {\n        +physObj // do nothing\n    }\n\n    reactEvent(event, nodes) {\n        +event;\n        +nodes\n    }\n\n    makeLabel({\n                  text,\n                  position,\n                  scale = 20,\n                  rotation = -45.0,\n                  bb = false,\n                  key = null,\n                  moveIfExists = true\n              }) {\n        if (!text || text === '') {\n            return\n        }\n\n        key = key || Random.generateId()\n\n        if (moveIfExists) {\n            const label = this.findLabelByKey(key)\n            if (label) {\n                new TWEEN.Tween(label.position)\n                    .to(position, 1000.0)\n                    .easing(TWEEN.Easing.Sinusoidal.InOut)\n                    .start();\n                return label\n            }\n        }\n\n        const titleLabel = new TitleLabel3D(text, scale, rotation, bb)\n        titleLabel.key = key\n\n        titleLabel.position.copy(position)\n        this.scene.add(titleLabel)\n\n        this._labelsHash[key] = titleLabel\n\n        return titleLabel\n    }\n\n    onEnter() {\n    }\n\n    _triggerOnEnter(a, b) {\n        this.onEnter(a, b)\n\n        this.active = true\n        _.values(this._labelsHash).forEach(label => label.animateIn())\n    }\n\n    onLeave() {\n    }\n\n    _triggerOnLeave(a, b) {\n        this.onLeave(a, b)\n\n        this.active = false\n        this.clearLabels()\n    }\n\n    findLabelByKey(key) {\n        return this._labelsHash[key]\n    }\n\n    killLabelByKey(key) {\n        const label = this.findLabelByKey(key)\n        if (key) {\n            label.animateOut(true)\n            delete this._labelsHash[key]\n        }\n    }\n\n    clearLabels() {\n        _.values(this._labelsHash).forEach(label => label.animateOut(true))\n\n        this._labelsHash = {}\n    }\n\n    update(dt) {\n        +dt\n    }\n}","import {distanceXY} from \"@/helpers/3D\";\n// import * as THREE from \"three\";\n\nexport class Attractor {\n    constructor(position,\n                constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0,\n                radius = -1.0,\n                relaxRadius = 0.0) {\n        this.position = position\n        this.constCoeff = constCoeff\n        this.linearCoeff = linearCoeff\n        this.quadraticCoeff = quadraticCoeff\n        this.radius = radius\n        this.relaxRadius = relaxRadius\n    }\n\n    applyForceToDistance(physObj, distance, toPosition) {\n        const fromPosition = physObj.realObject.position\n        const f = this.getForce(distance, fromPosition, toPosition)\n        physObj.force.add(f)\n    }\n\n    getForce(distance, fromPosition, toPosition) {\n        const magnitude = this.constCoeff + distance * this.linearCoeff + distance * distance * this.quadraticCoeff\n        return toPosition.clone().sub(fromPosition).normalize().multiplyScalar(magnitude)\n    }\n\n    distance(physObj) {\n        const objPosition = physObj.realObject.position\n        return this.position.distanceTo(objPosition)\n    }\n\n    applyForce(physObj) {\n        const distance = this.distance(physObj)\n        const infiniteRadius = this.radius <= 0.0\n\n        if ((infiniteRadius || distance <= this.radius) && distance > this.relaxRadius) {\n            this.applyForceToDistance(physObj, distance, this.position)\n        }\n    }\n}\n\nAttractor.INFINITE = -1\n\nexport class AttractorFlat extends Attractor {\n    distance(physObj) {\n        return distanceXY(this.position, physObj.realObject.position)\n    }\n\n    applyForce(physObj) {\n        super.applyForce(physObj);\n        this.squishZ(physObj)\n    }\n\n    squishZ(phyObj) {\n        const zDist = phyObj.realObject.position.z - this.position.z\n        let fZ = 0.0\n        if(Math.abs(zDist) > 1.0) {\n            fZ = -zDist * 100.0\n        }\n        phyObj.force.z = fZ\n    }\n}","import _ from \"lodash\";\nimport {Section, Util} from \"@/helpers/MathUtil\";\nimport {AttractorFlat} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\n\n\nexport class AttractorShape extends AttractorFlat {\n    constructor(triangles, constCoeff = 0, linearCoeff = 0, quadraticCoeff = 0, z = 0) {\n        const center = Util.centerOf(_.flatten(triangles))\n        super(new THREE.Vector3(center.x, center.y, 0.0),\n            constCoeff, linearCoeff, quadraticCoeff, 0, 0)\n        this.triangles = triangles\n        this.center = center\n        this.z = z\n    }\n\n    get allSectors() {\n        const sectors = []\n        for (const triangle of this.triangles) {\n            sectors.push(new Section(triangle[0], triangle[1]))\n            sectors.push(new Section(triangle[1], triangle[2]))\n            sectors.push(new Section(triangle[2], triangle[0]))\n        }\n        return sectors\n    }\n\n    applyForce(physObj) {\n        if (!this.triangles || !this.triangles.length) {\n            return\n        }\n        const objPosition = physObj.realObject.position\n        const p = {x: objPosition.x, y: objPosition.y}\n        const relaxed = _.some(this.triangles, tri => Util.pointInTriangle(p, tri))\n\n        this.squishZ(physObj)\n\n        if (relaxed) {\n            return\n        }\n\n        const nearestSector = _.minBy(this.allSectors, sector => sector.pDistance(p.x, p.y))\n        const nearestPoint = nearestSector.nearestPoint(p.x, p.y)\n        const distance = new Section(nearestPoint, p).length\n        this.applyForceToDistance(physObj, distance, new THREE.Vector3(nearestPoint.x, nearestPoint.y, this.z))\n    }\n}\n","export class THORChainLogoShape {\n    static original() {\n        return [\n            [\n                {x: 0, y: 0},\n                {x: 133, y: -133},\n                {x: -238, y: -291},\n            ],\n            [\n                {x: 0, y: 0},\n                {x: -133, y: 135},\n                {x: 291, y: 311},\n            ]\n        ]\n    }\n\n    static triangles(dx = 0, dy = 0, scale = 1.0) {\n        const transformed = []\n        for(const triangle of this.original()) {\n            const pts = []\n            for(const {x, y} of triangle) {\n                pts.push({\n                    x: x * scale + dx,\n                    y: y * scale + dy\n                })\n            }\n            transformed.push(pts)\n        }\n        return transformed\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {Random} from \"@/helpers/MathUtil\";\n\nexport class ModeNormal extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        const force = Config.Physics.BaseForce\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.8), force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.tcAttractor\n    }\n\n    onEnter(nodeObjList) {\n        const label = this.makeLabel({text: 'THORChain', position: new THREE.Vector3(0, -580, -10), scale: 18})\n        label.opacity = 0.8;\n\n        super.onEnter();\n\n        nodeObjList.forEach(o => {\n            o.velocity.add(new THREE.Vector3(0, Random.getRandomFloat(100, 1000), 0))\n        })\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport _ from \"lodash\";\nimport {AttractorShape} from \"@/helpers/physics/AttractorShape\";\nimport {THORChainLogoShape} from \"@/helpers/physics/TCLogoShape\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nconst ANY_STATUS = '*'\n\nexport class ModeStatus extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        const force = Config.Physics.BaseForce\n\n        this.tcAttractor = new AttractorShape(THORChainLogoShape.triangles(0, 100, 1.6), force)\n        this._standbyAttractors = [\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n            new Attractor(new THREE.Vector3(-this._sideDistance, 0, 0), force * 0.02),\n        ]\n\n        this.attractors = {\n            [NodeStatus.Active]: [\n                this.tcAttractor,\n            ],\n            [NodeStatus.Standby]: this._standbyAttractors,\n            [NodeStatus.Ready]: this._standbyAttractors,\n            [ANY_STATUS]: [\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force, 0, 0, 0, this._circleRadius * 0.3),\n                new Attractor(new THREE.Vector3(this._sideDistance, 0, 0), force * 0.02),\n            ],\n        }\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = null\n\n        const bestAttractors = this.attractors[physObj.node.status]\n        if (bestAttractors) {\n            physObj.attractors = bestAttractors\n        } else {\n            physObj.attractors = this.attractors[ANY_STATUS]\n        }\n    }\n\n    onEnter(nodeObj) {\n        const statusesCounted = _.countBy(nodeObj, 'node.status')\n        const standbyCount = (statusesCounted[NodeStatus.Standby] || 0) + (statusesCounted[NodeStatus.Ready] || 0)\n        const activeCount = (statusesCounted[NodeStatus.Active] || 0)\n        const otherCount = nodeObj.length - (standbyCount + activeCount)\n\n        this.makeLabel({text: 'Active', position: new THREE.Vector3(0, -500, 0), scale: 20})\n        this.makeLabel({text: 'Standby', position: new THREE.Vector3(-this._sideDistance, -420, 0), scale: 12})\n        this.makeLabel({text: 'Other', position: new THREE.Vector3(this._sideDistance, -420, 0), scale: 12})\n\n        this.makeLabel({\n            text: activeCount, position: new THREE.Vector3(0, -650, 0), scale: 10,\n        })\n        this.makeLabel({\n            text: standbyCount, position: new THREE.Vector3(-this._sideDistance, -500, 0), scale: 6,\n        })\n        this.makeLabel({\n            text: otherCount, position: new THREE.Vector3(this._sideDistance, -500, 0), scale: 6,\n        })\n\n        super.onEnter();\n    }\n}\n","import * as THREE from \"three\";\nimport {PhysicalObject} from \"@/helpers/physics/PhysicalObject\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {Config} from \"@/config\";\n\n\nclass VirtualObject extends PhysicalObject {\n    constructor(x, y, r, name, attractor, friction) {\n        super();\n        this.name = name\n        this.position = new THREE.Vector3(x, y, 0)\n        this._radius = r\n        this.attractors = attractor\n        this.friction = friction\n    }\n\n    get radius() {\n        return this._radius\n    }\n}\n\nconst fric = Config.Physics.BaseFriction\n\nexport class CirclePack {\n    constructor(force, boundRadius, repelForce = 600, friction = fric, iterSteps = 1) {\n        this.force = force\n        this.boundRadius = boundRadius\n        this.iterSteps = iterSteps\n        this.dt = 0.05\n        this.simulation = new Simulation()\n        this.simulation.repelForce = repelForce\n        this.friction = friction\n\n        this.metaAttractor = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, -1, 0)\n    }\n\n    addCircle(name, radius) {\n        this.simulation.addObject(\n            name,\n            new VirtualObject(\n                0,\n                0,\n                radius,\n                name,\n                this.metaAttractor,\n                this.friction,\n            )\n        )\n    }\n\n    arrangeAroundCenter() {\n        if (!this.simulation.size) {\n            return this\n        }\n\n        const deltaAngle = Math.PI * 2 / this.simulation.size\n        const r = this.boundRadius * 0.5 * 0.8\n        let angle = Math.PI * 0.5\n\n        for (const name of this.simulation.allNames) {\n            const obj = this.simulation.getByName(name)\n            if (obj) {\n                obj.position.x = r * Math.cos(angle)\n                obj.position.y = r * Math.sin(angle)\n            }\n\n            angle -= deltaAngle\n        }\n        return this\n    }\n\n    clear() {\n        this.simulation.dispose()\n    }\n\n    pack(dt, steps) {\n        if (!this.simulation.size) {\n            return this\n        }\n        dt = dt || this.dt\n        steps = steps || this.iterSteps\n        this.simulation.doNSteps(steps, dt)\n        return this\n    }\n\n    getResults() {\n        const results = {}\n        for (const [name, {position, radius}] of this.simulation.entries) {\n            results[name] = {\n                position, radius\n            }\n        }\n        return results\n    }\n}\n","import axios from \"axios\";\nimport lscache from \"lscache\";\nimport _ from \"lodash\";\n\n\nexport class IPAddressInfo {\n    constructor(j) {\n        this.ipAddress = j['ip']\n        this.countryCode = j['country_code']\n        this.country = j['country_name']\n        this.city = j['city']\n        this.latitude = j['latitude']\n        this.longitude = j['longitude']\n        this.providerName = j['org']\n        this.flag = IPAddressInfo.getFlagEmoji(this.countryCode)\n    }\n\n    static getFlagEmoji(countryCode) {\n        if (countryCode) {\n            const codePoints = countryCode\n                .toUpperCase()\n                .split('')\n                .map(char => 127397 + char.charCodeAt());\n            return String.fromCodePoint(...codePoints);\n        } else {\n            return ''\n        }\n    }\n}\n\n\nexport const UNKNOWN = 'UNKNOWN'\n\n\nexport class IPAddressInfoLoader {\n    constructor(expireMinutes = 24 * 60) {\n        this.expireMinutes = expireMinutes\n        this._key = 'IPInfo2'\n    }\n\n    url(ip) {\n        return `https://settings.thornode.org/api/node/ip/${ip}`\n    }\n\n    async loadFromService(ips) {\n        const r = await axios.get(this.url(ips.join(',')))\n        console.info(`Loaded IP info for (${ips}) => ${r.status}`)\n        return _.mapValues(r.data, j => new IPAddressInfo(j))\n    }\n\n    loadFromCache(ip) {\n        return lscache.get(`${this._key}:${ip}`)\n    }\n\n    saveToCache(data) {\n        if (!data || !data.ipAddress) {\n            console.warn('no data to save!')\n            return\n        }\n        const ip = data.ipAddress\n        lscache.set(`${this._key}:${ip}`, data, this.expireMinutes)\n    }\n\n    async loadBunch(ipAddresses) {\n        const results = {}\n        const requestList = []\n        _.each(ipAddresses, ip => {\n            const data = this.loadFromCache(ip)\n            if (data) {\n                results[ip] = data\n            } else {\n                requestList.push(ip)\n            }\n        })\n\n        console.log(`requestList = ${requestList.length}, cached = ${_.keys(results).length}`)\n\n        const addressChunks = _.chunk(requestList, 50)\n        for(const ipListChunk of addressChunks) {\n            const chunkInfoDic = await this.loadFromService(ipListChunk)\n            _.each(_.values(chunkInfoDic), d => this.saveToCache(d))\n            _.extend(results, chunkInfoDic)\n        }\n\n        return results\n    }\n\n    static refineProviderName(name) {\n        if (name === undefined) {\n            return UNKNOWN\n        }\n\n        name = name.toUpperCase()\n        name = name.replace('ONLINE GMBH', '')\n        for (const component of name.split('-')) {\n            if (component !== 'AS') {\n                return component\n            }\n        }\n\n        return name\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {CirclePack} from \"@/helpers/physics/CirclePack\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {Random} from \"@/helpers/MathUtil\";\n\n\nexport class ModeProvider extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n        this.attractors = {}\n        this.force = Config.Physics.BaseForce\n        this.circlePacker = new CirclePack(this.force, 1400, 300, 0.02, 1)\n    }\n\n    update() {\n        // this.circlePacker.pack(dt)\n        this._transferAttractorsPositionFromPacker()\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = IPAddressInfoLoader.refineProviderName(\n                physObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            )\n            physObj.attractors = (this.attractors[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(objList) {\n        this._createProviderAttractors(objList)\n        super.onEnter();\n    }\n\n    _createProviderAttractors(objList) {\n        const providers = {}\n\n        let mostPopularProvider = null\n        let mostPopularCount = 0\n\n        for (const nodeObj of objList) {\n            const nativeName = nodeObj?.node?.IPInfo?.providerName ?? UNKNOWN\n            const provider = IPAddressInfoLoader.refineProviderName(nativeName)\n\n            if (!providers[provider]) {\n                providers[provider] = [nodeObj]\n            } else {\n                const list = providers[provider]\n                list.push(nodeObj)\n                if (list.length > mostPopularCount) {\n                    mostPopularProvider = provider\n                    mostPopularCount = list.length\n                }\n            }\n        }\n\n        this.circlePacker.clear()\n        this.attractors = {}\n        const sortedEntries = _.sortBy(_.entries(providers), [(pair) => pair[1].length])\n        // const sortedEntries = _.entries(providers)\n        for (const [name, items] of sortedEntries) {\n            if (name === mostPopularProvider) {\n                continue\n            }\n\n            this._makeAttractor(name, items, true)\n        }\n        this.circlePacker.arrangeAroundCenter()\n        this._transferAttractorsPositionFromPacker()\n\n        if (mostPopularProvider) {\n            this._makeAttractor(mostPopularProvider, providers[mostPopularProvider], false)\n        }\n\n        for(const nodeObj of objList) {\n            nodeObj.velocity.z = Random.getRandomFloat(-1000, 1000)\n        }\n\n        this._makeLabels(providers, mostPopularProvider)\n    }\n\n    _makeAttractor(name, items, addCircle) {\n        const circleRadius = NodeObject.estimateRadiusOfGroup(items) * 1.05\n        // console.log('prov', name, circleRadius)\n\n        if (addCircle) {\n            this.circlePacker.addCircle(name, circleRadius)\n        }\n\n        this.attractors[name] = new Attractor(new THREE.Vector3(),\n            this.force, 0, 0, 0, circleRadius)\n        return circleRadius\n    }\n\n    _makeLabelForGroup(providers, name, position) {\n        const countNodes = providers[name].length\n        const text = `${name} (${countNodes})`\n        this.makeLabel({text, position: new THREE.Vector3(position.x, position.y - 180.0, 60.0), scale: 5})\n    }\n\n    _makeLabels(providers, mostPopularName) {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            this._makeLabelForGroup(providers, name, position)\n        }\n\n        if (mostPopularName) {\n            this._makeLabelForGroup(providers, mostPopularName, new THREE.Vector3())\n        }\n    }\n\n    _transferAttractorsPositionFromPacker() {\n        const packedPositions = this.circlePacker.getResults()\n        for (const [name, {position}] of _.entries(packedPositions)) {\n            const attr = this.attractors[name]\n            if (attr) {\n                attr.position.copy(position)\n            } else {\n                console.warn(`no attr for ${name}`)\n            }\n        }\n    }\n}","import _ from \"lodash\";\n\nfunction isGarbage(x) {\n    return x === undefined || x === null || isNaN(x)\n}\n\nexport class Version {\n    constructor(x, y, z) {\n        this.x = x\n        this.y = y\n        this.z = z\n    }\n\n    static fromString(v) {\n        if (v instanceof Version) {\n            return v\n        }\n        const components = _.map(v.split('.'), x => parseInt(x))\n        const n = components.length\n        const x = components[0]\n        const y = n > 1 ? components[1] : 0\n        const z = n > 2 ? components[2] : 0\n        return new Version(x, y, z)\n    }\n\n    get isInvalid() {\n        return isGarbage(this.x) || isGarbage(this.y) || isGarbage(this.z)\n    }\n\n    greater(v2) {\n        return this.x > v2.x || this.y > v2.y || this.z > v2.z\n    }\n\n    less(v2) {\n        return this.x < v2.x || this.y < v2.y || this.z < v2.z\n    }\n\n    equal(v2) {\n        return this.x === v2.x && this.y === v2.y && this.z === v2.z\n    }\n\n    toString() {\n        return `${this.x}.${this.y}.${this.z}`\n    }\n\n    inc(xLimit = 10, yLimit = 10) {\n        this.z++\n        if (this.z >= xLimit) {\n            this.z = 0\n            this.y++\n            if (this.y >= yLimit) {\n                this.x++\n                this.y = 0\n            }\n        }\n        return this\n    }\n\n    get asInt() {\n        return this.z + 1000 * this.y + 1000000 * this.x\n    }\n\n    static loadVersions(rawVersions) {\n        return _.map(rawVersions, v => Version.fromString(v))\n    }\n\n    static maximumVersion(versions) {\n        return _.maxBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static minimumVersion(versions) {\n        return _.minBy(Version.loadVersions(versions), v => v.asInt)\n    }\n\n    static getVersionSet(nodeObjects, path = 'node.version') {\n        return Version.loadVersions(_.uniq(_.map(nodeObjects, path)))\n    }\n\n    static getSemanticVersionsDistribution(nodeObjects, path = 'node.version', activePath = 'node.isActive') {\n        const activeNodes = _.filter(nodeObjects, no => _.get(no, activePath))\n\n        const activeVersions = Version.getVersionSet(activeNodes, path)\n        const maxActiveVersion = Version.maximumVersion(activeVersions)\n        const minActiveVersion = Version.minimumVersion(activeVersions)\n        const otherActiveVersions = _.differenceBy(activeVersions, _.compact([maxActiveVersion, minActiveVersion]),\n            v => v.asInt)\n        const otherActiveVersionsStr = _.map(otherActiveVersions, v => v.toString())\n\n        const results = {}\n\n        for (const nodeObject of nodeObjects) {\n            const versionStr = _.get(nodeObject, path)\n            const version = Version.fromString(versionStr)\n            let target = null\n            let comment = ''\n            const isActive = version.equal(minActiveVersion)\n            const isLatest = version.equal(maxActiveVersion)\n            if(isLatest && isActive) {\n                target = minActiveVersion.toString()\n                comment = 'latest and active'\n            } else if (isLatest) {\n                target = maxActiveVersion.toString()\n                comment = 'latest'\n            } else if (isActive) {\n                target = minActiveVersion.toString()\n                comment = 'active'\n            } else if (_.includes(otherActiveVersionsStr, versionStr)) {\n                target = versionStr\n                comment = 'interim'\n            } else if (!versionStr || versionStr === '0.0.0') {\n                target = 'unknown'\n            } else {\n                target = `${version.x}.X.X`\n                comment = 'old'\n            }\n\n            if (!results[target]) {\n                results[target] = {\n                    objects: [],\n                    comment,\n                    mostPopular: false,\n                    isActive: nodeObject.node.isActive\n                }\n            }\n            results[target].objects.push(nodeObject)\n        }\n\n        if(!_.isEmpty(results)) {\n            const maxVersion = _.maxBy(_.values(results), v => v.objects.length)\n            maxVersion.mostPopular = true\n        }\n\n        return results\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Config} from \"@/config\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeObject} from \"@/visual/NodeObject\";\n\n\nexport class ModeVersion extends ModeBase {\n    constructor(scene) {\n        super(scene);\n\n        this._circleRadius = 350.0\n        this._sideDistance = 600\n\n        this.force = Config.Physics.BaseForce\n        this._attractorsByKey = {}\n        this._attractorsByVersion = {}\n\n        this._attractorBanish = new Attractor(new THREE.Vector3(0, 0, 0), -100.0)\n\n        this._previousKeys = []\n        this._versionDist = {}\n    }\n\n    reactEvent(event, nodeObjects) {\n        if (event.type === NodeEvent.EVENT_TYPE.VERSION) {\n            console.log(`New version detected: ${event.currValue}`)\n            this._packAttractorPositions(nodeObjects)\n            this._makeLabels()\n        }\n    }\n\n    handleObject(physObj) {\n        if (physObj) {\n            let groupName = physObj.node.version\n            physObj.attractors = (this._attractorsByVersion[groupName] ?? this._attractorBanish)\n        }\n    }\n\n    onEnter(nodeObjects) {\n        this._packAttractorPositions(nodeObjects)\n        this._makeLabels()\n\n        this.makeLabel({\n            text: 'Versions',\n            position: new THREE.Vector3(0, -630, -10), scale: 14\n        })\n    }\n\n    _packAttractorPositions(objList) {\n        this._versionDist = Version.getSemanticVersionsDistribution(objList)\n\n        const gap = 100.0\n        const radAttr = 1.2\n\n        let nGroups = 0\n        let radSum = 0.0\n        for (const versionDesc of _.values(this._versionDist)) {\n            versionDesc.radius = radAttr * NodeObject.estimateRadiusOfGroup(versionDesc.objects)\n            ++nGroups\n            radSum += 2 * versionDesc.radius\n        }\n        radSum += Math.max(0, nGroups - 1) * gap\n\n        let x = -radSum * 0.5\n        this._attractorsByVersion = {}\n        this._attractorsByKey = {}\n\n        let entries = _.entries(this._versionDist)\n        entries = _.sortBy(entries, e => e[0])\n\n        for (const [key, versionDesc] of entries) {\n            const r = versionDesc.radius\n            const attractor = new Attractor(new THREE.Vector3(x + r, 0, 0),\n                this.force, 0, 0, 0, versionDesc.radius)\n            x += gap + r * 2\n            this._attractorsByKey[key] = attractor\n            for (const nodeObj of versionDesc.objects) {\n                this._attractorsByVersion[nodeObj.node.version] = attractor\n            }\n        }\n    }\n\n    _makeLabels() {\n        const affectedKeys = []\n\n        for (const [key, desc] of _.entries(this._versionDist)) {\n            affectedKeys.push(key)\n            const attr = this._attractorsByKey[key]\n            if (attr) {\n\n                let tag = '\\n' + desc.comment\n                let color\n                if(desc.comment === 'latest') {\n                    color = '#41e9ff'\n                } else if(desc.comment === 'latest and active') {\n                    color = '#1dfc53'\n                } else if(desc.comment === 'active') {\n                    color = '#16f14b'\n                } else if(desc.comment === 'interim') {\n                    color = '#1cc245'\n                    tag = ''\n                }\n\n                let text\n                if(key === 'unknown') {\n                    text = 'Unknown'\n                } else {\n                    text = `v. ${key} (${desc.objects.length})${tag}`\n                }\n\n                const position = new THREE.Vector3(attr.position.x, attr.position.y - attr.relaxRadius * 1.1 - 30.0, 50.0)\n                // const position = new THREE.Vector3(attr.position.x, -300.0, 50.0)\n                const label = this.makeLabel({\n                    text,\n                    position,\n                    scale: 2.5,\n                    key\n                }).t\n\n                if(!desc.isActive) {\n                    label.fillOpacity = 0.9\n                }\n                if(color) {\n                    label.color = color\n                }\n            }\n        }\n\n        const keysToRemove = _.difference(this._previousKeys, affectedKeys)\n        _.forEach(keysToRemove, key => {\n            this.killLabelByKey(key)\n        })\n        if(keysToRemove.length) {\n            console.log(`Removing ${keysToRemove.length} version labels...`)\n        }\n\n        this._previousKeys = affectedKeys\n    }\n}\n","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {Config} from \"@/config\";\nimport {shortRune} from \"@/helpers/MathUtil\";\n\nexport class ModeBond extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.nameToAttractor = {}\n        this.force = Config.Physics.BaseForce\n\n        this.center = new THREE.Vector3(0, 120)\n        this._noBondAttractor = new Attractor(this.center, this.force)\n    }\n\n    handleObject(physObj) {\n        physObj.attractors = this.nameToAttractor[physObj.node.address]\n    }\n\n    onEnter(nodeObjects) {\n        const label = this.makeLabel({text: 'Bonds', position: new THREE.Vector3(0, -630, -10), scale: 14})\n        label.opacity = 0.8;\n\n        nodeObjects = _.sortBy(nodeObjects, 'node.bond')\n\n        const n = nodeObjects.length\n\n        this.nameToAttractor = {}\n\n        if (n === 0) {\n            return\n        }\n\n        this._positionateOnSpiral(nodeObjects)\n\n        super.onEnter();\n    }\n\n    _positionateOnSpiral(nodeObjects) {\n        const n = nodeObjects.length\n        let angle = 0.0\n        let radius = 34.0\n        // let gap = 3.0\n        const xScale = 1.5\n\n        let deltaRadius = 5.9;\n        let deltaAngle = 0.5;\n        const deltaDeltaRadius = 0.995;\n        const deltaDeltaAngle = 0.991;\n\n        for (let i = 0; i < n; ++i) {\n            const x = this.center.x + xScale * radius * Math.cos(angle)\n            const y = this.center.y + radius * Math.sin(angle)\n            if (this._addAttractor(nodeObjects[i], x, y)) {\n                radius += deltaRadius;\n                angle += deltaAngle;\n                deltaRadius *= deltaDeltaRadius\n                deltaAngle *= deltaDeltaAngle\n            }\n        }\n    }\n\n    _positionateOnGrid(nodeObjects) {\n        const n = nodeObjects.length\n\n        const columns = Math.ceil(Math.sqrt(n))\n        const rows = Math.ceil(n / columns)\n\n        const gapSize = 100.0\n        const width = columns * gapSize\n        const height = rows * gapSize\n        const halfWidth = 0.5 * width\n        const halfHeight = 0.5 * height\n\n        for (let i = 0; i < n; ++i) {\n            const col = i % columns\n            const row = Math.floor(i / columns)\n            const x = gapSize * col - halfWidth\n            const y = gapSize * row - halfHeight\n            this._addAttractor(nodeObjects[i], x, y)\n        }\n    }\n\n    _addAttractor(nodeObject, x, y) {\n        const bond = nodeObject.node.bond\n        if (bond > 1.0) {\n            const z = 0.0\n            this.nameToAttractor[nodeObject.node.address] = new Attractor(new THREE.Vector3(x, y, z),\n                this.force, 0, 0, -1, 10.0)\n\n            const label = this.makeLabel({\n                text: shortRune(bond),\n                position: new THREE.Vector3(x, y - nodeObject.radius - 19.0, -10),\n                scale: 1,\n                rotation: -22.0\n            })\n\n            if(!nodeObject.node.isActive) {\n                label.color = '#aaa'\n            }\n\n            return true\n        } else {\n            this.nameToAttractor[nodeObject.node.address] = this._noBondAttractor\n            return false\n        }\n    }\n}\n","export default \"//uniform float time;\\n//uniform float saturation;\\n//uniform vec3 color;\\n\\nvarying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nconst vec3 ATMO_COLOR = vec3(0.3, 0.6, 1.0);\\nconst vec3 FORWARD = vec3(0.0, 0.0, 1.0);\\n\\nuniform sampler2D globeTexture;\\n\\nvoid main(void) {\\n    float intensity = 1.05 - dot(vNormal, FORWARD);\\n    vec3 atmo = clamp(ATMO_COLOR * pow(intensity, 1.5), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n//    vec3 atmo = vec3(0.0, 0.0, 0.0);\\n    gl_FragColor = vec4(atmo + texture2D(globeTexture, vUv).xyz, 1.0);\\n    //    gl_FragColor = texture2D(globeTexture, vUv);\\n}\\n\\n\";","export default \"varying vec2 vUv;\\nvarying vec3 vNormal;\\n\\nvoid main()\\n{\\n    vUv = uv;\\n    vNormal = normalMatrix * normalize(normal);\\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","import {ModeBase} from \"@/visual/modes/ModeBase\";\nimport * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport {Attractor} from \"@/helpers/physics/Attractor\";\nimport {longLatTo3D} from \"@/helpers/3D\";\nimport TWEEN from \"tween.js\";\nimport _ from \"lodash\";\n\nimport AtmosphereFragmentShader from '@/visual/shader/globe_atmo_textured.frag'\nimport StdVertexShader from '@/visual/shader/standard.vert'\n\nexport class ModeGeo extends ModeBase {\n    constructor(scene) {\n        super(scene);\n        this.isFlat = false\n\n        this.force = Config.Physics.BaseForce * 1.2\n        this._banishAttractor = new Attractor(new THREE.Vector3(0, 0, 0), this.force)\n\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n    }\n\n    handleObject(physObj) {\n        const attr = this._nameToAttractor[physObj.name]\n        physObj.attractors = attr ? [attr] : [this._banishAttractor]\n    }\n\n    onEnter(nodeObjects, group) {\n        // this.makeLabel('Geo', new THREE.Vector3(0, -630, -10), 14, 0, true)\n        super.onEnter();\n\n        group.repelEnabled = false\n\n        this._createAttractorsStacked(nodeObjects)\n\n        if (Config.Scene.Globe.Enabled) {\n            this._makeGlobe()\n            this._putInGlobe()\n        }\n    }\n\n    onLeave(nodeObjects, group) {\n        this._destroyGlobe()\n        _.forEach(nodeObjects, nodeObj => nodeObj.shootOut(2000))\n        super.onLeave();\n        group.repelEnabled = true\n    }\n\n    _makeGlobe() {\n        if (this.globeMesh) {\n            return\n        }\n        const textureLoader = new THREE.TextureLoader()\n\n        const globeConfig = Config.Scene.Globe\n        const geometry = new THREE.SphereGeometry(globeConfig.Radius, globeConfig.Details, globeConfig.Details);\n        // const basicMaterial = new THREE.MeshPhongMaterial({\n        //     color: 0x555555,\n        //     // depthWrite: true,\n        //     // depthTest: true,\n        // });\n\n        const material = new THREE.ShaderMaterial({\n            name: 'AtmosphereShaderMaterial',\n            fragmentShader: AtmosphereFragmentShader,\n            vertexShader: StdVertexShader,\n            uniforms: {\n                globeTexture: {\n                    value: textureLoader.load(Config.Scene.Globe.TextureMap)\n                }\n            },\n            // side: THREE.FrontSide,\n            // depthWrite: true,\n            // depthTest: true,\n        })\n\n        this.globeMesh = new THREE.Mesh(geometry, material);\n        this.globeMesh.renderOrder = 9999\n        this.scene.add(this.globeMesh)\n\n        // const dummyMesh = new THREE.Mesh(geometry, material)\n        // dummyMesh.scale.setScalar(0.9)\n        // this.globeMesh.add(dummyMesh)\n\n        // if(globeConfig.InnerAtmosphere.Enabled) {\n        //     const innerAtmoMaterial = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {\n        //             globeTexture: {\n        //                 value: textureLoader.load(Config.Scene.Globe.TextureMap)\n        //             }\n        //         },\n        //         // side: THREE.FrontSide,\n        //         // depthWrite: true,\n        //         // depthTest: true,\n        //     })\n        //\n        //     this.innerAtmoMesh = new THREE.Mesh(geometry, innerAtmoMaterial)\n        //     // this.innerAtmoMesh.scale.setScalar(1.1)\n        //     this.globeMesh.add(this.innerAtmoMesh)\n        // }\n\n        if (globeConfig.Clouds.Opacity > 0) {\n            const materialClouds = new THREE.MeshPhongMaterial({\n                map: textureLoader.load(globeConfig.Clouds.Texture),\n                side: THREE.DoubleSide,\n                opacity: globeConfig.Clouds.Opacity,\n                transparent: true,\n                depthWrite: false,\n                blending: THREE.AdditiveBlending,\n            });\n            this.cloudMesh = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh)\n\n            this.cloudMesh2 = new THREE.Mesh(geometry, materialClouds)\n            this.cloudMesh2.scale.setScalar(globeConfig.Clouds.ElevationScale)\n            this.globeMesh.add(this.cloudMesh2)\n        }\n\n        // if(globeConfig.Atmosphere) {\n        //     const materialAtmosphere = new THREE.ShaderMaterial({\n        //         name: 'AtmosphereShaderMaterial',\n        //         fragmentShader: AtmosphereFragmentShader,\n        //         vertexShader: StdVertexShader,\n        //         uniforms: {},\n        //         side: THREE.FrontSide,\n        //         depthWrite: false\n        //     })\n        //     this.atmosphereMesh = new THREE.Mesh(geometry, materialAtmosphere)\n        //     this.atmosphereMesh.scale.setScalar(globeConfig.Atmosphere.ElevationScale)\n        //     this.globeMesh.add(this.atmosphereMesh)\n        // }\n    }\n\n    _putInGlobe() {\n        this.globeMesh.scale.set(0.01, 0.01, 0.01)\n        new TWEEN.Tween(this.globeMesh.scale)\n            .to(new THREE.Vector3(1, 1, 1))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    _destroyGlobe() {\n        if (!this.globeMesh) {\n            return\n        }\n        const g = this.globeMesh\n\n        new TWEEN.Tween(g.scale)\n            .to(new THREE.Vector3(0.01, 0.01, 0.01))\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                g.parent.remove(g)\n            })\n            .start()\n\n        this.globeMesh = null\n    }\n\n    update(dt) {\n        super.update(dt);\n        if (this.cloudMesh) {\n            this.cloudMesh.rotation.y += 0.02 * dt\n        }\n        if (this.cloudMesh2) {\n            this.cloudMesh2.rotation.y -= 0.04 * dt\n        }\n    }\n\n    _createAttractors(nodeObjects) {\n        const r = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        this._nameToAttractor = {}\n        this._coordToAttractor = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let attractorHere = this._coordToAttractor[key]\n                if (!attractorHere) {\n                    const position3d = longLatTo3D(info.longitude, info.latitude, r)\n                    attractorHere = this._coordToAttractor[key] = new Attractor(position3d,\n                        this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                }\n                this._nameToAttractor[nodeObject.node.address] = attractorHere\n\n            }\n        }\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n\n    _createAttractorsStacked(nodeObjects) {\n        this._nameToAttractor = {}\n        this._coordToStack = {}\n\n        for (const nodeObject of nodeObjects) {\n            const info = nodeObject.node.IPInfo\n            if (!info || !nodeObject.node.IPAddress) {\n                this._nameToAttractor[nodeObject.node.address] = this._banishAttractor\n            } else {\n                const key = `${info.longitude}, ${info.latitude}`\n                let stackObj = this._coordToStack[key]\n                if (!stackObj) {\n                    this._coordToStack[key] = stackObj = {\n                        stack: [],\n                        longitude: info.longitude,\n                        latitude: info.latitude,\n                    }\n                }\n                stackObj.stack.push(nodeObject)\n                // this._nameToAttractor[nodeObject.node.address] = attractorHere\n            }\n        }\n\n        const basicRadius = Config.Scene.Globe.Radius + Config.Scene.Globe.NodeElevation\n        for (const {stack, longitude, latitude} of _.values(this._coordToStack)) {\n            const sortedStack = _.sortBy(stack, nodeObject => -nodeObject.node.bond)\n            let radius = basicRadius\n            for (const nodeObj of sortedStack) {\n                const position3d = longLatTo3D(longitude, latitude, radius)\n                this._nameToAttractor[nodeObj.node.address] = new Attractor(position3d,\n                    this.force, 0.0, 0.0, Attractor.INFINITE, 5.0)\n                radius += nodeObj.radius * 2.1\n            }\n        }\n\n        console.log(`Total attractors were made: ${this._coordToAttractor.length}.`)\n    }\n}\n","import {Random} from \"@/helpers/MathUtil\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {Config} from \"@/config\";\nimport {Simulation} from \"@/helpers/physics/Simulation\";\nimport {ModeNormal} from \"@/visual/modes/ModeNormal\";\nimport {ModeStatus} from \"@/visual/modes/ModeStatus\";\nimport {ModeProvider} from \"@/visual/modes/ModeProvider\";\nimport {ModeVersion} from \"@/visual/modes/ModeVersion\";\nimport {ModeBond} from \"@/visual/modes/ModeBond\";\nimport {ModeGeo} from \"@/visual/modes/ModeGeo\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\n// import {VisNetwork} from \"@/visual/VisNetwork\";\n\nexport const NodeGroupModes = Object.freeze({\n    Normal: 'normal',\n    Status: 'status',\n    Provider: 'provider',\n    Version: 'version',\n    Bond: 'bond',\n    Geo: 'geo',\n})\n\nexport class NodeGroup extends Simulation {\n    constructor(parent) {\n        super()\n\n        this.holder = new THREE.Group()\n        parent.add(this.holder)\n\n        this._currentIdent = 0\n        this.parent = parent\n\n        this._modeNormal = new ModeNormal(this.parent)\n        this._modeStatus = new ModeStatus(this.parent)\n        this._modeProvider = new ModeProvider(this.parent)\n        this._modeVersion = new ModeVersion(this.parent)\n        this._modeBond = new ModeBond(this.parent)\n        this._modeGeo = new ModeGeo(this.parent)\n\n        this._selector = {\n            [NodeGroupModes.Normal]: this._modeNormal,\n            [NodeGroupModes.Status]: this._modeStatus,\n            [NodeGroupModes.Provider]: this._modeProvider,\n            [NodeGroupModes.Version]: this._modeVersion,\n            [NodeGroupModes.Bond]: this._modeBond,\n            [NodeGroupModes.Geo]: this._modeGeo,\n        }\n\n        this._selectedModeHandler = this._modeNormal\n        this.mode = NodeGroupModes.Normal\n\n        this.repelForce = Config.Physics.RepelForce\n\n        // this._visNet = new VisNetwork()\n        // this.parent.add(this._visNet)\n    }\n\n    genIdent(node) {\n        return node.address ?? String(this._currentIdent++)\n    }\n\n    _placeNodeObject(nodeObject) {\n        // const pos = Random.randomVector(this._startPositionBounds)\n        const pos = Random.randomOnCircle(2000.0)\n        nodeObject.o.position.copy(pos)\n        this.holder.add(nodeObject.o)\n    }\n\n    createNewNode(node) {\n        const ident = this.genIdent(node)\n        const existing = this.getByName(ident)\n        if (existing) {\n            console.warn('NodeObject already exists. No nothing')\n            return existing\n        }\n\n        console.info(`Create node ${ident}.`)\n\n        const nodeObject = new NodeObject(node)\n        this._placeNodeObject(nodeObject)\n        this.addObject(ident, nodeObject)\n        return nodeObject\n    }\n\n    destroyNode(node) {\n        const nodeAddress = node.address ?? node\n        const nodeObject = this.getByName(nodeAddress)\n        if (!nodeObject) {\n            console.error('node not found!')\n            return\n        }\n\n        console.info(`Destroy node ${nodeAddress}.`)\n        nodeObject.dispose()\n        this.holder.remove(nodeObject.o)\n        super.removeObject(nodeAddress)\n    }\n\n    set mode(newMode) {\n        if(this._mode === newMode) {\n            return\n        }\n\n        this._mode = newMode\n\n        // dispose old\n        this._selectedModeHandler._triggerOnLeave(this.physicalObjects, this)\n\n        // pick new\n        this._selectedModeHandler = this._selector[this._mode]\n\n        // enter the new one\n        this._selectedModeHandler._triggerOnEnter(this.physicalObjects, this)\n\n        console.log(`Set Mode: ${newMode}`)\n    }\n\n    _updateObject(obj, delta) {\n        if(obj) {\n            this._selectedModeHandler.handleObject(obj)\n            super._updateObject(obj, delta)\n        }\n    }\n\n    reactEvent(event) {\n        const delay = Random.getRandomFloat(0, Config.DataSource.ReactRandomDelay)\n        setTimeout(() => {\n            const obj = this.getByName(event.node.address)\n            if (obj) {\n                obj.react(event)\n                this._selectedModeHandler.reactEvent(event, this.physicalObjects)\n            }\n        }, delay)\n    }\n\n    update(dt) {\n        this._selectedModeHandler.update(dt)\n\n        super.update(dt)\n\n        // this._visNet.update(dt)\n        // this._visNet.updatePositions(this.rBush, this.objectPositions)\n    }\n\n    updateFromCamera(camera) {\n        _.each(this.physicalObjects, no => no.updateFromCamera(camera))\n    }\n\n    dispose() {\n        super.dispose()\n        clearObject(this.holder)\n        for (const otherObj of this.physicalObjects) {\n            otherObj.dispose()\n        }\n    }\n\n    setElevatedNode(name) {\n        for(const obj of this.physicalObjects) {\n            obj.elevated = (obj.name === name)\n        }\n    }\n\n    get isCurrentModeFlat() {\n        return this._selectedModeHandler.isFlat\n    }\n}\n","import _ from \"lodash\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {Random} from \"@/helpers/MathUtil\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nexport class NodeTracker {\n    constructor(prevNodeSet, currNodeSet) {\n        this.prev = prevNodeSet\n        this.curr = currNodeSet\n    }\n\n    extractEvents() {\n        const events = []\n        const addEvent = (t, node, prevNode, k) => {\n            k = k || 'address'\n            events.push(new NodeEvent(t, node, prevNode, node ? node[k] : '',\n                prevNode ? prevNode[k] : '', this.curr))\n        }\n\n        const addedNodeAddresses = _.difference(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of addedNodeAddresses) {\n            const node = this.curr.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.CREATE, node, node)\n        }\n\n        const removeNodeAddresses = _.difference(this.prev.nameSet, this.curr.nameSet)\n        for (const addr of removeNodeAddresses) {\n            const node = this.prev.byAddress[addr]\n            addEvent(NodeEvent.EVENT_TYPE.DESTROY, node, node)\n        }\n\n        const EVENT_TYPES = NodeEvent.EVENT_TYPE\n\n        const keyTypeTable = {\n            'slashPoints': EVENT_TYPES.SLASH,\n            'bond': EVENT_TYPES.BOND_CHANGE,\n            'IPAddress': EVENT_TYPES.IP_ADDRESS,\n            'status': EVENT_TYPES.STATUS,\n            'height': EVENT_TYPES.ACTIVE_BLOCK_HEIGHT,\n            'currentAward': EVENT_TYPES.AWARD,\n            'observeChains': EVENT_TYPES.OBSERVE_CHAIN,\n            'version': EVENT_TYPES.VERSION,\n        }\n\n        const commonNodes = _.intersection(this.curr.nameSet, this.prev.nameSet)\n        for (const addr of commonNodes) {\n            const prevNode = this.prev.byAddress[addr]\n            const currNode = this.curr.byAddress[addr]\n            const keys = _.union(_.keys(prevNode), _.keys(currNode));\n            const keysChanged = _.filter(keys, (key) => {\n                return !_.isEqual(prevNode[key], currNode[key]);\n            });\n            for (const key of keysChanged) {\n                const eventType = keyTypeTable[key]\n                if (eventType) {\n                    addEvent(eventType, currNode, prevNode, key)\n                }\n            }\n        }\n\n        return events\n    }\n}\n\nexport class DebugNodeJuggler {\n    constructor(period = 10) {\n        this.tick = 1\n        this.period = period\n        this.enabled = true\n        this.juggleStatus = true\n        this.juggleVersion = true\n\n        this.memorizeVersions = {}\n    }\n\n    handleNodes(nodes) {\n        if (this.enabled) {\n            if (this.tick % this.period === 0) {\n                nodes = this._juggleNodes(nodes)\n            }\n            this.tick++\n        }\n        return nodes\n    }\n\n    _juggleNodes(nodes) {\n        if(this.juggleStatus) {\n            nodes = this._juggleNodesStatus(nodes)\n        }\n        if(this.juggleVersion) {\n            nodes = this._juggleNodesVersion(nodes)\n        }\n        return nodes\n    }\n\n    _juggleNodesStatus(nodes) {\n        const nodesIn = Random.getRandomIntRange(2, 7)\n        const nodesOut = Random.getRandomIntRange(2, 7)\n\n        console.warn(`Attention! _juggleNodes: IN: ${nodesIn}, OUT: ${nodesOut}!`)\n\n        nodes.filteredByStatus(NodeStatus.Active).sampleRandomly(nodesOut).setStatusAll(NodeStatus.Standby)\n        nodes.filteredByStatus(NodeStatus.Standby).sampleRandomly(nodesIn).setStatusAll(NodeStatus.Active)\n\n        return nodes\n    }\n\n    _nextVersion(vString) {\n        return Version.fromString(vString).inc(10, 100).toString()\n    }\n\n    _juggleNodesVersion(nodes) {\n        const nUpgrade = 1\n\n        const that = this\n        _.each(nodes.nodes, node => {\n            const v = that.memorizeVersions[node.address]\n            if(v) {\n                node.version = v\n            }\n        })\n\n        nodes.sampleRandomly(nUpgrade).nodes.forEach(node => {\n            const oldVersion = node.version\n            node.version = this._nextVersion(node.version)\n            that.memorizeVersions[node.address] = node.version\n            console.warn(`Debug upgrade ${node.shortAddress}: ${oldVersion} => ${node.version}`)\n        })\n\n        return nodes\n    }\n}\n","import _ from \"lodash\";\nimport {Version} from \"@/helpers/data/Version\";\nimport {SEC_PER_BLOCK} from \"@/helpers/THORUtil\";\n\nexport const TYPICAL_BLOCK_TIME = {\n    ETH: 12.8,\n    BTC: 600,\n    BCH: 600,\n    LTC: 150,\n    BNB: 0.4,\n    THOR: 6.0,\n    DOGE: 60,\n    TERRA: 6.64,\n    GAIA: 6.85, // ATOM\n    AVAX: 3.0\n}\n\nexport class NodeSet {\n    constructor(nodes, calculate = true) {\n        this.nodes = nodes || []\n\n        this.total = this.nodes.length\n\n        if (calculate) {\n            this._nodesWithNames = _.filter(this.nodes, (item) => item.address)\n            this.byAddress = _.keyBy(this._nodesWithNames, 'address')\n            this.nameSet = _.keys(this.byAddress)\n\n            this.totalBond = _.sumBy(this.nodes, (node) => node.bond)\n            this.maxSlashNode = _.maxBy(this.nodes, (node) => node.slashPoints)\n            this.trampCount = this.total - this._nodesWithNames.length\n            this.maxAgeNode = _.maxBy(_.filter(this.nodes, node => node.activeBlockHeight && node.activeBlockHeight > 0),\n                node => node.activeBlockHeight)\n\n            this.ranks = {\n                bond: this._makeRanking('bond', 'desc'),\n                slash: this._makeRanking('slashPoints'),\n                age: this._makeRanking('activeBlockHeight'),\n                award: this._makeRanking('currentAward')\n            }\n\n            this.topHeights = this.calculateTopBlockHeight(3)\n\n            this.topVersion = this.calculateTopVersion()\n        }\n    }\n\n    _makeRanking(criteria, order = 'asc') {\n        const sortedArr = _.orderBy(this._nodesWithNames, [criteria], [order])\n        const names = _.map(sortedArr, 'address')\n        const ranks = Array.from(Array(sortedArr.length), (_, i) => i + 1)\n        return Object.fromEntries(_.zip(names, ranks))\n    }\n\n    findByAddress(address) {\n        return this.byAddress[address]\n    }\n\n    sortedNodes(attribute, asc = true) {\n        const f = asc ? 1 : -1\n        return new NodeSet(_.sortBy(this.nodes, (node) => f * node[attribute]))\n    }\n\n    filteredByStatus(status) {\n        return new NodeSet(_.filter(this.nodes, (node) => node.status === status))\n    }\n\n    get sortedByBond() {\n        return this.sortedNodes('bond')\n    }\n\n    get sortedByAge() {\n        return this.sortedNodes('statusSince')\n    }\n\n    get ipAddresses() {\n        return _.compact(_.uniq(_.map(this.nodes, n => n.IPAddress)))\n    }\n\n    sampleRandomly(n) {\n        return new NodeSet(_.sampleSize(this.nodes, n))\n    }\n\n    setStatusAll(status) {\n        _.forEach(this.nodes, n => n.status = status)\n    }\n\n    bondPercentOfTotal(bond) {\n        return (bond / this.totalBond * 100.0).toFixed(2)\n    }\n\n    get length() {\n        return this.total\n    }\n\n    _calculateTopBlockOneChain(nMin, heights) {\n        const heightSorted = _.map(Object.keys(heights), h => parseInt(h))\n        heightSorted.sort().reverse()\n        for (const height of heightSorted) {\n            const occurrences = heights[height]\n            if (occurrences >= nMin) {\n                return height\n            }\n        }\n        return null\n    }\n\n    calculateTopBlockHeight(nMin = 2) {\n        const allChains = Array.from(new Set(_.flatten(_.map(this._nodesWithNames, n => _.keys(n.observeChains)))))\n        const counters = _.map(\n            allChains, chain => _.countBy(this._nodesWithNames, n => n.observeChains[chain] ?? 0)\n        )\n\n        return _.zipObject(\n            allChains,\n            _.map(allChains, (chain, i) => this._calculateTopBlockOneChain(nMin, counters[i]))\n        )\n    }\n\n    calculateTopVersion() {\n        if (this.nodes.length === 0) {\n            return null\n        }\n        let topVersion = Version.fromString(this.nodes[0].version)\n        for (let i = 1; i < this.nodes.length; ++i) {\n            const currentVersion = Version.fromString(this.nodes[i].version)\n            if (currentVersion.greater(topVersion)) {\n                topVersion = currentVersion\n            }\n        }\n        return topVersion.toString()\n    }\n\n    estimateTimestampAtBlock(topThorHeight, no) {\n        const blockDiff = topThorHeight - no\n        return Date.now() - blockDiff * SEC_PER_BLOCK * 1000.0\n    }\n\n    getChainHeightLagBlocks(node, chain) {\n        return (this.topHeights[chain] ?? 0) - (node.observeChains[chain] ?? 0)\n    }\n\n    getChainHeightLagSeconds(node, chain) {\n        const mult = TYPICAL_BLOCK_TIME[chain] ?? 1.0\n        return mult * this.getChainHeightLagBlocks(node, chain)\n    }\n\n    getChainHeightLagAllSeconds(node) {\n        const keys = _.keys(node.observeChains)\n        if(!keys.length) {\n            return 0\n        }\n        const results = {\n            sum: 0,\n            max: 0,\n        }\n        for(const chain of keys) {\n            const lag = this.getChainHeightLagSeconds(node, chain)\n            results.max = Math.max(results.max, lag)\n            results.sum += lag\n        }\n        results.avg = results.sum / keys.length\n        return results\n    }\n}\n","import axios from \"axios\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport _ from \"lodash\";\nimport {IPAddressInfoLoader} from \"@/helpers/data/IPAddressInfo\";\n\n\nexport class URLDataSource {\n    constructor(baseUrl, period) {\n        this.period = period\n        this.baseUrl = baseUrl\n        this._isRunning = false\n        this._timer = 0\n        this.callback = () => 0\n        this.ipAddressLoader = new IPAddressInfoLoader()\n    }\n\n    run() {\n        if (this._isRunning) {\n            console.warn(`${this.toString()} is already running`)\n            return\n        }\n        this._isRunning = true\n\n        console.info(`${this.toString()} started!`)\n\n        this._tick().then()\n\n        this._timer = setInterval(() => {\n            this._tick().then()\n        }, this.period)\n    }\n\n    stop() {\n        if (this._isRunning) {\n            clearInterval(this._timer)\n            this._timer = 0\n            this._isRunning = false\n            console.info(`${this.toString()} stopped.`)\n        }\n    }\n\n    toString() {\n        return `URLDataSource(${this.baseUrl}, ${this.period} sec)`\n    }\n\n    get isRunning() {\n        return this._isRunning\n    }\n\n    async dataProcess(rawData) {\n        return rawData\n    }\n\n    get url() {\n        return this.baseUrl\n    }\n\n    async _tick() {\n        try {\n            const data = await axios.get(this.url, {\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            })\n            if (this.callback) {\n                const result = await this.dataProcess(data.data)\n                this.callback(result)\n            }\n        } catch (e) {\n            console.error(`${this.toString()} tick failed: ${e}`)\n            throw e\n        }\n    }\n}\n\nexport class NodeDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/nodes'\n    }\n\n    async dataProcess(rawData) {\n        const nodeSet = new NodeSet(\n            _.map(rawData, json => new NodeInfo(json))\n        )\n\n        let ipInfoDic = {}\n        try {\n            ipInfoDic = await this.ipAddressLoader.loadBunch(nodeSet.ipAddresses)\n        } catch (e) {\n            console.error(`failed to load IPInfo`)\n        }\n\n        for (const node of nodeSet.nodes) {\n            if (node.IPAddress) {\n                node.IPInfo = ipInfoDic[node.IPAddress]\n            }\n        }\n        return nodeSet\n    }\n}\n\nexport class LastBlockDataSource extends URLDataSource {\n    get url() {\n        return this.baseUrl + '/thorchain/lastblock'\n    }\n\n    async dataProcess(rawData) {\n        const chainHeights = {}\n        for (const chainItem of rawData) {\n            chainHeights['THOR'] = +chainItem['thorchain']\n            chainHeights[chainItem['chain']] = +chainItem['last_observed_in']\n        }\n        return chainHeights\n    }\n}\n","export const DataStorage = {\n    lastBlock: {\n        'THOR': 0,\n    },\n    lastNodes: []\n}\n","import {NodeGroup} from \"@/visual/NodeGroup\";\nimport {DebugNodeJuggler, NodeTracker} from \"@/helpers/data/NodeTracker\";\nimport {NodeEvent} from \"@/helpers/NodeEvent\";\nimport {LastBlockDataSource, NodeDataSource} from \"@/helpers/data/URLDataSource\";\nimport {Config} from \"@/config\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {emitter, EventTypes} from \"@/helpers/EventTypes\";\nimport {NodeSet} from \"@/helpers/data/NodeSet\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\n\nexport class MainScene {\n    constructor(scene, camera) {\n        this.scene = scene\n        this.camera = camera\n        this.prevNodes = new NodeSet([], false)\n        this.nodes = new NodeSet([], false)\n\n        this.nodeGroup = new NodeGroup(this.scene)\n\n        this._firstTime = true\n        this._runDataSource()\n\n        this._fullyLoaded = false\n\n        this._nodeJuggler = new DebugNodeJuggler(3)\n        this._nodeJuggler.enabled = Config.DataSource.NodeJuggler.Enabled\n\n        // this._debugSection()\n    }\n\n    _runDataSource() {\n        const baseUrl = Config.DataSource.NodesURL\n        this.nodeDataSource = new NodeDataSource(baseUrl, Config.DataSource.Nodes.PollPeriod)\n        this.nodeDataSource.callback = this.handleData.bind(this)\n        this.nodeDataSource.run()\n\n        this.lastBlockSource = new LastBlockDataSource(baseUrl, Config.DataSource.LastBlock.PollPeriod)\n        this.lastBlockSource.callback = (lastBlock) => {\n            DataStorage.lastBlock = lastBlock\n        }\n        this.lastBlockSource.run()\n    }\n\n    handleData(nodes) {\n        if (!nodes) {\n            console.error('No nodes to handle!')\n            return\n        }\n\n        if(!this._fullyLoaded) {\n            this._fullyLoaded = true\n            emitter.emit(EventTypes.FullyLoaded)\n        }\n\n        nodes = this._nodeJuggler.handleNodes(nodes)\n\n        DataStorage.lastNodes = nodes\n\n        emitter.emit(EventTypes.DataSourceTick, nodes)\n\n        this.prevNodes = this.nodes\n        this.nodes = nodes\n        const tracker = new NodeTracker(this.prevNodes, this.nodes)\n        const events = tracker.extractEvents()\n\n        console.info(`Handle Data tick! Total: ${events.length} events.`)\n\n        for (const event of events) {\n            const node = event.node\n            if (node.address) {\n                if (event.type === NodeEvent.EVENT_TYPE.CREATE) {\n                    this.nodeGroup.createNewNode(node)\n                } else if (event.type === NodeEvent.EVENT_TYPE.DESTROY) {\n                    this.nodeGroup.destroyNode(node)\n                } else {\n                    this.nodeGroup.reactEvent(event)\n                }\n            }\n        }\n\n        if (this._firstTime) {\n            for (let i = 0; i < Config.Physics.Startup.SimulationSteps; ++i) {\n                this.nodeGroup.update(Config.Physics.Startup.DeltaTime)\n            }\n            this._firstTime = false\n        }\n\n        if (events.length) {\n            emitter.emit(EventTypes.Activity)\n        }\n    }\n\n    update(delta) {\n        this.nodeGroup.update(delta)\n        this.nodeGroup.updateFromCamera(this.camera)\n    }\n\n    dispose() {\n        this.nodeDataSource.stop()\n        this.lastBlockSource.stop()\n        this.nodeGroup.dispose()\n        clearObject(this.scene)\n    }\n\n    findNodeByAddress(address) {\n        return this.nodes.byAddress[address]\n    }\n\n    pick(name) {\n        const node = this.findNodeByAddress(name)\n        console.log(node)\n    }\n}\n","export default \"/*\\n * Copyright 2014 Roman Bobniev (FatumR)\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvarying vec2 vUv;\\nuniform float time;\\n\\n#define OCTAVES  8.0\\n\\n\\nfloat rand(vec2 co){\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nfloat rand2(vec2 co){\\n    return fract(cos(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\n// Rough Value noise implementation\\nfloat valueNoiseSimple(vec2 vl) {\\n    float minStep = 1.0;\\n\\n    vec2 grid = floor(vl);\\n    vec2 gridPnt1 = grid;\\n    vec2 gridPnt2 = vec2(grid.x, grid.y + minStep);\\n    vec2 gridPnt3 = vec2(grid.x + minStep, grid.y);\\n    vec2 gridPnt4 = vec2(gridPnt3.x, gridPnt2.y);\\n\\n    float s = rand2(grid);\\n    float t = rand2(gridPnt3);\\n    float u = rand2(gridPnt2);\\n    float v = rand2(gridPnt4);\\n\\n    float x1 = smoothstep(0., 1., fract(vl.x));\\n    float interpX1 = mix(s, t, x1);\\n    float interpX2 = mix(u, v, x1);\\n\\n    float y = smoothstep(0., 1., fract(vl.y));\\n    float interpY = mix(interpX1, interpX2, y);\\n\\n    return interpY;\\n}\\n\\n\\nfloat fractalNoise(vec2 vl) {\\n    float persistance = 2.0;\\n    float amplitude = 0.5;\\n    float rez = 0.0;\\n    vec2 p = vl;\\n\\n    for (float i = 0.0; i < OCTAVES; i++) {\\n        rez += amplitude * valueNoiseSimple(p);\\n        amplitude /= persistance;\\n        p *= persistance;\\n    }\\n    return rez;\\n}\\n\\nfloat complexFBM(vec2 p) {\\n    float slow = time / 2.5;\\n    float fast = time / .5;\\n    vec2 offset1 = vec2(slow, 0.);// Main front\\n    vec2 offset2 = vec2(sin(fast)* 0.1, 0.);// sub fronts\\n\\n    return\\n    fractalNoise(p + offset1 + fractalNoise(\\n    p + fractalNoise(\\n    p + 2. * fractalNoise(p - offset2)\\n    )\\n    )\\n    );\\n}\\n\\nconst vec3 blueColor = vec3(0.029411765, 0.207843137, 0.250392157);\\nconst vec3 blackColor2 = vec3(0.00803922, 0.0203921569, 0.015686275);\\n\\nvoid main() {\\n    vec2 uv = vUv;\\n    uv = uv * vec2(2.0, 0.5) - 1.0;\\n\\n    vec3 rez = mix(blackColor2, blueColor, complexFBM(uv));\\n    gl_FragColor = vec4(rez, 1.0);\\n}\";","import * as THREE from \"three\";\n\nconst defaultQuad = new THREE.PlaneBufferGeometry(2, 2, 1, 1);\nconst defaultVertexShader = `\t\nuniform vec4 uSize; \t\t//w h t l \nvarying vec2 vUv;\n\nvoid main(){\n\tvUv = uv;\n\tvec2 transformed = \n\t    position.xy * uSize.xy \n\t    - vec2(1.,-1.) + vec2( uSize.x ,  -uSize.y ) \n\t    + vec2( uSize.w , - uSize.z ) * 2.;\n\tgl_Position = vec4( transformed , 1. , 1. );\n}\n`;\n\nconst defaultFragmentShader = `\nvarying vec2 vUv;\nuniform sampler2D uTexture;\n// uniform float time;\n\nvoid main(){\n\tgl_FragColor = texture2D( uTexture , vUv );\n}\t\n`;\n\nexport default class ScreenQuad extends THREE.Mesh {\n    constructor({\n                    width = 1,        \t//100%\n                    height = 1,\t\t\t//100%\n                    top = 0,\n                    left = 0,\n                    texture = null,\n                    fragmentShader = false\n                } = {}) {\n        super(defaultQuad, new THREE.ShaderMaterial({\n            uniforms: {\n                uTexture: {\n                    type: 't',\n                    value: texture\n                },\n                uSize: {\n                    type: 'v4',\n                    value: new THREE.Vector4(1, 1, 0, 0)\n                },\n                time: {value: 0.0},\n            },\n            vertexShader: defaultVertexShader,\n            fragmentShader: fragmentShader ? fragmentShader : defaultFragmentShader,\n            depthWrite: false\n        }));\n        this.frustumCulled = false;\n        this.renderOrder = -1;\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n\n        //cleanup\n        this._pixels = [false, false, false, false]; //w h t l\n        this._componentSetters = [\n            this.setWidth,\n            this.setHeight,\n            this.setTop,\n            this.setLeft\n        ];\n        this._components = [\n            'width',\n            'height',\n            'top',\n            'left'\n        ];\n        this.screenSize = new THREE.Vector2(1, 1);\n        this.setSize(width, height);\n        this.setOffset(top, left);\n    }\n\n    update(dt) {\n        this.material.uniforms.time.value += dt;\n    }\n\n    setScreenSize(width, height) {\n        // this.material.uniforms.uScreenSize.value.set( width , height , 1 / width , 1 / height );\n        this.screenSize.set(width, height);\n        this._pixels.forEach((p, pi) => {\n            //if a component is set in pixels, update the uniform\n            if (p) this._componentSetters[pi].call(this, this[this._components[pi]]);\n        });\n    }\n\n    setSize(width, height) {\n        this.setWidth(width);\n        this.setHeight(height);\n    }\n\n    setWidth(v) {\n        this.width = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.x = parseInt(v) / this.screenSize.x;\n            this._pixels[0] = true;\n        } else {\n            this.material.uniforms.uSize.value.x = v;\n            this._pixels[0] = false;\n        }\n    }\n\n    setHeight(v) {\n        this.height = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.y = parseInt(v) / this.screenSize.y;\n            this._pixels[1] = true;\n        } else {\n            this.material.uniforms.uSize.value.y = v;\n            this._pixels[1] = false;\n        }\n    }\n\n    setOffset(top, left) {\n        // this.material.uniforms.uSize.value.z = top;\n        // this.material.uniforms.uSize.value.w = left;\n        this.setLeft(left);\n        this.setTop(top);\n    }\n\n    setTop(v) {\n        this.top = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.z = parseInt(v) / this.screenSize.y;\n            this._pixels[2] = true;\n        } else {\n            this.material.uniforms.uSize.value.z = v;\n            this._pixels[2] = false;\n        }\n    }\n\n    setLeft(v) {\n        this.left = v;\n        if (isNaN(v)) {\n            this.material.uniforms.uSize.value.w = parseInt(v) / this.screenSize.x;\n            this._pixels[3] = true;\n        } else {\n            this.material.uniforms.uSize.value.w = v;\n            this._pixels[3] = false;\n        }\n    }\n}","// import BgShader from '@/visual/shader/bg_1.frag'\nimport BgShader from '@/visual/shader/bg_smoke.frag'\n// import BgShader from '@/visual/shader/bg_basic_swirl.frag'\nimport ScreenQuad from \"@/visual/helpers/ScreenQuad\";\nimport _ from \"lodash\";\nimport * as THREE from \"three\";\n\nclass BackgroundBase {\n    constructor(scene) {\n        this.scene = scene\n    }\n\n    install() {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    update(dt) {\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    setSize(w, h) {\n    }\n}\n\nexport class Background extends BackgroundBase {\n    constructor(scene) {\n        super(scene);\n        this.quad = new ScreenQuad({\n            fragmentShader: BgShader\n        });\n    }\n\n    install() {\n        this.scene.add(this.quad)\n    }\n\n    update(dt) {\n        this.quad.update(dt)\n    }\n\n    setSize(w, h) {\n        if(this.quad) {\n            this.quad.setScreenSize(w, h)\n        }\n    }\n}\n\nexport class BlackgroundStaticBox extends BackgroundBase {\n    constructor(scene, baseUrl, ext='jpg') {\n        super(scene);\n        this.ext = ext\n        this.baseUrl = baseUrl\n    }\n\n    install() {\n        const ext = this.ext\n        const urls = _.map([\n            `right.${ext}`, `left.${ext}`,\n            `top.${ext}`, `bottom.${ext}`,\n            `front.${ext}`, `back.${ext}`\n        ], (name) => `${this.baseUrl}/${name}`);\n\n        this.scene.background = new THREE.CubeTextureLoader().load(urls)\n    }\n}\n","<template>\n    <div class=\"control-panel\">\n        <button @click=\"setSceneMode(mode.value)\"\n                :class=\"isButtonSelectedClass(mode.value)\"\n                v-for=\"mode in modes\" :key=\"mode.value\">\n            {{ mode.text }}\n        </button>\n    </div>\n</template>\n\n<script>\n\nimport {NodeGroupModes} from \"@/visual/NodeGroup\";\nimport {Config} from \"@/config\";\n\nexport default {\n    name: 'ControlPanel',\n    components: {},\n    emits: ['mode-selected'],\n    props: {},\n    data() {\n        return {\n            selectedMode: NodeGroupModes.Normal,\n            activeOnly: false,\n        }\n    },\n    computed: {\n        modes() {\n            return [\n                {value: NodeGroupModes.Normal, text: 'NORMAL'},\n                {value: NodeGroupModes.Status, text: 'STATUS'},\n                {value: NodeGroupModes.Provider, text: 'PROVIDER'},\n                {value: NodeGroupModes.Version, text: 'VERSION'},\n                {value: NodeGroupModes.Bond, text: 'BOND'},\n                {value: NodeGroupModes.Geo, text: 'GEO'},\n            ]\n        }\n    },\n    methods: {\n        isButtonSelectedClass(modeName) {\n            return {\n                'button-selected': this.selectedMode === modeName\n            }\n        },\n\n        setSceneMode(value) {\n            this.selectedMode = value\n            this.$emit('mode-selected', value)\n        },\n    },\n    mounted() {\n        if(Config.Scene.InitialMode && Config.Scene.InitialMode !== NodeGroupModes.Normal) {\n            setTimeout(() => this.setSceneMode(Config.Scene.InitialMode), 1000.0)\n        }\n    }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.control-panel {\n    position: absolute;\n    bottom: 4px;\n    right: 4px;\n}\n\n.button-selected {\n    border-width: 2px;\n    opacity: 1;\n}\n\n.float-right {\n    float: right;\n}\n\n</style>\n","import { render } from \"./ControlPanel.vue?vue&type=template&id=3168b94a&scoped=true\"\nimport script from \"./ControlPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ControlPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ControlPanel.vue?vue&type=style&index=0&id=3168b94a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3168b94a\"]])\n\nexport default __exports__","<template>\n    <Transition name=\"shrink\">\n        <div :class=\"{'window window-left': isLeft, 'window window-right': !isLeft }\" @keyup.esc.prevent=\"close\"\n             tabindex=\"0\" ref=\"modal\">\n            <div class=\"close-button\" @click=\"close\" v-tippy content=\"Close it\"></div>\n            <h1>Node details</h1>\n            <h2>\n                <font-awesome-icon class=\"icon\"\n                                   icon=\"fa-solid fa-arrow-right\"\n                                   v-if=\"node.requestedToLeave\"\n                                   content=\"Requested to leave!\"\n                                   v-tippy\n                />\n\n                <font-awesome-icon class=\"icon\"\n                                   icon=\"fa-solid fa-arrow-down-up-lock\"\n                                   v-if=\"node.forcedToLeave\"\n                                   content=\"Forced to leave!\"\n                                   v-tippy\n                />\n\n                {{ node.address }}\n                <button class=\"copy-button\" @click=\"copyNodeAddress\" content=\"Copy address\" v-tippy>\n                    <font-awesome-icon icon=\"fa-solid fa-copy\"/>\n                </button>\n            </h2>\n\n            <div class=\"prop-grid\">\n                <div class=\"prop-box\">\n                    <div class=\"category\">Status</div>\n                    {{ statusEmoji }}\n                    <span :class=\"nodeStatusClass\">{{ node.status }}</span>\n                </div>\n                <div class=\"prop-box\">\n                    <div class=\"category\">Since</div>\n                    <div class=\"value\">\n                        <span v-if=\"isOldest\" v-tippy content=\"The oldest active node\">⌛</span>\n                        {{ statusSince }} <small>(#{{ ageRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">💽 Version</div>\n                    <div class=\"value\">\n                        <span v-if=\"isUpToDataVersion\" v-tippy content=\"Latest version\">👌</span>\n                        <span v-else v-tippy content=\"Consider upgrading your node!\">⚠️</span>\n                        {{ node.version }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">🕸️ IP address</div>\n                    <div class=\"value\">\n                        <a :href=\"ipAddressInfoLink\" target=\"_blank\">\n                            {{ node.IPAddress }}\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">📍 Location</div>\n                    <div class=\"value\">\n                        {{ node.IPInfo?.flag }}\n                        {{ node.IPInfo?.country }},\n                        {{ node.IPInfo?.city || 'unknown city' }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-if=\"hasIP\">\n                    <div class=\"category\">☁️ Provider</div>\n                    <div class=\"value\">{{ providerName }}</div>\n                </div>\n\n                <div class=\"prop-box\" v-else>\n                    <div class=\"value\">Unknown IP address</div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🌐 Explorer</div>\n                    <div class=\"value\">\n                        <a :href=\"`https://viewblock.io/thorchain/address/${node.address}`\"\n                           target=\"_blank\">Viewblock – {{ node.shortAddress }}</a>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🔒 Bond</div>\n                    <div class=\"value\">\n                        {{ nodeBond }}\n                        <small>(#{{ nodeBondRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">🏆 Awards</div>\n                    <div class=\"value\">\n                        {{ award }}\n                    </div>\n                </div>\n\n                <div class=\"prop-box\">\n                    <div class=\"category\">😈 Slash points</div>\n                    <div class=\"value\">\n                        {{ node.slashPoints }} pts.\n                        <small>(#{{ slashPointsRank }})</small>\n                    </div>\n                </div>\n\n                <div class=\"prop-box\" v-for=\"[chain, height] of Object.entries(node.observeChains)\" :key=\"chain\">\n                    <div class=\"category\">{{ chain }}</div>\n                    <div class=\"value\">\n                        <span :title=\"height\" v-if=\"chainLag(chain)\" class=\"chain-lag\">\n                            🩸 {{ chainLag(chain) }} blocks behind!\n                        </span>\n                        <span v-else>\n                            Up to date\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Transition>\n\n</template>\n\n<script>\n\nimport {shortRune} from \"@/helpers/MathUtil\";\nimport copy from \"copy-to-clipboard\";\nimport {IPAddressInfoLoader, UNKNOWN} from \"@/helpers/data/IPAddressInfo\";\nimport {DataStorage} from \"@/helpers/data/Storage\";\nimport {NodeStatus} from \"@/helpers/data/NodeInfo\";\n\nconst STATUS_PROPS = {\n    [NodeStatus.Active]: {\n        emoji: '✅',\n        class: 'status-active'\n    },\n    [NodeStatus.Standby]: {\n        emoji: '⏳',\n        class: 'status-standby',\n    },\n    [NodeStatus.Disabled]: {\n        emoji: '🔴',\n        class: 'status-disabled',\n    },\n    [NodeStatus.Whitelisted]: {\n        emoji: '📄',\n        class: 'status-whitelisted',\n    },\n}\n\nexport default {\n    name: 'NodeDetailsWindow',\n    emits: ['close'],\n    props: [\n        'node',\n        'nodeSet',\n        'isLeft'\n    ],\n    data() {\n        return {}\n    },\n    computed: {\n        topThorHeight() {\n            return DataStorage.lastBlock['THOR']\n        },\n        hasIP() {\n            return this.node.IPAddress && this.node.IPAddress !== ''\n        },\n        statusEmoji() {\n            return STATUS_PROPS[this.node.status]?.emoji\n        },\n        nodeStatusClass() {\n            return STATUS_PROPS[this.node.status]?.class\n        },\n        statusSince() {\n            const timestamp = this.nodeSet.estimateTimestampAtBlock(this.topThorHeight, this.node.statusSince)\n            try {\n                return (new Date(timestamp)).toISOString().slice(0, 10)\n            } catch {\n                return 'N/A'\n            }\n        },\n        isOldest() {\n            return true\n        },\n        ageRank() {\n            return this.nodeSet.ranks.age[this.node.address]\n        },\n        award() {\n            return shortRune(Math.round(this.node.currentAward))\n        },\n        nodeBond() {\n            return shortRune(Math.round(this.node.bond))\n        },\n        nodeBondRank() {\n            return this.nodeSet.ranks.bond[this.node.address]\n        },\n        nodeBondPercent() {\n            return this.nodeSet.bondPercentOfTotal(this.node.bond)\n        },\n        ipAddressInfoLink() {\n            return `https://www.infobyip.com/ip-${this.node.IPAddress}.html`\n        },\n        slashPointsRank() {\n            return this.nodeSet.ranks.slash[this.node.address]\n        },\n        chainLag() {\n            return (chain) => this.nodeSet.getChainHeightLagBlocks(this.node, chain)\n        },\n        providerName() {\n            const nativeName = this.node?.IPInfo?.providerName ?? UNKNOWN\n            return IPAddressInfoLoader.refineProviderName(nativeName)\n        },\n        isUpToDataVersion() {\n            return this.node.version === this.nodeSet.topVersion\n        }\n    },\n    methods: {\n        copyNodeAddress() {\n            copy(this.node.address)\n        },\n        close() {\n            this.$emit('close')\n        }\n    },\n    mounted() {\n        this.$refs.modal.focus()\n    },\n    // watch: {\n    //     nodeSet(ns) {\n    //         console.warn('node set changed', ns.ranks.bond)\n    //     }\n    // }\n}\n\n</script>\n\n<style lang=\"scss\">\n\n// todo: different variant for Portrait orientation\n.window {\n    position: fixed;\n    top: 50%;\n    transform: translate(0%, -50%);\n\n    border: 1px solid #097a7b;\n    border-radius: 12px;\n\n    background-color: rgba(0, 0, 0, 0.72);\n    backdrop-filter: blur(8px);\n    color: turquoise;\n    padding: 20px;\n\n    //max-width: 50vw;\n\n    font-size: 10pt;\n}\n\n.window-left {\n    left: 5%;\n}\n\n.window-right {\n    right: 5%;\n}\n\n.close-button {\n    float: right;\n    overflow: hidden;\n    position: relative;\n    border: none;\n    padding: 0;\n    width: 2em;\n    height: 2em;\n    border-radius: 50%;\n    background: transparent;\n    color: turquoise;\n    font: inherit;\n    text-indent: 100%;\n    cursor: pointer;\n\n    &:focus {\n        outline: solid 0 transparent;\n        box-shadow: 0 0 0 2px #8ed0f9\n    }\n\n    &:hover {\n        background: rgba(29, 161, 142, .1)\n    }\n\n    &:before, &:after {\n        position: absolute;\n        top: 15%;\n        left: calc(50% - .0625em);\n        width: .125em;\n        height: 70%;\n        border-radius: .125em;\n        transform: rotate(45deg);\n        background: currentcolor;\n        content: ''\n    }\n\n    &:after {\n        transform: rotate(-45deg);\n    }\n}\n\nh1 {\n    margin: 0;\n    padding: 0;\n    color: white;\n}\n\n.category {\n    font-family: EXO2, monospace;\n    //font-weight: bolder;\n    color: white;\n    font-size: 9pt;\n}\n\n.value {\n    font-family: EXO2, monospace;\n    font-size: 10pt;\n}\n\n.prop-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 4px;\n    color: white;\n    //font-size: 7pt;\n}\n\n.prop-box {\n    background-color: rgba(1, 0, 0, 0.5);\n    color: turquoise;\n    border-radius: 5px;\n    padding: 6px;\n    border: 1px dashed #16504a;\n    font-size: 14pt;\n}\n\n.status-standby {\n    color: #b4b4b4;\n}\n\n.status-disabled {\n    color: red;\n}\n\n.status-active {\n    color: #9cffb2;\n}\n\n.status-whitelisted {\n    color: white;\n}\n\n.chain-lag {\n    color: orangered;\n}\n\n.copy-button {\n    display: inline-block;\n    background: rgba(0, 0, 0, 0.5);\n    //border-radius: 10px;\n    padding: 4px;\n    font-size: 10pt;\n    color: white;\n}\n\n.icon {\n    padding: 2px;\n}\n\nsmall {\n    color: #34bfb1;\n}\n\n</style>\n","import { render } from \"./NodeDetailsWindow.vue?vue&type=template&id=4e150931\"\nimport script from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\nexport * from \"./NodeDetailsWindow.vue?vue&type=script&lang=js\"\n\nimport \"./NodeDetailsWindow.vue?vue&type=style&index=0&id=4e150931&lang=scss\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import * as THREE from \"three\";\nimport {Config} from \"@/config\";\nimport CameraControls from \"camera-controls\";\nimport TWEEN from \"tween.js\";\n\nexport class CameraController {\n    constructor(domElement, center = new THREE.Vector3()) {\n        this.domElement = domElement\n        this.center = center\n        this._createCamera()\n        this._createCameraControl()\n        this._animating = false\n        this.controlsEnabled = true\n    }\n\n    reset() {\n        this.controls.reset()\n    }\n\n    projectToScreen(worldVector) {\n        this.camera.updateProjectionMatrix()\n        return worldVector.project(this.camera)\n    }\n\n    _createCamera() {\n        this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight,\n            0.001, Config.Controls.Camera.Distance.Max * 2);\n        // this.camera = new THREE.OrthographicCamera()\n        this.camera.position.z = Config.Controls.Camera.Distance.Start\n    }\n\n    _createCameraControl() {\n        const controls = this.controls = new CameraControls(this.camera, this.domElement);\n        const cfg = Config.Controls.Camera\n\n        controls.dragToOffset = true\n        controls.minDistance = cfg.Distance.Min\n        controls.maxDistance = cfg.Distance.Max\n        this.camera.position.z = cfg.Distance.Start\n\n        controls.minAzimuthAngle = THREE.MathUtils.degToRad(-cfg.AzimuthAngleLimit)\n        controls.maxAzimuthAngle = THREE.MathUtils.degToRad(cfg.AzimuthAngleLimit)\n\n        controls.minPolarAngle = THREE.MathUtils.degToRad(-cfg.PolarAngleLimit + 90)\n        controls.maxPolarAngle = THREE.MathUtils.degToRad(cfg.PolarAngleLimit + 90)\n\n        controls.update(0)\n    }\n\n    update(delta) {\n        if (this.controlsEnabled && !this._animating && !this.cameraInspectsObject) {\n            this.controls.update(delta);\n        }\n        // todo: if we look at the object, keep tracking it while it moves around\n    }\n\n    onResize() {\n        const canvas = this.domElement;\n        const width = canvas.clientWidth;\n        const height = canvas.clientHeight;\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    }\n\n    _getEndQuaternion(target, lookAtThis) {\n        const currPos = this.camera.position.clone()\n        const currQ = this.camera.quaternion.clone()\n\n        this.camera.position.copy(target)\n        this.camera.lookAt(lookAtThis)\n\n        const endQuaternion = this.camera.quaternion.clone()\n\n        this.camera.position.copy(currPos)\n        this.camera.quaternion.copy(currQ)\n\n        return endQuaternion\n    }\n\n    cameraLookAtNode(nodeObj, flat) {\n        if (!this.cameraInspectsObject) {\n            this.oldCameraPos = this.camera.position.clone()\n            this.oldCameraQuaternion = this.camera.quaternion.clone()\n            this.cameraInspectsObject = true\n        }\n\n        this._animating = true\n\n        const cfg = Config.Controls.Camera.Animation\n\n        const that = this\n\n        let target\n        let targetLookAt\n\n        if(flat) {\n            target = nodeObj.o.position.clone().add(new THREE.Vector3(0, 0, cfg.DistanceWhenZoomed))\n            targetLookAt = nodeObj.o.position.clone()\n        } else {\n            const deltaVector = nodeObj.o.position.clone().normalize().multiplyScalar(cfg.DistanceWhenZoomed)\n            target = nodeObj.o.position.clone().add(deltaVector)\n            targetLookAt = nodeObj.o.position.clone()\n        }\n\n        new TWEEN.Tween(this.camera.position)\n            .to(target, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .onComplete(() => {\n                that._animating = false\n            })\n            .start();\n\n        const endQuaternion = this._getEndQuaternion(target, targetLookAt)\n        new TWEEN.Tween(this.camera.quaternion)\n            .to(endQuaternion, cfg.Duration)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start()\n    }\n\n    restoreCamera() {\n        if (this.cameraInspectsObject) {\n            this.cameraInspectsObject = false\n            this._animating = true\n\n            const that = this\n            const animTime = Config.Controls.Camera.Animation.Duration\n            new TWEEN.Tween(this.camera.position)\n                .to(this.oldCameraPos, Config.Controls.Camera.Animation.Duration)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .onUpdate(function () {\n                    // that.camera.position.copy(this);\n                    // that.camera.lookAt(that.center)\n                })\n                .onComplete(() => {\n                    that._animating = false\n                })\n                .start();\n\n            const endQuaternion = this._getEndQuaternion(this.oldCameraPos, this.center)\n            new TWEEN.Tween(this.camera.quaternion)\n                .to(endQuaternion, animTime)\n                .easing(TWEEN.Easing.Sinusoidal.InOut)\n                .start()\n        }\n    }\n\n    dispose() {\n        this.controls.dispose()\n    }\n}\n","<template>\n    <div class=\"loading-indicator\">Loading.<span>{{ dots }}</span> </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'LoadingIndicator',\n    data() {\n        return {\n            dots: ''\n        }\n    },\n    methods: {\n        tick() {\n            this.dots += '.'\n            if(this.dots.length >= 3) {\n                this.dots = ''\n            }\n        }\n    },\n    mounted() {\n        this.timer = setInterval(this.tick, 200.0)\n    },\n    beforeUnmount() {\n        clearInterval(this.timer)\n    }\n}\n\n</script>\n\n<style scoped>\n    .loading-indicator {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 1.5rem;\n        color: white;\n    }\n</style>","import { render } from \"./LoadingIndicator.vue?vue&type=template&id=3618bf7b&scoped=true\"\nimport script from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingIndicator.vue?vue&type=script&lang=js\"\n\nimport \"./LoadingIndicator.vue?vue&type=style&index=0&id=3618bf7b&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3618bf7b\"]])\n\nexport default __exports__","/**\n * @author Mark Kellogg - http://www.github.com/mkkellogg\n */\n\n//=======================================\n// Trail Renderer\n//=======================================\nimport * as THREE from \"three\"\n\nexport class TrailRenderer extends THREE.Object3D {\n    constructor(scene, orientToMovement) {\n        super();\n\n        this.orientToMovement = !!orientToMovement;\n\n        this.scene = scene;\n\n        this.geometry = null;\n        this.mesh = null;\n        this.nodeCenters = null;\n\n        this.lastNodeCenter = null;\n        this.currentNodeCenter = null;\n        this.lastOrientationDir = null;\n        this.nodeIDs = null;\n        this.currentLength = 0;\n        this.currentEnd = 0;\n        this.currentNodeID = 0;\n\n    }\n}\n\nTrailRenderer.MaxHeadVertices = 128;\nTrailRenderer.LocalOrientationTangent = new THREE.Vector3(1, 0, 0);\nTrailRenderer.LocalOrientationDirection = new THREE.Vector3(0, 0, -1);\nTrailRenderer.LocalHeadOrigin = new THREE.Vector3(0, 0, 0);\nTrailRenderer.PositionComponentCount = 3;\nTrailRenderer.UVComponentCount = 2;\nTrailRenderer.IndicesPerFace = 3;\nTrailRenderer.FacesPerQuad = 2;\n\nTrailRenderer.Shader = {};\n\nTrailRenderer.Shader.BaseVertexVars = [\n\n    \"attribute float nodeID;\",\n    \"attribute float nodeVertexID;\",\n    \"attribute vec3 nodeCenter;\",\n\n    \"uniform float minID;\",\n    \"uniform float maxID;\",\n    \"uniform float trailLength;\",\n    \"uniform float maxTrailLength;\",\n    \"uniform float verticesPerNode;\",\n    \"uniform vec2 textureTileFactor;\",\n\n    \"uniform vec4 headColor;\",\n    \"uniform vec4 tailColor;\",\n\n    \"varying vec4 vColor;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedVertexVars = [\n\n    TrailRenderer.Shader.BaseVertexVars,\n    \"varying vec2 vUV;\",\n    \"uniform float dragTexture;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseFragmentVars = [\n\n    \"varying vec4 vColor;\",\n    \"uniform sampler2D texture;\",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedFragmentVars = [\n\n    TrailRenderer.Shader.BaseFragmentVars,\n    \"varying vec2 vUV;\"\n\n].join(\"\\n\");\n\n\nTrailRenderer.Shader.VertexShaderCore = [\n\n    \"float fraction = ( maxID - nodeID ) / ( maxID - minID );\",\n    \"vColor = ( 1.0 - fraction ) * headColor + fraction * tailColor;\",\n    \"vec4 realPosition = vec4( ( 1.0 - fraction ) * position.xyz + fraction * nodeCenter.xyz, 1.0 ); \",\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseVertexShader = [\n\n    TrailRenderer.Shader.BaseVertexVars,\n\n    \"void main() { \",\n\n    TrailRenderer.Shader.VertexShaderCore,\n    \"gl_Position = projectionMatrix * viewMatrix * realPosition;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.BaseFragmentShader = [\n\n    TrailRenderer.Shader.BaseFragmentVars,\n\n    \"void main() { \",\n\n    \"gl_FragColor = vColor;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedVertexShader = [\n\n    TrailRenderer.Shader.TexturedVertexVars,\n\n    \"void main() { \",\n\n    TrailRenderer.Shader.VertexShaderCore,\n    \"float s = 0.0;\",\n    \"float t = 0.0;\",\n    \"if ( dragTexture == 1.0 ) { \",\n    \"   s = fraction *  textureTileFactor.s; \",\n    \" \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;\",\n    \"} else { \",\n    \"\ts = nodeID / maxTrailLength * textureTileFactor.s;\",\n    \" \tt = ( nodeVertexID / verticesPerNode ) * textureTileFactor.t;\",\n    \"}\",\n    \"vUV = vec2( s, t ); \",\n    \"gl_Position = projectionMatrix * viewMatrix * realPosition;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.Shader.TexturedFragmentShader = [\n\n    TrailRenderer.Shader.TexturedFragmentVars,\n\n    \"void main() { \",\n\n    \"vec4 textureColor = texture2D( texture, vUV );\",\n    \"gl_FragColor = vColor * textureColor;\",\n\n    \"}\"\n\n].join(\"\\n\");\n\nTrailRenderer.createMaterial = function (vertexShader, fragmentShader, customUniforms) {\n\n    customUniforms = customUniforms || {};\n\n    customUniforms.trailLength = {type: \"f\", value: null};\n    customUniforms.verticesPerNode = {type: \"f\", value: null};\n    customUniforms.minID = {type: \"f\", value: null};\n    customUniforms.maxID = {type: \"f\", value: null};\n    customUniforms.dragTexture = {type: \"f\", value: null};\n    customUniforms.maxTrailLength = {type: \"f\", value: null};\n    customUniforms.textureTileFactor = {type: \"v2\", value: null};\n\n    customUniforms.headColor = {type: \"v4\", value: new THREE.Vector4()};\n    customUniforms.tailColor = {type: \"v4\", value: new THREE.Vector4()};\n\n    vertexShader = vertexShader || TrailRenderer.Shader.BaseVertexShader;\n    fragmentShader = fragmentShader || TrailRenderer.Shader.BaseFragmentShader;\n\n    return new THREE.ShaderMaterial(\n        {\n            uniforms: customUniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n\n            transparent: true,\n            alphaTest: 0.5,\n\n            blending: THREE.CustomBlending,\n            blendSrc: THREE.SrcAlphaFactor,\n            blendDst: THREE.OneMinusSrcAlphaFactor,\n            blendEquation: THREE.AddEquation,\n\n            depthTest: true,\n            depthWrite: false,\n\n            side: THREE.DoubleSide\n        });\n\n}\n\nTrailRenderer.createBaseMaterial = function (customUniforms) {\n\n    return this.createMaterial(TrailRenderer.Shader.BaseVertexShader, TrailRenderer.Shader.BaseFragmentShader, customUniforms);\n\n}\n\nTrailRenderer.createTexturedMaterial = function (customUniforms) {\n\n    customUniforms = {};\n    customUniforms.texture = {type: \"t\", value: null};\n\n    return this.createMaterial(TrailRenderer.Shader.TexturedVertexShader, TrailRenderer.Shader.TexturedFragmentShader, customUniforms);\n\n}\n\nTrailRenderer.prototype.initialize = function (material, length, dragTexture, localHeadWidth, localHeadGeometry, targetObject) {\n\n    this.deactivate();\n    this.destroyMesh();\n\n    this.length = (length > 0) ? length + 1 : 0;\n    this.dragTexture = (!dragTexture) ? 0 : 1;\n    this.targetObject = targetObject;\n\n    this.initializeLocalHeadGeometry(localHeadWidth, localHeadGeometry);\n\n    this.nodeIDs = [];\n    this.nodeCenters = [];\n\n    for (var i = 0; i < this.length; i++) {\n\n        this.nodeIDs[i] = -1;\n        this.nodeCenters[i] = new THREE.Vector3();\n\n    }\n\n    this.material = material;\n\n    this.initializeGeometry();\n    this.initializeMesh();\n\n    this.material.uniforms.trailLength.value = 0;\n    this.material.uniforms.minID.value = 0;\n    this.material.uniforms.maxID.value = 0;\n    this.material.uniforms.dragTexture.value = this.dragTexture;\n    this.material.uniforms.maxTrailLength.value = this.length;\n    this.material.uniforms.verticesPerNode.value = this.VerticesPerNode;\n    this.material.uniforms.textureTileFactor.value = new THREE.Vector2(1.0, 1.0);\n\n    this.reset();\n\n}\n\nTrailRenderer.prototype.initializeLocalHeadGeometry = function (localHeadWidth, localHeadGeometry) {\n\n    this.localHeadGeometry = [];\n\n    if (!localHeadGeometry) {\n\n        var halfWidth = localHeadWidth || 1.0;\n        halfWidth = halfWidth / 2.0;\n\n        this.localHeadGeometry.push(new THREE.Vector3(-halfWidth, 0, 0));\n        this.localHeadGeometry.push(new THREE.Vector3(halfWidth, 0, 0));\n\n        this.VerticesPerNode = 2;\n\n    } else {\n\n        this.VerticesPerNode = 0;\n        for (var i = 0; i < localHeadGeometry.length && i < TrailRenderer.MaxHeadVertices; i++) {\n\n            var vertex = localHeadGeometry[i];\n\n            if (vertex && vertex instanceof THREE.Vector3) {\n\n                var vertexCopy = new THREE.Vector3();\n\n                vertexCopy.copy(vertex);\n\n                this.localHeadGeometry.push(vertexCopy);\n                this.VerticesPerNode++;\n\n            }\n\n        }\n\n    }\n\n    this.FacesPerNode = (this.VerticesPerNode - 1) * 2;\n    this.FaceIndicesPerNode = this.FacesPerNode * 3;\n\n}\n\nTrailRenderer.prototype.initializeGeometry = function () {\n\n    this.vertexCount = this.length * this.VerticesPerNode;\n    this.faceCount = this.length * this.FacesPerNode;\n\n    var geometry = new THREE.BufferGeometry();\n\n    var nodeIDs = new Float32Array(this.vertexCount);\n    var nodeVertexIDs = new Float32Array(this.vertexCount * this.VerticesPerNode);\n    var positions = new Float32Array(this.vertexCount * TrailRenderer.PositionComponentCount);\n    var nodeCenters = new Float32Array(this.vertexCount * TrailRenderer.PositionComponentCount);\n    var uvs = new Float32Array(this.vertexCount * TrailRenderer.UVComponentCount);\n    var indices = new Uint32Array(this.faceCount * TrailRenderer.IndicesPerFace);\n\n    var nodeIDAttribute = new THREE.BufferAttribute(nodeIDs, 1);\n    nodeIDAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeID', nodeIDAttribute);\n\n    var nodeVertexIDAttribute = new THREE.BufferAttribute(nodeVertexIDs, 1);\n    nodeVertexIDAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeVertexID', nodeVertexIDAttribute);\n\n    var nodeCenterAttribute = new THREE.BufferAttribute(nodeCenters, TrailRenderer.PositionComponentCount);\n    nodeCenterAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('nodeCenter', nodeCenterAttribute);\n\n    var positionAttribute = new THREE.BufferAttribute(positions, TrailRenderer.PositionComponentCount);\n    positionAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('position', positionAttribute);\n\n    var uvAttribute = new THREE.BufferAttribute(uvs, TrailRenderer.UVComponentCount);\n    uvAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setAttribute('uv', uvAttribute);\n\n    var indexAttribute = new THREE.BufferAttribute(indices, 1);\n    indexAttribute.setUsage(THREE.DynamicDrawUsage);\n    geometry.setIndex(indexAttribute);\n\n    this.geometry = geometry;\n\n}\n\nTrailRenderer.prototype.zeroVertices = function () {\n\n    var positions = this.geometry.getAttribute('position');\n\n    for (var i = 0; i < this.vertexCount; i++) {\n\n        var index = i * 3;\n\n        positions.array[index] = 0;\n        positions.array[index + 1] = 0;\n        positions.array[index + 2] = 0;\n\n    }\n\n    positions.needsUpdate = true;\n    positions.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.zeroIndices = function () {\n\n    var indices = this.geometry.getIndex();\n\n    for (var i = 0; i < this.faceCount; i++) {\n\n        var index = i * 3;\n\n        indices.array[index] = 0;\n        indices.array[index + 1] = 0;\n        indices.array[index + 2] = 0;\n\n    }\n\n    indices.needsUpdate = true;\n    indices.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.formInitialFaces = function () {\n\n    this.zeroIndices();\n\n    var indices = this.geometry.getIndex();\n\n    for (var i = 0; i < this.length - 1; i++) {\n\n        this.connectNodes(i, i + 1);\n\n    }\n\n    indices.needsUpdate = true;\n    indices.updateRange.count = -1;\n\n}\n\nTrailRenderer.prototype.initializeMesh = function () {\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.dynamic = true;\n    this.mesh.matrixAutoUpdate = false;\n\n}\n\nTrailRenderer.prototype.destroyMesh = function () {\n\n    if (this.mesh) {\n\n        this.scene.remove(this.mesh);\n        this.mesh = null;\n\n    }\n\n}\n\nTrailRenderer.prototype.reset = function () {\n\n    this.currentLength = 0;\n    this.currentEnd = -1;\n\n    this.lastNodeCenter = null;\n    this.currentNodeCenter = null;\n    this.lastOrientationDir = null;\n\n    this.currentNodeID = 0;\n\n    this.formInitialFaces();\n    this.zeroVertices();\n\n    this.geometry.setDrawRange(0, 0);\n\n}\n\nTrailRenderer.prototype.updateUniforms = function () {\n\n    if (this.currentLength < this.length) {\n\n        this.material.uniforms.minID.value = 0;\n\n    } else {\n\n        this.material.uniforms.minID.value = this.currentNodeID - this.length;\n\n    }\n    this.material.uniforms.maxID.value = this.currentNodeID;\n    this.material.uniforms.trailLength.value = this.currentLength;\n    this.material.uniforms.maxTrailLength.value = this.length;\n    this.material.uniforms.verticesPerNode.value = this.VerticesPerNode;\n\n}\n\nTrailRenderer.prototype.advance = function () {\n    var tempMatrix4 = new THREE.Matrix4();\n\n    return function advance() {\n\n        this.targetObject.updateMatrixWorld();\n        tempMatrix4.copy(this.targetObject.matrixWorld);\n\n        this.advanceWithTransform(tempMatrix4);\n\n        this.updateUniforms();\n    }\n\n}();\n\nTrailRenderer.prototype.advanceWithPositionAndOrientation = function (nextPosition, orientationTangent) {\n\n    this.advanceGeometry({position: nextPosition, tangent: orientationTangent}, null);\n\n}\n\nTrailRenderer.prototype.advanceWithTransform = function (transformMatrix) {\n\n    this.advanceGeometry(null, transformMatrix);\n\n}\n\nTrailRenderer.prototype.advanceGeometry = function () {\n\n    return function advanceGeometry(positionAndOrientation, transformMatrix) {\n\n        var nextIndex = this.currentEnd + 1 >= this.length ? 0 : this.currentEnd + 1;\n\n        if (transformMatrix) {\n\n            this.updateNodePositionsFromTransformMatrix(nextIndex, transformMatrix);\n\n        } else {\n\n            this.updateNodePositionsFromOrientationTangent(nextIndex, positionAndOrientation.position, positionAndOrientation.tangent);\n        }\n\n        if (this.currentLength >= 1) {\n\n            this.connectNodes(this.currentEnd, nextIndex);\n\n            if (this.currentLength >= this.length) {\n\n                var disconnectIndex = this.currentEnd + 1 >= this.length ? 0 : this.currentEnd + 1;\n                this.disconnectNodes(disconnectIndex);\n\n            }\n\n        }\n\n        if (this.currentLength < this.length) {\n\n            this.currentLength++;\n\n        }\n\n        this.currentEnd++;\n        if (this.currentEnd >= this.length) {\n\n            this.currentEnd = 0;\n\n        }\n\n        if (this.currentLength >= 1) {\n\n            if (this.currentLength < this.length) {\n\n                this.geometry.setDrawRange(0, (this.currentLength - 1) * this.FaceIndicesPerNode);\n\n            } else {\n\n                this.geometry.setDrawRange(0, this.currentLength * this.FaceIndicesPerNode);\n\n            }\n\n        }\n\n        this.updateNodeID(this.currentEnd, this.currentNodeID);\n        this.currentNodeID++;\n    }\n\n}();\n\nTrailRenderer.prototype.updateHead = function () {\n\n    var tempMatrix4 = new THREE.Matrix4();\n\n    return function advance() {\n\n        if (this.currentEnd < 0) return;\n\n        this.targetObject.updateMatrixWorld();\n        tempMatrix4.copy(this.targetObject.matrixWorld);\n\n        this.updateNodePositionsFromTransformMatrix(this.currentEnd, tempMatrix4);\n    }\n\n}();\n\nTrailRenderer.prototype.updateNodeID = function (nodeIndex, id) {\n\n    this.nodeIDs[nodeIndex] = id;\n\n    var nodeIDs = this.geometry.getAttribute('nodeID');\n    var nodeVertexIDs = this.geometry.getAttribute('nodeVertexID');\n\n    for (var i = 0; i < this.VerticesPerNode; i++) {\n\n        var baseIndex = nodeIndex * this.VerticesPerNode + i;\n        nodeIDs.array[baseIndex] = id;\n        nodeVertexIDs.array[baseIndex] = i;\n\n    }\n\n    nodeIDs.needsUpdate = true;\n    nodeVertexIDs.needsUpdate = true;\n\n    nodeIDs.updateRange.offset = nodeIndex * this.VerticesPerNode;\n    nodeIDs.updateRange.count = this.VerticesPerNode;\n\n    nodeVertexIDs.updateRange.offset = nodeIndex * this.VerticesPerNode;\n    nodeVertexIDs.updateRange.count = this.VerticesPerNode;\n\n}\n\nTrailRenderer.prototype.updateNodeCenter = function (nodeIndex, nodeCenter) {\n\n    this.lastNodeCenter = this.currentNodeCenter;\n\n    this.currentNodeCenter = this.nodeCenters[nodeIndex];\n    this.currentNodeCenter.copy(nodeCenter);\n\n    var nodeCenters = this.geometry.getAttribute('nodeCenter');\n\n    for (var i = 0; i < this.VerticesPerNode; i++) {\n\n        var baseIndex = (nodeIndex * this.VerticesPerNode + i) * 3;\n        nodeCenters.array[baseIndex] = nodeCenter.x;\n        nodeCenters.array[baseIndex + 1] = nodeCenter.y;\n        nodeCenters.array[baseIndex + 2] = nodeCenter.z;\n\n    }\n\n    nodeCenters.needsUpdate = true;\n\n    nodeCenters.updateRange.offset = nodeIndex * this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n    nodeCenters.updateRange.count = this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n\n}\n\nTrailRenderer.prototype.updateNodePositionsFromOrientationTangent = function () {\n\n    var tempQuaternion = new THREE.Quaternion();\n    var tempOffset = new THREE.Vector3();\n    var tempLocalHeadGeometry = [];\n\n    for (var i = 0; i < TrailRenderer.MaxHeadVertices; i++) {\n\n        var vertex = new THREE.Vector3();\n        tempLocalHeadGeometry.push(vertex);\n\n    }\n\n    return function updateNodePositionsFromOrientationTangent(nodeIndex, nodeCenter, orientationTangent) {\n\n        var positions = this.geometry.getAttribute('position');\n\n        this.updateNodeCenter(nodeIndex, nodeCenter);\n\n        tempOffset.copy(nodeCenter);\n        tempOffset.sub(TrailRenderer.LocalHeadOrigin);\n        tempQuaternion.setFromUnitVectors(TrailRenderer.LocalOrientationTangent, orientationTangent);\n\n        for (var i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var vertex = tempLocalHeadGeometry[i];\n            vertex.copy(this.localHeadGeometry[i]);\n            vertex.applyQuaternion(tempQuaternion);\n            vertex.add(tempOffset);\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var positionIndex = ((this.VerticesPerNode * nodeIndex) + i) * TrailRenderer.PositionComponentCount;\n            var transformedHeadVertex = tempLocalHeadGeometry[i];\n\n            positions.array[positionIndex] = transformedHeadVertex.x;\n            positions.array[positionIndex + 1] = transformedHeadVertex.y;\n            positions.array[positionIndex + 2] = transformedHeadVertex.z;\n\n        }\n\n        positions.needsUpdate = true;\n\n    }\n\n}();\n\nTrailRenderer.prototype.updateNodePositionsFromTransformMatrix = function () {\n    var tempMatrix3 = new THREE.Matrix3();\n    var tempQuaternion = new THREE.Quaternion();\n    var tempPosition = new THREE.Vector3();\n    var tempOffset = new THREE.Vector3();\n    var worldOrientation = new THREE.Vector3();\n    var tempDirection = new THREE.Vector3();\n\n    var tempLocalHeadGeometry = [];\n    for (var i = 0; i < TrailRenderer.MaxHeadVertices; i++) {\n\n        var vertex = new THREE.Vector3();\n        tempLocalHeadGeometry.push(vertex);\n\n    }\n\n    function getMatrix3FromMatrix4(matrix3, matrix4) {\n\n        var e = matrix4.elements;\n        matrix3.set(e[0], e[1], e[2],\n            e[4], e[5], e[6],\n            e[8], e[9], e[10]);\n\n    }\n\n    return function updateNodePositionsFromTransformMatrix(nodeIndex, transformMatrix) {\n\n        var positions = this.geometry.getAttribute('position');\n\n        tempPosition.set(0, 0, 0);\n        tempPosition.applyMatrix4(transformMatrix);\n        this.updateNodeCenter(nodeIndex, tempPosition);\n\n        var vertex\n        for (var i = 0; i < this.localHeadGeometry.length; i++) {\n\n             vertex = tempLocalHeadGeometry[i];\n            vertex.copy(this.localHeadGeometry[i]);\n\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n             vertex = tempLocalHeadGeometry[i];\n            vertex.applyMatrix4(transformMatrix);\n\n        }\n\n        if (this.lastNodeCenter && this.orientToMovement) {\n\n            getMatrix3FromMatrix4(tempMatrix3, transformMatrix);\n            worldOrientation.set(0, 0, -1);\n            worldOrientation.applyMatrix3(tempMatrix3);\n\n            tempDirection.copy(this.currentNodeCenter);\n            tempDirection.sub(this.lastNodeCenter);\n            tempDirection.normalize();\n\n            if (tempDirection.lengthSq() <= .0001 && this.lastOrientationDir) {\n\n                tempDirection.copy(this.lastOrientationDir);\n            }\n\n            if (tempDirection.lengthSq() > .0001) {\n\n                if (!this.lastOrientationDir) this.lastOrientationDir = new THREE.Vector3();\n\n                tempQuaternion.setFromUnitVectors(worldOrientation, tempDirection);\n\n                tempOffset.copy(this.currentNodeCenter);\n\n                for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n                     vertex = tempLocalHeadGeometry[i];\n                    vertex.sub(tempOffset);\n                    vertex.applyQuaternion(tempQuaternion);\n                    vertex.add(tempOffset);\n\n                }\n            }\n\n        }\n\n        for ( i = 0; i < this.localHeadGeometry.length; i++) {\n\n            var positionIndex = ((this.VerticesPerNode * nodeIndex) + i) * TrailRenderer.PositionComponentCount;\n            var transformedHeadVertex = tempLocalHeadGeometry[i];\n\n            positions.array[positionIndex] = transformedHeadVertex.x;\n            positions.array[positionIndex + 1] = transformedHeadVertex.y;\n            positions.array[positionIndex + 2] = transformedHeadVertex.z;\n\n        }\n\n        positions.needsUpdate = true;\n\n        positions.updateRange.offset = nodeIndex * this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n        positions.updateRange.count = this.VerticesPerNode * TrailRenderer.PositionComponentCount;\n    }\n\n}();\n\nTrailRenderer.prototype.connectNodes = function () {\n\n    var returnObj = {\n\n        \"attribute\": null,\n        \"offset\": 0,\n        \"count\": -1\n\n    };\n\n    return function connectNodes(srcNodeIndex, destNodeIndex) {\n\n        var indices = this.geometry.getIndex();\n\n        for (var i = 0; i < this.localHeadGeometry.length - 1; i++) {\n\n            var srcVertexIndex = (this.VerticesPerNode * srcNodeIndex) + i;\n            var destVertexIndex = (this.VerticesPerNode * destNodeIndex) + i;\n\n            var faceIndex = ((srcNodeIndex * this.FacesPerNode) + (i * TrailRenderer.FacesPerQuad)) * TrailRenderer.IndicesPerFace;\n\n            indices.array[faceIndex] = srcVertexIndex;\n            indices.array[faceIndex + 1] = destVertexIndex;\n            indices.array[faceIndex + 2] = srcVertexIndex + 1;\n\n            indices.array[faceIndex + 3] = destVertexIndex;\n            indices.array[faceIndex + 4] = destVertexIndex + 1;\n            indices.array[faceIndex + 5] = srcVertexIndex + 1;\n\n        }\n\n        indices.needsUpdate = true;\n        indices.updateRange.count = -1;\n\n        returnObj.attribute = indices;\n        returnObj.offset = srcNodeIndex * this.FacesPerNode * TrailRenderer.IndicesPerFace;\n        returnObj.count = this.FacesPerNode * TrailRenderer.IndicesPerFace;\n\n        return returnObj;\n\n    }\n}();\n\nTrailRenderer.prototype.disconnectNodes = function () {\n\n    var returnObj = {\n\n        \"attribute\": null,\n        \"offset\": 0,\n        \"count\": -1\n\n    };\n\n    return function disconnectNodes(srcNodeIndex) {\n\n        var indices = this.geometry.getIndex();\n\n        for (var i = 0; i < this.localHeadGeometry.length - 1; i++) {\n\n            // var srcVertexIndex = (this.VerticesPerNode * srcNodeIndex) + i;\n\n            var faceIndex = ((srcNodeIndex * this.FacesPerNode) + (i * TrailRenderer.FacesPerQuad)) * TrailRenderer.IndicesPerFace;\n\n            indices.array[faceIndex] = 0;\n            indices.array[faceIndex + 1] = 0;\n            indices.array[faceIndex + 2] = 0;\n\n            indices.array[faceIndex + 3] = 0;\n            indices.array[faceIndex + 4] = 0;\n            indices.array[faceIndex + 5] = 0;\n\n        }\n\n        indices.needsUpdate = true;\n        indices.updateRange.count = -1;\n\n        returnObj.attribute = indices;\n        returnObj.offset = srcNodeIndex * this.FacesPerNode * TrailRenderer.IndicesPerFace;\n        returnObj.count = this.FacesPerNode * TrailRenderer.IndicesPerFace;\n\n        return returnObj;\n\n    }\n\n}();\n\nTrailRenderer.prototype.deactivate = function () {\n\n    if (this.isActive) {\n\n        this.scene.remove(this.mesh);\n        this.isActive = false;\n\n    }\n\n}\n\nTrailRenderer.prototype.activate = function () {\n\n    if (!this.isActive) {\n\n        this.scene.add(this.mesh);\n        this.isActive = true;\n\n    }\n\n}\n\n\n","import * as THREE from \"three\";\nimport {TrailRenderer} from \"@/visual/helpers/TrailRenderer\";\nimport {Colors} from \"@/config\";\n\nexport class TrailTesting {\n    constructor(scene) {\n        this.scene = scene\n\n        this.baseTrailMaterial = TrailRenderer.createBaseMaterial();\n\n        this.material = this.baseTrailMaterial\n        this.material.depthWrite = false\n\n        this.circlePoints = this.makeCircle()\n        this.makeTrailTarget(this.circlePoints)\n        this.makeTrail()\n        this._makeFlyState()\n    }\n\n    makeTrail() {\n        const trailLength = 300.0\n        this.trail = new TrailRenderer(this.scene, false);\n        this.trail.initialize(\n            this.material,\n            Math.floor(trailLength),\n            0.0, 0,\n            this.circlePoints,\n            this.trailTarget);\n\n        this.updateColors(\n            new THREE.Color(Colors.LightningBlue),\n            new THREE.Color(Colors.YggdrasilGreen)\n        )\n        this.trail.activate();\n    }\n\n    updateColors(headColor, trialColor) {\n        this.material.uniforms.headColor.value.copy(headColor);\n        this.material.uniforms.tailColor.value.copy(trialColor);\n    }\n\n    _makeFlyState() {\n        this.lastTrailUpdateTime = 0.0\n        this._t = 0.0\n\n        this.lastDirection = new THREE.Vector3();\n        this.lastTargetPosition = new THREE.Vector3();\n        this.lastRotationMatrix = new THREE.Matrix4();\n        this.currentTargetPosition = new THREE.Vector3();\n        this.currentDirection = new THREE.Vector3();\n\n        this.tempQuaternion = new THREE.Quaternion();\n\n        this.baseForward = new THREE.Vector3(0, 0, -1);\n        this.tempUp = new THREE.Vector3();\n\n        this.tempRotationMatrix = new THREE.Matrix4();\n        this.tempTranslationMatrix = new THREE.Matrix4();\n\n    }\n\n    update(dt) {\n        if(dt <= 0) {\n            return\n        }\n\n        this._t += dt\n\n        const areaScale = 100;\n        const trailGrowTime = 10.0 * 1000.0\n\n        if (this._t - this.lastTrailUpdateTime > trailGrowTime) {\n            this.trail.advance();\n            this.lastTrailUpdateTime = this._t;\n        } else {\n            this.trail.updateHead();\n        }\n\n        const scaledTime = this._t;\n\n        this.lastTargetPosition.copy(this.currentTargetPosition);\n\n        this.currentTargetPosition.x = Math.sin(scaledTime) * areaScale;\n        this.currentTargetPosition.y = Math.sin(scaledTime * 1.1) * areaScale;\n        this.currentTargetPosition.z = Math.sin(scaledTime * 1.6) * areaScale;\n\n        // console.log(this.currentTargetPosition)\n\n        this.lastDirection.copy(this.currentDirection);\n\n        this.currentDirection.copy(this.currentTargetPosition);\n        this.currentDirection.sub(this.lastTargetPosition);\n        this.currentDirection.normalize();\n\n        this.tempUp.crossVectors(this.currentDirection, this.baseForward);\n\n        this.tempRotationMatrix.identity();\n\n        const angle = this.baseForward.angleTo(this.currentDirection);\n        if (Math.abs(angle) > .01 && this.tempUp.lengthSq() > .001) {\n            this.tempQuaternion.setFromUnitVectors(this.baseForward, this.currentDirection);\n            this.tempQuaternion.normalize();\n            this.tempRotationMatrix.makeRotationFromQuaternion(this.tempQuaternion);\n            this.lastRotationMatrix.copy(this.tempRotationMatrix);\n        }\n\n        this.tempTranslationMatrix.identity();\n        this.tempTranslationMatrix.makeTranslation(\n            this.currentTargetPosition.x,\n            this.currentTargetPosition.y,\n            this.currentTargetPosition.z\n        );\n\n        // this.tempTranslationMatrix.multiply(this.tempRotationMatrix);\n        this.tempRotationMatrix.multiply(this.tempTranslationMatrix);\n\n        this.trailTarget.matrix.identity();\n        // this.trailTarget.applyMatrix4(this.tempTranslationMatrix);\n        this.trailTarget.applyMatrix4(this.tempRotationMatrix);\n        this.trailTarget.updateMatrixWorld();\n    }\n\n    makeCircle() {\n        let circlePoints = [];\n        const twoPI = Math.PI * 2;\n        let index = 0;\n        const scale = 10.0;\n        const inc = twoPI / 32.0;\n\n        for (let i = 0; i <= twoPI + inc; i += inc) {\n            circlePoints[index] = new THREE.Vector3(Math.cos(i) * scale, Math.sin(i) * scale, 0);\n            index++;\n        }\n        return circlePoints\n    }\n\n    makeTrailTarget(points) {\n        const starShape = new THREE.Shape(points);\n\n        const extrusionSettings = {\n            depth: 2, size: 2, height: 1, curveSegments: 3,\n            bevelThickness: 1, bevelSize: 2, bevelEnabled: false,\n            material: 0, extrudeMaterial: 1\n        };\n\n        const starGeometry = new THREE.ExtrudeGeometry(starShape, extrusionSettings);\n\n        const trailTargetMaterial = new THREE.MeshPhongMaterial({\n            color: 0xa0adaf,\n            shininess: 10,\n            specular: 0x111111,\n            flatShading: false,\n        });\n\n        const trailTarget = this.trailTarget = new THREE.Mesh(starGeometry, trailTargetMaterial);\n        trailTarget.receiveShadow = false;\n\n        this.scene.add(trailTarget);\n    }\n}","import * as THREE from \"three\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {TrailTesting} from \"@/visual/helpers/TrailTesting\";\nimport {dbgSimulateLoaded} from \"@/helpers/EventTypes\";\n\nexport class TrailTestScene {\n    constructor(scene, cameraController) {\n        this.scene = scene\n        this.cameraController = cameraController\n\n        this._makeSomeLight()\n\n        this.trailTester = new TrailTesting(this.scene)\n\n        dbgSimulateLoaded()\n    }\n\n    _makeSomeLight() {\n        // const light = new THREE.DirectionalLight('hsl(0, 100%, 100%)')\n        // light.position.set(0, 10, 1000)\n        // this.scene.add(light)\n\n        const ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n        this.scene.add(ambientLight);\n    }\n\n    update(delta) {\n        this.trailTester.update(delta)\n    }\n\n    dispose() {\n        clearObject(this.scene)\n    }\n}\n","import * as THREE from \"three\";\nimport {clearObject} from \"@/helpers/3D\";\nimport {dbgSimulateLoaded} from \"@/helpers/EventTypes\";\nimport {NodeObject} from \"@/visual/NodeObject\";\nimport {NodeInfo} from \"@/helpers/data/NodeInfo\";\nimport TWEEN from \"tween.js\";\n\nexport class NodeObjTestScene {\n    constructor(scene, camera) {\n        this.scene = scene\n        this.camera = camera\n\n        this._makeSomeLight()\n\n        dbgSimulateLoaded()\n\n        this.nodeObj = new NodeObject(new NodeInfo({\n            node_address: 'thor123',\n            status: 'Active',\n            bond: 100000000000000000,\n            version: '1.96.2',\n        }))\n\n        this.nodeObj.labelObj.visible = false\n\n        this.nodeObj.material.uniforms.rust.value = -1.0\n\n        new TWEEN.Tween(this.nodeObj.material.uniforms.rust)\n            .to({value: 1.0}, 2000)\n            .repeat(Infinity)\n            .yoyo(true)\n            .start()\n\n        this.nodeObj.o.position.set(0, 0, 1500)\n        scene.add(this.nodeObj.o)\n\n        this.camera.zoom = 100\n    }\n\n    _makeSomeLight() {\n        // const light = new THREE.DirectionalLight('hsl(0, 100%, 100%)')\n        // light.position.set(0, 10, 1000)\n        // this.scene.add(light)\n\n        const ambientLight = new THREE.AmbientLight(0xffffff); // soft white light\n        this.scene.add(ambientLight);\n    }\n\n    update(delta) {\n        this.nodeObj.update(delta * 0.1)\n    }\n\n    dispose() {\n        clearObject(this.scene)\n    }\n}\n","import { render } from \"./MainScreen.vue?vue&type=template&id=854de456\"\nimport script from \"./MainScreen.vue?vue&type=script&lang=js\"\nexport * from \"./MainScreen.vue?vue&type=script&lang=js\"\n\nimport \"./MainScreen.vue?vue&type=style&index=0&id=854de456&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=4e003472\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4e003472&lang=css\"\n\nimport exportComponent from \"/Users/tirinox/Projects/thorviz/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue'\nimport App from './App.vue'\nimport CameraControls from \"camera-controls\";\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\n\n/* import specific icons */\nimport {faCopy, faArrowDownUpLock, faArrowRight} from '@fortawesome/free-solid-svg-icons'\n\nimport * as THREE from 'three';\nimport {emitter} from \"@/helpers/EventTypes\";\n\nimport { plugin as VueTippy } from 'vue-tippy'\nimport 'tippy.js/dist/tippy.css' // optional for styling\nimport 'tippy.js/themes/translucent.css'\nimport {isWebGL2Supported} from \"webgl-detector\";\n\nif(!isWebGL2Supported()) {\n    alert('WebGL is not supported!')\n}\n\nCameraControls.install({THREE});\n\n/* add icons to the library */\nlibrary.add(faCopy, faArrowRight, faArrowDownUpLock)\n\nconst app = createApp(App);\napp.component('font-awesome-icon', FontAwesomeIcon)\napp.use(VueTippy, {\n    directive: \"tippy\", // => v-tippy\n    component: 'tippy', // => <tippy/>\n    flipDuration: 0,\n    defaultProps: {\n        placement: 'top'\n    },\n    popperOptions: {\n        modifiers: {\n            preventOverflow: {\n                enabled: false\n            }\n        }\n    }\n})\napp.config.globalProperties.emitter = emitter;\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthorviz\"] = self[\"webpackChunkthorviz\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(947); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_MainScreen","class","_createElementBlock","_createElementVNode","ref","tabindex","onKeypress","$options","onMousemove","onMouseenter","onMouseleave","onClick","_createVNode","_component_FPSCounter","$data","_component_LoadingIndicator","key","_component_ControlPanel","onModeSelected","_KeepAlive","_component_NodeDetailsWindow","node","onClose","IsProduction","process","console","log","Live","Config","DataSource","NodesURL","Nodes","PollPeriod","LastBlock","ReactRandomDelay","NodeJuggler","Enabled","Font","Main","Effects","Bloom","Strength","Threshold","Radius","Controls","Camera","Distance","Min","Max","Start","AzimuthAngleLimit","PolarAngleLimit","MouseMoveStrength","Animation","Duration","DistanceWhenZoomed","Shift","X","Scene","DebugMode","InitialMode","Background","Sky","SkyBox","SkyBoxExt","NodeObject","Simple","PlaneScale","MinRadius","MaxScale","MinScale","ScaleFactor","RadiusFactor","ReactStatus","DurationIn","DurationOut","BloatScale","ReactSlash","Force","RedDuration","Globe","Details","NodeElevation","TextureMap","Clouds","ElevationScale","Opacity","Texture","Atmosphere","InnerAtmosphere","Physics","BaseForce","RepelForce","Startup","SimulationSteps","DeltaTime","BaseFriction","MaxSpeedSq","Math","pow","Attractor","Flat","DeltaZ","Debug","ShowFPS","Renderer","LogZBuffer","Colors","LightningBlue","YggdrasilGreen","MidgardTurqoise","NightBlack","_toDisplayString","Number","toFixed","countObjects","parent","numOfMeshes","traverse","clearObject","obj","remove","apply","children","longLatTo3D","long","lat","r","phi","PI","theta","spherical","THREE","setFromSpherical","distanceXY","v1","v2","dx","x","dy","y","sqrt","EventTypes","FullyLoaded","DataSourceTick","Activity","emitter","mitt","dbgEmmitAfter","name","after_ms","setTimeout","emit","dbgSimulateLoaded","props","updatePeriod","type","default","data","fps","objCount","activityIndicator","lastUpdateTime","methods","pokeActivity","this","update","delta","scene","Date","now","unmounted","off","mounted","on","__exports__","defaultValue","undefined","dec2hex","dec","toString","padStart","Random","max","floor","random","min","array","index","getRandomInt","length","splice","xMin","xMax","yMin","yMax","zMin","zMax","Vector3","getRandomFloat","cx","cy","phase","cos","sin","ceil","len","arr","Uint8Array","window","crypto","getRandomValues","Array","from","join","Section","constructor","p1","p2","whichSide","A","B","C","D","sign","center","nearestPoint","dot","len_sq","param","pDistance","xo","yo","nearestPoint1","Util","group","sumX","_","item","sumY","p3","pt","threePts","v3","d1","_signHelper","d2","d3","hasNeg","hasPos","shortNumber","mantissa","postFix","numbro","format","average","RUNE","shortRune","smoothStep","value","PhysicalObject","mass","force","velocity","friction","attractors","dt","forEach","attr","applyForce","acceleration","multiplyScalar","copy","clone","add","clamp","lengthSq","setLength","realObject","position","nullifyForce","set","radius","applyForceTo","direction","repel","physObj","forceMult","thisPos","otherPos","d","distanceTo","minDistance","lineDir","sub","normalize","negate","boundingBox","minX","minY","maxX","maxY","shootOut","o","createBillboardMaterial","baseMaterial","opts","createDerivedMaterial","Object","assign","vertexMainOutro","EVENT_TYPE","freeze","CREATE","DESTROY","SLASH","IP_ADDRESS","STATUS","VERSION","FORCED_LEAVE","REQUESTED_LEAVE","AWARD","BOND_CHANGE","OBSERVE_CHAIN","ACTIVE_BLOCK_HEIGHT","NodeEvent","prevNode","currValue","prevValue","nodeSet","isTramp","address","addr","SEC_PER_BLOCK","THOR_DECIMAL","THOR_DECIMAL_INV","thorToFloat","parseFloat","NodeInfo","status","jail","bond_providers","preflight_status","node_address","bond","activeBlockHeight","active_block_height","bondAddress","bond_address","statusSince","status_since","requestedToLeave","requested_to_leave","forcedToLeave","forced_to_leave","leaveHeight","leave_height","IPAddress","ip_address","version","slashPoints","slash_points","releaseHeight","release_height","reason","currentAward","current_award","observeChains","chain","height","preflightStatus","code","bondProviders","fee","providers","push","shortAddress","substring","IPInfo","flag","isActive","NodeStatus","Active","isStandby","Standby","Ready","Whitelisted","Disabled","Unknown","noCfg","geomSize","geometry","simpleGeometry","SlashColor","NormalLabelZ","CirclePackFactor","super","normalizedBond","_makeSphere","_makeLabel","_reactingToSlash","_elevated","elevated","v","Boolean","material","uniforms","saturation","uniformsNeedUpdate","_getSphereColor","color","st","getRandomSample","mesh","_makeSimpleSphere","_makeCoolSphere","renderOrder","scale","calculateScale","setScalar","z","randFloat","_makeMaterial","initRust","vertexShader","StdVertexShader","fragmentShader","FragShader1","transparent","depthTest","depthWrite","nameTextObj","Text","text","slice","font","fontWeight","fontSize","anchorX","anchorY","outlineWidth","sync","MeshBasicMaterial","labelObj","dispose","nodeObjList","sum_r2","nodeObj","time","updateFromCamera","camera","dir","react","event","reactChain","reactSlash","reactStatusChange","reactVersion","rust","_getRust","chainReactionVelocity","pos","perp","cross","_animateTransitionShininess","slashForce","_animateScale","savedColor","newStatus","getChainHeightLagAllSeconds","a","targetScaleOfNormal","durationIn","durationOut","easing","TWEEN","normalScale","targetScale","to","start","transitionShininess","onComplete","Simulation","_objects","repelForce","rBush","RBush","repelEnabled","getByName","addObject","existing","warn","removeObject","error","_repelForceCalculation","vicinity","search","rBushLeaf","_updateObject","isNaN","load","doNSteps","n","step","physicalObjects","objectPositions","allNames","clear","size","entries","TitleLabel3D","rotAngle","billboard","t","label","fillOpacity","textAlign","rotateX","animDuration","animDistance","easeType","c","opacity","animateIn","animateOut","kill","expandedDuration","ModeBase","active","isFlat","_labelsHash","handleObject","reactEvent","nodes","makeLabel","rotation","bb","moveIfExists","generateId","findLabelByKey","titleLabel","onEnter","_triggerOnEnter","b","onLeave","_triggerOnLeave","clearLabels","killLabelByKey","constCoeff","linearCoeff","quadraticCoeff","relaxRadius","applyForceToDistance","distance","toPosition","fromPosition","f","getForce","magnitude","objPosition","infiniteRadius","INFINITE","AttractorFlat","squishZ","phyObj","zDist","fZ","abs","AttractorShape","triangles","centerOf","allSectors","sectors","triangle","p","relaxed","tri","pointInTriangle","nearestSector","sector","THORChainLogoShape","transformed","original","pts","ModeNormal","_circleRadius","tcAttractor","ANY_STATUS","ModeStatus","_sideDistance","_standbyAttractors","bestAttractors","statusesCounted","standbyCount","activeCount","otherCount","VirtualObject","attractor","_radius","fric","CirclePack","boundRadius","iterSteps","simulation","metaAttractor","addCircle","arrangeAroundCenter","deltaAngle","angle","pack","steps","getResults","results","IPAddressInfo","j","ipAddress","countryCode","country","city","latitude","longitude","providerName","getFlagEmoji","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","UNKNOWN","IPAddressInfoLoader","expireMinutes","_key","url","ip","ips","axios","info","loadFromCache","lscache","saveToCache","ipAddresses","requestList","addressChunks","ipListChunk","chunkInfoDic","loadFromService","replace","component","ModeProvider","_attractorBanish","circlePacker","_transferAttractorsPositionFromPacker","groupName","refineProviderName","objList","_createProviderAttractors","mostPopularProvider","mostPopularCount","nativeName","provider","list","sortedEntries","pair","items","_makeAttractor","_makeLabels","circleRadius","estimateRadiusOfGroup","_makeLabelForGroup","countNodes","mostPopularName","packedPositions","isGarbage","Version","components","parseInt","isInvalid","greater","less","equal","inc","xLimit","yLimit","asInt","rawVersions","fromString","versions","loadVersions","nodeObjects","path","activePath","activeNodes","no","activeVersions","getVersionSet","maxActiveVersion","maximumVersion","minActiveVersion","minimumVersion","otherActiveVersions","otherActiveVersionsStr","nodeObject","versionStr","target","comment","isLatest","objects","mostPopular","maxVersion","ModeVersion","_attractorsByKey","_attractorsByVersion","_previousKeys","_versionDist","_packAttractorPositions","getSemanticVersionsDistribution","gap","radAttr","nGroups","radSum","versionDesc","e","affectedKeys","desc","tag","keysToRemove","ModeBond","nameToAttractor","_noBondAttractor","_positionateOnSpiral","xScale","deltaRadius","deltaDeltaRadius","deltaDeltaAngle","i","_addAttractor","_positionateOnGrid","columns","rows","gapSize","width","halfWidth","halfHeight","col","row","ModeGeo","_banishAttractor","_nameToAttractor","_coordToAttractor","_createAttractorsStacked","_makeGlobe","_putInGlobe","_destroyGlobe","globeMesh","textureLoader","globeConfig","AtmosphereFragmentShader","globeTexture","materialClouds","side","blending","cloudMesh","cloudMesh2","g","_createAttractors","attractorHere","position3d","_coordToStack","stackObj","stack","basicRadius","sortedStack","NodeGroupModes","Normal","Status","Provider","Bond","Geo","NodeGroup","holder","_currentIdent","_modeNormal","_modeStatus","_modeProvider","_modeVersion","_modeBond","_modeGeo","_selector","_selectedModeHandler","mode","genIdent","_placeNodeObject","randomOnCircle","createNewNode","ident","destroyNode","nodeAddress","newMode","_mode","delay","otherObj","setElevatedNode","isCurrentModeFlat","NodeTracker","prevNodeSet","currNodeSet","prev","curr","extractEvents","events","addEvent","k","addedNodeAddresses","nameSet","byAddress","removeNodeAddresses","EVENT_TYPES","keyTypeTable","commonNodes","currNode","keys","keysChanged","eventType","DebugNodeJuggler","period","tick","enabled","juggleStatus","juggleVersion","memorizeVersions","handleNodes","_juggleNodes","_juggleNodesStatus","_juggleNodesVersion","nodesIn","getRandomIntRange","nodesOut","filteredByStatus","sampleRandomly","setStatusAll","_nextVersion","vString","nUpgrade","that","oldVersion","TYPICAL_BLOCK_TIME","ETH","BTC","BCH","LTC","BNB","THOR","DOGE","TERRA","GAIA","AVAX","NodeSet","calculate","total","_nodesWithNames","totalBond","maxSlashNode","trampCount","maxAgeNode","ranks","_makeRanking","slash","age","award","topHeights","calculateTopBlockHeight","topVersion","calculateTopVersion","criteria","order","sortedArr","names","fromEntries","findByAddress","sortedNodes","attribute","asc","sortedByBond","sortedByAge","bondPercentOfTotal","_calculateTopBlockOneChain","nMin","heights","heightSorted","h","sort","reverse","occurrences","allChains","Set","counters","currentVersion","estimateTimestampAtBlock","topThorHeight","blockDiff","getChainHeightLagBlocks","getChainHeightLagSeconds","mult","sum","lag","avg","URLDataSource","baseUrl","_isRunning","_timer","callback","ipAddressLoader","run","_tick","then","setInterval","stop","clearInterval","isRunning","rawData","headers","result","dataProcess","NodeDataSource","json","ipInfoDic","loadBunch","LastBlockDataSource","chainHeights","chainItem","DataStorage","lastBlock","lastNodes","MainScene","prevNodes","nodeGroup","_firstTime","_runDataSource","_fullyLoaded","_nodeJuggler","nodeDataSource","handleData","bind","lastBlockSource","tracker","findNodeByAddress","pick","defaultQuad","defaultVertexShader","defaultFragmentShader","ScreenQuad","top","left","texture","uTexture","uSize","frustumCulled","_pixels","_componentSetters","setWidth","setHeight","setTop","setLeft","_components","screenSize","setSize","setOffset","setScreenSize","pi","call","w","BackgroundBase","install","quad","BgShader","_Fragment","_renderList","_hoisted_2","emits","selectedMode","activeOnly","computed","modes","isButtonSelectedClass","modeName","setSceneMode","$emit","content","_hoisted_31","_Transition","$props","onKeyup","_hoisted_1","_component_font_awesome_icon","icon","_hoisted_4","_hoisted_6","_hoisted_10","_hoisted_12","_hoisted_16","_hoisted_19","_hoisted_21","href","_hoisted_23","_hoisted_25","_hoisted_28","_hoisted_32","_hoisted_34","_hoisted_36","_hoisted_38","_hoisted_41","_hoisted_44","title","_hoisted_48","_hoisted_49","STATUS_PROPS","emoji","hasIP","statusEmoji","nodeStatusClass","timestamp","toISOString","isOldest","ageRank","round","nodeBond","nodeBondRank","nodeBondPercent","ipAddressInfoLink","slashPointsRank","chainLag","isUpToDataVersion","copyNodeAddress","close","$refs","modal","focus","CameraController","domElement","_createCamera","_createCameraControl","_animating","controlsEnabled","reset","controls","projectToScreen","worldVector","updateProjectionMatrix","project","innerWidth","innerHeight","CameraControls","cfg","dragToOffset","maxDistance","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","cameraInspectsObject","onResize","canvas","clientWidth","clientHeight","aspect","_getEndQuaternion","lookAtThis","currPos","currQ","quaternion","lookAt","endQuaternion","cameraLookAtNode","flat","oldCameraPos","oldCameraQuaternion","targetLookAt","deltaVector","restoreCamera","animTime","onUpdate","dots","timer","beforeUnmount","TrailRenderer","orientToMovement","nodeCenters","lastNodeCenter","currentNodeCenter","lastOrientationDir","nodeIDs","currentLength","currentEnd","currentNodeID","MaxHeadVertices","LocalOrientationTangent","LocalOrientationDirection","LocalHeadOrigin","PositionComponentCount","UVComponentCount","IndicesPerFace","FacesPerQuad","Shader","BaseVertexVars","TexturedVertexVars","BaseFragmentVars","TexturedFragmentVars","VertexShaderCore","BaseVertexShader","BaseFragmentShader","TexturedVertexShader","TexturedFragmentShader","createMaterial","customUniforms","trailLength","verticesPerNode","minID","maxID","dragTexture","maxTrailLength","textureTileFactor","headColor","tailColor","alphaTest","blendSrc","blendDst","blendEquation","createBaseMaterial","createTexturedMaterial","prototype","initialize","localHeadWidth","localHeadGeometry","targetObject","deactivate","destroyMesh","initializeLocalHeadGeometry","initializeGeometry","initializeMesh","VerticesPerNode","vertex","vertexCopy","FacesPerNode","FaceIndicesPerNode","vertexCount","faceCount","Float32Array","nodeVertexIDs","positions","uvs","indices","Uint32Array","nodeIDAttribute","setUsage","setAttribute","nodeVertexIDAttribute","nodeCenterAttribute","positionAttribute","uvAttribute","indexAttribute","setIndex","zeroVertices","getAttribute","needsUpdate","updateRange","count","zeroIndices","getIndex","formInitialFaces","connectNodes","dynamic","matrixAutoUpdate","setDrawRange","updateUniforms","advance","tempMatrix4","updateMatrixWorld","matrixWorld","advanceWithTransform","advanceWithPositionAndOrientation","nextPosition","orientationTangent","advanceGeometry","tangent","transformMatrix","positionAndOrientation","nextIndex","updateNodePositionsFromTransformMatrix","updateNodePositionsFromOrientationTangent","disconnectIndex","disconnectNodes","updateNodeID","updateHead","nodeIndex","id","baseIndex","offset","updateNodeCenter","nodeCenter","tempQuaternion","tempOffset","tempLocalHeadGeometry","setFromUnitVectors","applyQuaternion","positionIndex","transformedHeadVertex","tempMatrix3","tempPosition","worldOrientation","tempDirection","getMatrix3FromMatrix4","matrix3","matrix4","elements","applyMatrix4","applyMatrix3","returnObj","srcNodeIndex","destNodeIndex","srcVertexIndex","destVertexIndex","faceIndex","activate","TrailTesting","baseTrailMaterial","circlePoints","makeCircle","makeTrailTarget","makeTrail","_makeFlyState","trail","trailTarget","updateColors","trialColor","lastTrailUpdateTime","_t","lastDirection","lastTargetPosition","lastRotationMatrix","currentTargetPosition","currentDirection","baseForward","tempUp","tempRotationMatrix","tempTranslationMatrix","areaScale","trailGrowTime","scaledTime","crossVectors","identity","angleTo","makeRotationFromQuaternion","makeTranslation","multiply","matrix","twoPI","points","starShape","extrusionSettings","depth","curveSegments","bevelThickness","bevelSize","bevelEnabled","extrudeMaterial","starGeometry","trailTargetMaterial","shininess","specular","flatShading","receiveShadow","TrailTestScene","cameraController","_makeSomeLight","trailTester","ambientLight","NodeObjTestScene","visible","repeat","Infinity","yoyo","zoom","LoadingIndicator","NodeDetailsWindow","ControlPanel","FPSCounter","isLoading","showFps","mouseEnterX","mouseEnterY","tickCounter","sceneMode","fullyLoaded","nodeDetailsVisible","nodeDetailsIsLeft","nodeToViewDetails","zoomedToNode","shallowRef","onKeyDown","choseWindowSide","mouseEvent","clientX","onMouseMove","clientY","rotate","pickIntersection","_pickObject","pickedName","object","onMouseEnter","onMouseLeave","thoughtful","raycaster","pickPosition","getCanvasRelativePosition","setFromCamera","intersectedObjects","intersectObjects","namedObjects","pickedObject","startsWith","_onPickNodeObject","rect","getBoundingClientRect","resizeRendererToDisplaySize","renderer","needResize","composer","_width","_height","bloomPass","bg","render","clock","getDelta","document","visibilityState","requestAnimationFrame","makeSkybox","makeRenderer","antialias","logarithmicDepthBuffer","devicePixelRatio","setPixelRatio","renderScene","RenderPass","EffectComposer","addPass","bloomCfg","UnrealBloomPass","buildScene","onFullyLoaded","onDataArrived","onCloseDetails","MainScreen","created","preloading","preloadFont","characters","isWebGL2Supported","alert","library","faCopy","faArrowRight","faArrowDownUpLock","app","createApp","App","FontAwesomeIcon","use","VueTippy","directive","flipDuration","defaultProps","placement","popperOptions","modifiers","preventOverflow","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","getter","__esModule","definition","defineProperty","enumerable","get","globalThis","Function","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}